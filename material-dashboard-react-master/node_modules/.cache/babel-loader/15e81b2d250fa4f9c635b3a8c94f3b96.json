{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\src\\\\views\\\\Group\\\\Group.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport axios from \"axios\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Typography from '@material-ui/core/Typography';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext'; //import Container from \"@material-ui/core/Container\";\n\nimport Select from \"@material-ui/core/Select\";\nimport Table from \"components/Table/Table.js\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Drawer from '@material-ui/core/Drawer';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport IconButton from '@material-ui/core/IconButton';\nimport CheckSharpIcon from '@material-ui/icons/CheckSharp';\nimport ClearSharpIcon from '@material-ui/icons/ClearSharp';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Card from \"components/Card/Card.js\";\nimport CardAvatar from \"components/Card/CardAvatar.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport Input from '@material-ui/core/Input';\nimport { UserContext } from \"../../UserContext\";\nimport socketIOClient from \"socket.io-client\"; // const ENDPOINT = \"https://happy-home-ipl-2020.herokuapp.com/\";\n\nvar ENDPOINT = \"http://localhost:4000\";\nvar drawerWidth = 100;\nvar useStyles = makeStyles(function (theme) {\n  return {\n    margin: {\n      margin: theme.spacing(1)\n    },\n    image: {\n      height: \"200px\"\n    },\n    container: {\n      backgroundImage: \"url(\\\"../RCB/5334.jpg\\\")\",\n      backgroundSize: 'cover'\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    drawerHeader: _objectSpread(_objectSpread({\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1)\n    }, theme.mixins.toolbar), {}, {\n      justifyContent: 'flex-start'\n    }),\n    sold: {\n      color: \"green\"\n    },\n    cardCategoryWhite: {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    cardTitleWhite: {\n      color: \"#FFFFFF\",\n      marginTop: \"0px\",\n      minHeight: \"auto\",\n      fontWeight: \"300\",\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n      marginBottom: \"3px\",\n      textDecoration: \"none\"\n    },\n    large: {\n      width: theme.spacing(12),\n      height: theme.spacing(12)\n    }\n  };\n});\nexport default function ImgMediaCard() {\n  window.onbeforeunload = function () {\n    return setUser(null);\n  };\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      setUser = _useContext.setUser;\n\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      auctionStatus = _useState2[0],\n      setAuctionStatus = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      playerName = _useState4[0],\n      setPlayerName = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      playerImage = _useState6[0],\n      setPlayerImage = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      team = _useState8[0],\n      setTeam = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      role = _useState10[0],\n      setRole = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      battingStyle = _useState12[0],\n      setBattingStyle = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      bowlingStyle = _useState14[0],\n      setBowlingStyle = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      open = _useState16[0],\n      setOpen = _useState16[1];\n\n  var _useState17 = useState(),\n      _useState18 = _slicedToArray(_useState17, 2),\n      bidAmount = _useState18[0],\n      setBidAmount = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      confirmDialogOpen = _useState20[0],\n      setConfirmDialogOpen = _useState20[1];\n\n  var _useState21 = useState(),\n      _useState22 = _slicedToArray(_useState21, 2),\n      pid = _useState22[0],\n      setPid = _useState22[1];\n\n  var _useState23 = useState(null),\n      _useState24 = _slicedToArray(_useState23, 2),\n      selectedOwner = _useState24[0],\n      setSelectedOwner = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      backDropOpen = _useState26[0],\n      setBackDropOpen = _useState26[1];\n\n  var _useState27 = useState(),\n      _useState28 = _slicedToArray(_useState27, 2),\n      playerStatus = _useState28[0],\n      setPlayerStatus = _useState28[1];\n\n  var _useState29 = useState([]),\n      _useState30 = _slicedToArray(_useState29, 2),\n      AuctionTableData = _useState30[0],\n      setAuctionTableData = _useState30[1];\n\n  var _useState31 = useState([{\n    desc: \"Captain\",\n    name: \"\"\n  }, {\n    desc: \"ViceCaptain\",\n    name: \"\"\n  }]),\n      _useState32 = _slicedToArray(_useState31, 2),\n      captainTableData = _useState32[0],\n      setCaptainTableData = _useState32[1];\n\n  var _useState33 = useState([]),\n      _useState34 = _slicedToArray(_useState33, 2),\n      myTeamTableData = _useState34[0],\n      setMyTeamTableData = _useState34[1];\n\n  var _useState35 = useState(false),\n      _useState36 = _slicedToArray(_useState35, 2),\n      isUserMemberOfGroup = _useState36[0],\n      setGroupMember = _useState36[1];\n\n  var _useState37 = useState(true),\n      _useState38 = _slicedToArray(_useState37, 2),\n      selectCaptain = _useState38[0],\n      setSelectCaptain = _useState38[1];\n\n  var _useState39 = useState(null),\n      _useState40 = _slicedToArray(_useState39, 2),\n      selectedPlayer = _useState40[0],\n      setSelectedPlayer = _useState40[1];\n\n  var handleDrawerClose = function handleDrawerClose() {\n    setOpen(false);\n  };\n\n  var handleModalClose = function handleModalClose() {\n    setConfirmDialogOpen(false);\n  };\n\n  useEffect(function () {\n    var socket = socketIOClient(ENDPOINT);\n    socket.on(\"connect\", function () {\n      console.log(\"client connected\");\n      socket.on(\"playerChange\", /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(newPlayerDetails, balanceDetails) {\n          var userBalance, role, Team, battingStyle, bowlingStyle, pid, fullName;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  setAuctionStatus(\"RUNNING\");\n                  console.log(\"player change\");\n                  userBalance = [];\n                  role = newPlayerDetails.role, Team = newPlayerDetails.Team, battingStyle = newPlayerDetails.battingStyle, bowlingStyle = newPlayerDetails.bowlingStyle, pid = newPlayerDetails.pid, fullName = newPlayerDetails.fullName;\n                  console.log(balanceDetails); // console.log(user.uid)\n\n                  if (localStorage.getItem(\"admin\") === \"false\") {\n                    userBalance = balanceDetails.filter(function (balance) {\n                      return balance.uid === parseInt(localStorage.getItem(\"uid\"), 10);\n                    });\n                  } else {\n                    userBalance = balanceDetails;\n                  } // const userBalance = user && user.admin ? balanceDetails:[balanceDetails.filter(balance => balance.uid === user.uid)]\n\n\n                  console.log(userBalance);\n                  setPlayerImage(\"\".concat(process.env.PUBLIC_URL, \"/\").concat(pid, \".JPG\"));\n                  setRole(role);\n                  setTeam(Team);\n                  setBattingStyle(battingStyle);\n                  setBowlingStyle(bowlingStyle);\n                  setPlayerName(fullName);\n                  setPid(pid);\n                  setAuctionTableData(userBalance);\n\n                case 15:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    });\n\n    var a = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var mygroup, myUrl, teamResponse, myres, tournamentStart, response, myCapName, myViceCapName, isGroupMember, tmp;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // get start of tournamnet (i.e. start of 1st match)\n                mygroup = 1;\n                myUrl = \"/user/myteam/\".concat(localStorage.getItem(\"uid\"));\n                console.log(\"in Admin Auction:  \".concat(myUrl));\n                _context2.next = 5;\n                return axios.get(myUrl);\n\n              case 5:\n                teamResponse = _context2.sent;\n                console.log(teamResponse.status); // console.log(teamResponse.data);\n\n                console.log(teamResponse.data[0].players);\n                setMyTeamTableData(teamResponse.data[0].players);\n                _context2.next = 11;\n                return axios.get(\"/group/getfirstmatch/\".concat(mygroup));\n\n              case 11:\n                myres = _context2.sent;\n                tournamentStart = myres.data.matchStartTime; // get captain and vice captain of user\n\n                response = \"\";\n                myUrl = \"/user/getcaptain/\".concat(localStorage.getItem(\"uid\"));\n                _context2.next = 17;\n                return axios.get(myUrl);\n\n              case 17:\n                response = _context2.sent;\n                myCapName = \"\";\n                myViceCapName = \"\";\n                isGroupMember = false;\n\n                if (response.status === 200) {\n                  console.log(response.data.length);\n                  console.log(response.data);\n\n                  if (response.data.length > 0) {\n                    myCapName = response.data[0].captainName;\n                    myViceCapName = response.data[0].viceCaptainName;\n                    isGroupMember = true;\n                  }\n                }\n\n                tmp = [];\n                tmp.push({\n                  desc: \"Captain\",\n                  name: myCapName\n                });\n                tmp.push({\n                  desc: \"ViceCaptain\",\n                  name: myViceCapName\n                });\n                setCaptainTableData(tmp);\n                console.log(\"Details: \".concat(tmp[0].name, \"  \").concat(tmp[1].name, \"  \").concat(isGroupMember)); // setAuctionStatus(response.data)\\;\n\n                setGroupMember(isGroupMember); // console.log(`Is group member ${isUserMemberOfGroup}`);\n                // if (isGroupMember) {\n                //     await startAuction(response.data);\n                // }\n\n              case 28:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function a() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    a();\n  }, []);\n\n  var startAuction = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(status) {\n      var response, _response;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(status === \"PENDING\")) {\n                _context3.next = 5;\n                break;\n              }\n\n              _context3.next = 3;\n              return axios.get(\"/group/setauctionstatus/1/RUNNING\");\n\n            case 3:\n              response = _context3.sent;\n\n              if (response.data) {\n                setAuctionStatus(\"RUNNING\");\n              }\n\n            case 5:\n              if (!(status === \"RUNNING\")) {\n                _context3.next = 10;\n                break;\n              }\n\n              _context3.next = 8;\n              return axios.get(\"/group/getauctionplayer/1\");\n\n            case 8:\n              _response = _context3.sent;\n              console.log(_response);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function startAuction(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleOwnerChange = function handleOwnerChange(event) {\n    setSelectedOwner(event.target.value);\n    setSelectedPlayer(event.target.value);\n  };\n\n  function sellPlayer() {\n    return _sellPlayer.apply(this, arguments);\n  }\n\n  function _sellPlayer() {\n    _sellPlayer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              console.log(\"In SellPlayer\"); // let response = await fetch(`/auction/add/1/${selectedOwner}/${pid}/${bidAmount}`);\n              // if (response.status === 707) {\n              //     setPlayerStatus(\"Already Purchased\")\n              // }\n              // if (response.status === 706) {\n              //     setPlayerStatus(\"User does not belong to this group\");\n              // }\n              // if (response.status === 704) {\n              //     setPlayerStatus(\"Invalid Player\")\n              // }\n              // if (response.status === 708) {\n              //     setPlayerStatus(\"Insufficient Balance\")\n              // }\n              // if (response.status === 200) {\n              //     setPlayerStatus(\"SOLD\");\n              //     const balance = await axios.get(\"/user/balance/all\")\n              //     setAuctionTableData(balance.data);\n              // }\n\n              setConfirmDialogOpen(false);\n              setBackDropOpen(true);\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _sellPlayer.apply(this, arguments);\n  }\n\n  function unsellPlayer() {\n    return _unsellPlayer.apply(this, arguments);\n  } //     async function AdminAuction() {\n  //         return <div className={classes.root}>\n  //             <Grid container justify=\"center\" alignItems=\"center\">\n  //                 <Grid item xs={12}>\n  //                     <div>\n  //                         <Grid container justify=\"center\" alignItems=\"center\" >\n  //                             <GridItem xs={12} sm={12} md={12} lg={12} >\n  //                                 <Card profile>\n  //                                     <CardBody profile>\n  //                                         <Table\n  //                                             tableHeaderColor=\"warning\"\n  //                                             tableHead={[\"Description\", \"Player Name\"]}\n  //                                             tableData={captainTableData.map(element => {\n  //                                                 const arr = [element.desc, element.name]\n  //                                                 return { data: arr, collapse: [] }\n  //                                             })}\n  //                                         />\n  //                                         <Button\n  //                                             variant=\"contained\"\n  //                                             color=\"secondary\"\n  //                                             size=\"small\"\n  //                                             className={classes.button}\n  //                                             onClick={() => {  setOpen(true); }}>\n  //                                             Set Captain\n  //                                         </Button>\n  //                                         <Button\n  //                                             variant=\"contained\"\n  //                                             color=\"secondary\"\n  //                                             size=\"small\"\n  //                                             className={classes.button}\n  //                                             onClick={() => {  setOpen(true); }}>\n  //                                             Set ViceCaptain\n  //                                         </Button>\n  //                                     </CardBody>\n  //                                 </Card>\n  //                             </GridItem>\n  //                         </Grid>\n  //                     </div>\n  //                 </Grid>\n  //             </Grid>\n  //             <Table\n  //                 tableHeaderColor=\"warning\"\n  //                 tableHead={[\"Owner\", \"Player Count\", \"Balance\"]}\n  //                 tableData={AuctionTableData.map(element => {\n  //                     const arr = [element.userName, element.playerCount, element.balance]\n  //                     return { data: arr, collapse: [] }\n  //                 })}\n  //             />\n  //             <Dialog aria-labelledby=\"simple-dialog-title\" open={backDropOpen}\n  //                 onClose={() => setBackDropOpen(false)} >\n  //                 <DialogTitle id=\"simple-dialog-title\" className={classes.sold}>{playerStatus}</DialogTitle>\n  //             </Dialog>\n  //             <Drawer\n  //                 variant=\"persistent\"\n  //                 anchor=\"right\"\n  //                 open={open}\n  //                 classes={{\n  //                     paper: classes.drawerPaper,\n  //                 }}\n  //             >\n  //                 <IconButton onClick={handleDrawerClose}>\n  //                     {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n  //                 </IconButton>\n  //                 <div>\n  //                     <FormControl className={classes.formControl}>\n  //                         <Select\n  //                             labelId=\"demo-simple-select-label\"\n  //                             id=\"demo-simple-select\"\n  //                             value={selectedOwner}\n  //                             displayEmpty\n  //                             onChange={handleOwnerChange}\n  //                         >\n  //                             {myTeamTableData.map(item => <MenuItem key={item.pid} value={item.pid}>{item.playerName}</MenuItem>)}\n  //                         </Select>\n  //                     </FormControl>\n  //                     <Input key=\"hi\" id=\"standard-required\" label=\"Bid Amount\" type=\"number\" />\n  //                     <Button\n  //                         variant=\"contained\"\n  //                         color=\"secondary\"\n  //                         size=\"small\"\n  //                         className={classes.button}\n  //                         startIcon={<DoneIcon />}\n  //                         onClick={() => { setBidAmount(document.getElementById(\"standard-required\").value); setConfirmDialogOpen(true) }}>\n  //                         Confirm\n  // </Button>\n  //                 </div>\n  //             </Drawer>\n  //             <Dialog\n  //                 open={confirmDialogOpen}\n  //                 onClose={handleModalClose}\n  //                 aria-labelledby=\"alert-dialog-title\"\n  //                 aria-describedby=\"alert-dialog-description\"\n  //             >\n  //                 <DialogTitle id=\"alert-dialog-title\">{`Are you sure you want to sell ${playerName} in ${bidAmount}`}</DialogTitle>\n  //                 <DialogActions>\n  //                     <Button onClick={handleModalClose} color=\"primary\" autoFocus>\n  //                         Cancel\n  //           </Button>\n  //                     <Button onClick={sellPlayer} color=\"primary\">\n  //                         Sell\n  //           </Button>\n  //                 </DialogActions>\n  //             </Dialog>\n  //         </div>\n  //     }\n\n\n  function _unsellPlayer() {\n    _unsellPlayer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return fetch(\"/auction/skip/1/\".concat(pid));\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n    return _unsellPlayer.apply(this, arguments);\n  }\n\n  function AdminAuction() {\n    var _this = this;\n\n    console.log(\"In admin auction\");\n    console.log(myTeamTableData);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      lg: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      profile: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      profile: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      tableHeaderColor: \"warning\",\n      tableHead: [\"Description\", \"Player Name\"],\n      tableData: captainTableData.map(function (element) {\n        var arr = [element.desc, element.name];\n        return {\n          data: arr,\n          collapse: []\n        };\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      size: \"small\",\n      className: classes.button,\n      onClick: function onClick() {\n        setSelectCaptain(true);\n        setOpen(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 37\n      }\n    }, \"Set Captain\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      size: \"small\",\n      className: classes.button,\n      onClick: function onClick() {\n        setSelectCaptain(false);\n        setOpen(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 37\n      }\n    }, \"Set ViceCaptain\")))))))), /*#__PURE__*/React.createElement(Dialog, {\n      \"aria-labelledby\": \"simple-dialog-title\",\n      open: backDropOpen,\n      onClose: function onClose() {\n        return setBackDropOpen(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"simple-dialog-title\",\n      className: classes.sold,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 13\n      }\n    }, playerStatus)), /*#__PURE__*/React.createElement(Drawer, {\n      variant: \"persistent\",\n      anchor: \"right\",\n      open: open,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: handleDrawerClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 13\n      }\n    }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(ChevronLeftIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 46\n      }\n    }) : /*#__PURE__*/React.createElement(ChevronRightIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 68\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.formControl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      labelId: \"demo-simple-select-label\",\n      id: \"demo-simple-select\",\n      value: selectedOwner,\n      displayEmpty: true,\n      onChange: handleOwnerChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 21\n      }\n    }, myTeamTableData.map(function (item) {\n      return /*#__PURE__*/React.createElement(MenuItem, {\n        key: item.pid,\n        value: item.pid,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 54\n        }\n      }, item.playerName);\n    }))), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      size: \"small\",\n      className: classes.button,\n      startIcon: /*#__PURE__*/React.createElement(DoneIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 32\n        }\n      }),\n      onClick: function onClick() {\n        setConfirmDialogOpen(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 17\n      }\n    }, \"Confirm\"))), /*#__PURE__*/React.createElement(Dialog, {\n      open: confirmDialogOpen,\n      onClose: handleModalClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"alert-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 13\n      }\n    }, \"Are you sure you want to set as Captain/Vice\"), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: handleModalClose,\n      color: \"primary\",\n      autoFocus: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 17\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: sellPlayer,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 17\n      }\n    }, \"Sell\"))));\n  }\n\n  function AdminPending() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      tableHeaderColor: \"warning\",\n      tableHead: [\"Description\", \"Player Name\"],\n      tableData: captainTableData.map(function (element) {\n        var arr = [element.desc, element.name];\n        return {\n          data: arr,\n          collapse: []\n        };\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      size: \"small\",\n      className: classes.button,\n      startIcon: /*#__PURE__*/React.createElement(NavigateBeforeIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 28\n        }\n      }),\n      onClick: function onClick() {\n        setSelectCaptain(true);\n        setOpen(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 13\n      }\n    }, \"Set Captain\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      size: \"small\",\n      className: classes.button,\n      startIcon: /*#__PURE__*/React.createElement(NavigateBeforeIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 28\n        }\n      }),\n      onClick: function onClick() {\n        return AdminAuction();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 13\n      }\n    }, \"Set Vice Captain\"));\n  }\n\n  function UserAuctionPending() {\n    return /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 16\n      }\n    }, \"Not a member of the group! \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 55\n      }\n    }), \" Auction is Coming !!\");\n  }\n\n  function UserAuction() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      profile: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardAvatar, {\n      profile: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: playerImage,\n      alt: \"...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(CardBody, {\n      profile: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.cardTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 25\n      }\n    }, playerName), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      variant: \"square\",\n      src: \"\".concat(process.env.PUBLIC_URL, \"/\").concat(team, \".JPG\"),\n      className: classes.large,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      className: classes.cardCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 25\n      }\n    }, \" \", role), /*#__PURE__*/React.createElement(\"h6\", {\n      className: classes.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 25\n      }\n    }, battingStyle, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 43\n      }\n    }), bowlingStyle)))), /*#__PURE__*/React.createElement(Table, {\n      tableHeaderColor: \"warning\",\n      tableHead: [\"Owner\", \"Player Count\", \"Balance\"],\n      tableData: AuctionTableData.map(function (element) {\n        var arr = [element.userName, element.playerCount, element.balance];\n        return {\n          data: arr,\n          collapse: []\n        };\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  return isUserMemberOfGroup ? /*#__PURE__*/React.createElement(AdminAuction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 32\n    }\n  }) : /*#__PURE__*/React.createElement(UserAuctionPending, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 51\n    }\n  });\n}","map":{"version":3,"sources":["D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/src/views/Group/Group.js"],"names":["React","useEffect","useState","useContext","axios","makeStyles","useTheme","DialogTitle","Dialog","MenuItem","FormControl","DoneIcon","Typography","NavigateBeforeIcon","NavigateNextIcon","Select","Table","Grid","Button","DialogActions","DialogContent","DialogContentText","GridItem","Drawer","ChevronLeftIcon","ChevronRightIcon","IconButton","CheckSharpIcon","ClearSharpIcon","Avatar","Card","CardAvatar","CardBody","Input","UserContext","socketIOClient","ENDPOINT","drawerWidth","useStyles","theme","margin","spacing","image","height","container","backgroundImage","backgroundSize","drawer","width","flexShrink","drawerPaper","drawerHeader","display","alignItems","padding","mixins","toolbar","justifyContent","sold","color","cardCategoryWhite","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","large","ImgMediaCard","window","onbeforeunload","setUser","user","classes","auctionStatus","setAuctionStatus","playerName","setPlayerName","playerImage","setPlayerImage","team","setTeam","role","setRole","battingStyle","setBattingStyle","bowlingStyle","setBowlingStyle","open","setOpen","bidAmount","setBidAmount","confirmDialogOpen","setConfirmDialogOpen","pid","setPid","selectedOwner","setSelectedOwner","backDropOpen","setBackDropOpen","playerStatus","setPlayerStatus","AuctionTableData","setAuctionTableData","desc","name","captainTableData","setCaptainTableData","myTeamTableData","setMyTeamTableData","isUserMemberOfGroup","setGroupMember","selectCaptain","setSelectCaptain","selectedPlayer","setSelectedPlayer","handleDrawerClose","handleModalClose","socket","on","console","log","newPlayerDetails","balanceDetails","userBalance","Team","fullName","localStorage","getItem","filter","balance","uid","parseInt","process","env","PUBLIC_URL","a","mygroup","myUrl","get","teamResponse","status","data","players","myres","tournamentStart","matchStartTime","response","myCapName","myViceCapName","isGroupMember","length","captainName","viceCaptainName","tmp","push","startAuction","handleOwnerChange","event","target","value","sellPlayer","unsellPlayer","fetch","AdminAuction","root","map","element","arr","collapse","button","paper","direction","formControl","item","AdminPending","UserAuctionPending","UserAuction","cardTitle","cardCategory","description","userName","playerCount"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport axios from \"axios\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\n\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\n\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n//import Container from \"@material-ui/core/Container\";\r\n\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Table from \"components/Table/Table.js\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\n\r\n\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CheckSharpIcon from '@material-ui/icons/CheckSharp';\r\nimport ClearSharpIcon from '@material-ui/icons/ClearSharp';\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\n\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardAvatar from \"components/Card/CardAvatar.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\n\r\n\r\n\r\nimport Input from '@material-ui/core/Input';\r\n\r\n\r\nimport { UserContext } from \"../../UserContext\";\r\n\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\n// const ENDPOINT = \"https://happy-home-ipl-2020.herokuapp.com/\";\r\nconst ENDPOINT = \"http://localhost:4000\";\r\nconst drawerWidth = 100;\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    image: {\r\n        height: \"200px\"\r\n    },\r\n    container: {\r\n        backgroundImage: \"url(\\\"../RCB/5334.jpg\\\")\",\r\n        backgroundSize: 'cover'\r\n    }, drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    sold: {\r\n        color: \"green\"\r\n    }, cardCategoryWhite: {\r\n        color: \"rgba(255,255,255,.62)\",\r\n        margin: \"0\",\r\n        fontSize: \"14px\",\r\n        marginTop: \"0\",\r\n        marginBottom: \"0\"\r\n    },\r\n    cardTitleWhite: {\r\n        color: \"#FFFFFF\",\r\n        marginTop: \"0px\",\r\n        minHeight: \"auto\",\r\n        fontWeight: \"300\",\r\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n        marginBottom: \"3px\",\r\n        textDecoration: \"none\"\r\n    }, large: {\r\n        width: theme.spacing(12),\r\n        height: theme.spacing(12),\r\n    },\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function ImgMediaCard() {\r\n\r\n    window.onbeforeunload = () => setUser(null)\r\n\r\n    const { user, setUser } = useContext(UserContext);\r\n\r\n\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const [auctionStatus, setAuctionStatus] = useState(\"\");\r\n    const [playerName, setPlayerName] = useState(\"\");\r\n    const [playerImage, setPlayerImage] = useState(\"\");\r\n    const [team, setTeam] = useState(\"\");\r\n    const [role, setRole] = useState(\"\");\r\n    const [battingStyle, setBattingStyle] = useState(\"\");\r\n    const [bowlingStyle, setBowlingStyle] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [bidAmount, setBidAmount] = useState();\r\n\r\n    const [confirmDialogOpen, setConfirmDialogOpen] = useState(false)\r\n    const [pid, setPid] = useState();\r\n    const [selectedOwner, setSelectedOwner] = useState(null);\r\n\r\n    const [backDropOpen, setBackDropOpen] = useState(false);\r\n    const [playerStatus, setPlayerStatus] = useState();\r\n    const [AuctionTableData, setAuctionTableData] = useState([]);\r\n    const [captainTableData, setCaptainTableData] = useState([{desc: \"Captain\", name: \"\"},\r\n        {desc: \"ViceCaptain\", name: \"\"}]);\r\n    const [myTeamTableData, setMyTeamTableData] = useState([]);\r\n    const [isUserMemberOfGroup, setGroupMember] = useState(false);\r\n    const [selectCaptain, setSelectCaptain] = useState(true);\r\n    const [selectedPlayer, setSelectedPlayer] = useState(null);\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n\r\n    const handleModalClose = () => {\r\n        setConfirmDialogOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        const socket = socketIOClient(ENDPOINT);\r\n        socket.on(\"connect\", () => {\r\n\r\n            console.log(\"client connected\");\r\n\r\n\r\n            socket.on(\"playerChange\", async (newPlayerDetails, balanceDetails) => {\r\n\r\n                setAuctionStatus(\"RUNNING\");\r\n                console.log(\"player change\")\r\n\r\n                let userBalance = [];\r\n                const { role, Team, battingStyle, bowlingStyle, pid, fullName } = newPlayerDetails;\r\n\r\n                console.log(balanceDetails);\r\n                // console.log(user.uid)\r\n\r\n                if (localStorage.getItem(\"admin\") === \"false\") {\r\n                    userBalance = balanceDetails.filter(balance => balance.uid === parseInt(localStorage.getItem(\"uid\"), 10))\r\n                }\r\n                else {\r\n                    userBalance = balanceDetails\r\n                }\r\n                // const userBalance = user && user.admin ? balanceDetails:[balanceDetails.filter(balance => balance.uid === user.uid)]\r\n\r\n\r\n\r\n                console.log(userBalance);\r\n                setPlayerImage(`${process.env.PUBLIC_URL}/${pid}.JPG`);\r\n                setRole(role)\r\n                setTeam(Team)\r\n                setBattingStyle(battingStyle)\r\n                setBowlingStyle(bowlingStyle)\r\n                setPlayerName(fullName)\r\n                setPid(pid)\r\n                setAuctionTableData(userBalance);\r\n            });\r\n\r\n\r\n        })\r\n\r\n        const a = async () => {\r\n            // get start of tournamnet (i.e. start of 1st match)\r\n            var mygroup  = 1;\r\n            var myUrl = `/user/myteam/${localStorage.getItem(\"uid\")}`;\r\n            console.log(`in Admin Auction:  ${myUrl}`);\r\n            const teamResponse = await axios.get(myUrl);\r\n            console.log(teamResponse.status);\r\n            // console.log(teamResponse.data);\r\n            console.log(teamResponse.data[0].players);\r\n            setMyTeamTableData(teamResponse.data[0].players);\r\n\r\n            const myres = await axios.get(`/group/getfirstmatch/${mygroup}`);\r\n            var tournamentStart = myres.data.matchStartTime;\r\n\r\n            // get captain and vice captain of user\r\n            let response = \"\"\r\n            myUrl = `/user/getcaptain/${localStorage.getItem(\"uid\")}`;\r\n            response = await axios.get(myUrl);\r\n            var myCapName = \"\";\r\n            var myViceCapName = \"\";\r\n            var isGroupMember = false;\r\n            if (response.status === 200) {\r\n                console.log(response.data.length);\r\n                console.log(response.data)\r\n                if (response.data.length > 0) {\r\n                    myCapName = response.data[0].captainName;\r\n                    myViceCapName = response.data[0].viceCaptainName;\r\n                    isGroupMember = true;\r\n                }\r\n            }\r\n            var tmp = [];\r\n            tmp.push({desc: \"Captain\", name: myCapName});\r\n            tmp.push({desc: \"ViceCaptain\", name: myViceCapName});\r\n            setCaptainTableData(tmp);\r\n            console.log(`Details: ${tmp[0].name}  ${tmp[1].name}  ${isGroupMember}`);\r\n            // setAuctionStatus(response.data)\\;\r\n            setGroupMember(isGroupMember);\r\n            // console.log(`Is group member ${isUserMemberOfGroup}`);\r\n            // if (isGroupMember) {\r\n            //     await startAuction(response.data);\r\n            // }\r\n\r\n        }\r\n\r\n        a();\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    const startAuction = async (status) => {\r\n\r\n        if (status === \"PENDING\") {\r\n            const response = await axios.get(\"/group/setauctionstatus/1/RUNNING\");\r\n            if (response.data) {\r\n                setAuctionStatus(\"RUNNING\");\r\n            }\r\n        }\r\n        if (status === \"RUNNING\") {\r\n            const response = await axios.get(\"/group/getauctionplayer/1\");\r\n            console.log(response);\r\n        }\r\n\r\n    }\r\n\r\n    const handleOwnerChange = (event) => {\r\n            setSelectedOwner(event.target.value);\r\n        setSelectedPlayer(event.target.value);\r\n    };\r\n\r\n\r\n    async function sellPlayer() {\r\n\r\n        console.log(\"In SellPlayer\");\r\n        // let response = await fetch(`/auction/add/1/${selectedOwner}/${pid}/${bidAmount}`);\r\n        // if (response.status === 707) {\r\n        //     setPlayerStatus(\"Already Purchased\")\r\n        // }\r\n        // if (response.status === 706) {\r\n        //     setPlayerStatus(\"User does not belong to this group\");\r\n        // }\r\n        // if (response.status === 704) {\r\n        //     setPlayerStatus(\"Invalid Player\")\r\n        // }\r\n        // if (response.status === 708) {\r\n        //     setPlayerStatus(\"Insufficient Balance\")\r\n        // }\r\n        // if (response.status === 200) {\r\n        //     setPlayerStatus(\"SOLD\");\r\n\r\n        //     const balance = await axios.get(\"/user/balance/all\")\r\n        //     setAuctionTableData(balance.data);\r\n        // }\r\n        setConfirmDialogOpen(false);\r\n\r\n        setBackDropOpen(true)\r\n    }\r\n\r\n\r\n    async function unsellPlayer() {\r\n        await fetch(`/auction/skip/1/${pid}`);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n//     async function AdminAuction() {\r\n//         return <div className={classes.root}>\r\n\r\n\r\n//             <Grid container justify=\"center\" alignItems=\"center\">\r\n\r\n//                 <Grid item xs={12}>\r\n\r\n//                     <div>\r\n//                         <Grid container justify=\"center\" alignItems=\"center\" >\r\n//                             <GridItem xs={12} sm={12} md={12} lg={12} >\r\n//                                 <Card profile>\r\n//                                     <CardBody profile>\r\n//                                         <Table\r\n//                                             tableHeaderColor=\"warning\"\r\n//                                             tableHead={[\"Description\", \"Player Name\"]}\r\n//                                             tableData={captainTableData.map(element => {\r\n//                                                 const arr = [element.desc, element.name]\r\n//                                                 return { data: arr, collapse: [] }\r\n//                                             })}\r\n//                                         />\r\n\r\n//                                         <Button\r\n//                                             variant=\"contained\"\r\n//                                             color=\"secondary\"\r\n//                                             size=\"small\"\r\n//                                             className={classes.button}\r\n//                                             onClick={() => {  setOpen(true); }}>\r\n//                                             Set Captain\r\n//                                         </Button>\r\n//                                         <Button\r\n//                                             variant=\"contained\"\r\n//                                             color=\"secondary\"\r\n//                                             size=\"small\"\r\n//                                             className={classes.button}\r\n//                                             onClick={() => {  setOpen(true); }}>\r\n//                                             Set ViceCaptain\r\n//                                         </Button>\r\n\r\n//                                     </CardBody>\r\n//                                 </Card>\r\n//                             </GridItem>\r\n\r\n//                         </Grid>\r\n\r\n//                     </div>\r\n\r\n//                 </Grid>\r\n//             </Grid>\r\n//             <Table\r\n//                 tableHeaderColor=\"warning\"\r\n//                 tableHead={[\"Owner\", \"Player Count\", \"Balance\"]}\r\n//                 tableData={AuctionTableData.map(element => {\r\n//                     const arr = [element.userName, element.playerCount, element.balance]\r\n//                     return { data: arr, collapse: [] }\r\n//                 })}\r\n//             />\r\n\r\n//             <Dialog aria-labelledby=\"simple-dialog-title\" open={backDropOpen}\r\n//                 onClose={() => setBackDropOpen(false)} >\r\n//                 <DialogTitle id=\"simple-dialog-title\" className={classes.sold}>{playerStatus}</DialogTitle>\r\n\r\n\r\n//             </Dialog>\r\n\r\n//             <Drawer\r\n//                 variant=\"persistent\"\r\n//                 anchor=\"right\"\r\n//                 open={open}\r\n//                 classes={{\r\n//                     paper: classes.drawerPaper,\r\n//                 }}\r\n//             >\r\n//                 <IconButton onClick={handleDrawerClose}>\r\n//                     {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n//                 </IconButton>\r\n//                 <div>\r\n//                     <FormControl className={classes.formControl}>\r\n\r\n//                         <Select\r\n//                             labelId=\"demo-simple-select-label\"\r\n//                             id=\"demo-simple-select\"\r\n//                             value={selectedOwner}\r\n//                             displayEmpty\r\n//                             onChange={handleOwnerChange}\r\n//                         >\r\n//                             {myTeamTableData.map(item => <MenuItem key={item.pid} value={item.pid}>{item.playerName}</MenuItem>)}\r\n\r\n//                         </Select>\r\n\r\n//                     </FormControl>\r\n//                     <Input key=\"hi\" id=\"standard-required\" label=\"Bid Amount\" type=\"number\" />\r\n//                     <Button\r\n//                         variant=\"contained\"\r\n//                         color=\"secondary\"\r\n//                         size=\"small\"\r\n//                         className={classes.button}\r\n//                         startIcon={<DoneIcon />}\r\n//                         onClick={() => { setBidAmount(document.getElementById(\"standard-required\").value); setConfirmDialogOpen(true) }}>\r\n//                         Confirm\r\n// </Button>\r\n//                 </div>\r\n\r\n//             </Drawer>\r\n\r\n//             <Dialog\r\n//                 open={confirmDialogOpen}\r\n//                 onClose={handleModalClose}\r\n//                 aria-labelledby=\"alert-dialog-title\"\r\n//                 aria-describedby=\"alert-dialog-description\"\r\n//             >\r\n//                 <DialogTitle id=\"alert-dialog-title\">{`Are you sure you want to sell ${playerName} in ${bidAmount}`}</DialogTitle>\r\n\r\n//                 <DialogActions>\r\n\r\n//                     <Button onClick={handleModalClose} color=\"primary\" autoFocus>\r\n//                         Cancel\r\n//           </Button>\r\n//                     <Button onClick={sellPlayer} color=\"primary\">\r\n//                         Sell\r\n//           </Button>\r\n//                 </DialogActions>\r\n//             </Dialog>\r\n//         </div>\r\n//     }\r\n\r\nfunction AdminAuction() {\r\n    console.log(\"In admin auction\");\r\n    console.log(myTeamTableData);\r\n    return <div className={classes.root}>\r\n\r\n\r\n        <Grid container justify=\"center\" alignItems=\"center\">\r\n\r\n            <Grid item xs={12}>\r\n\r\n                <div>\r\n                    <Grid container justify=\"center\" alignItems=\"center\" >\r\n                        <GridItem xs={12} sm={12} md={12} lg={12} >\r\n                            <Card profile>\r\n                                <CardBody profile>\r\n                                    <Table\r\n                                        tableHeaderColor=\"warning\"\r\n                                        tableHead={[\"Description\", \"Player Name\"]}\r\n                                        tableData={captainTableData.map(element => {\r\n                                            const arr = [element.desc, element.name]\r\n                                            return { data: arr, collapse: [] }\r\n                                        })}\r\n                                    />\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"small\"\r\n                                        className={classes.button}\r\n                                        onClick={() => { setSelectCaptain(true); setOpen(true); }}>\r\n                                        Set Captain\r\n                                    </Button>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"small\"\r\n                                        className={classes.button}\r\n                                        onClick={() => {  setSelectCaptain(false); setOpen(true); }}>\r\n                                        Set ViceCaptain\r\n                                    </Button>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </GridItem>\r\n                    </Grid>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n        <Dialog aria-labelledby=\"simple-dialog-title\" open={backDropOpen}\r\n            onClose={() => setBackDropOpen(false)} >\r\n            <DialogTitle id=\"simple-dialog-title\" className={classes.sold}>{playerStatus}</DialogTitle>\r\n\r\n\r\n        </Dialog>\r\n\r\n        <Drawer\r\n            variant=\"persistent\"\r\n            anchor=\"right\"\r\n            open={open}\r\n            classes={{\r\n                paper: classes.drawerPaper,\r\n            }}\r\n        >\r\n            <IconButton onClick={handleDrawerClose}>\r\n                {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n            </IconButton>\r\n            <div>\r\n                <FormControl className={classes.formControl}>\r\n\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={selectedOwner}\r\n                        displayEmpty\r\n                        onChange={handleOwnerChange}\r\n                    >\r\n                        {myTeamTableData.map(item => <MenuItem key={item.pid} value={item.pid}>{item.playerName}</MenuItem>)}\r\n\r\n                    </Select>\r\n\r\n                </FormControl>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                    startIcon={<DoneIcon />}\r\n                    onClick={() => { setConfirmDialogOpen(true) }}>\r\n                    Confirm\r\n                </Button>\r\n            </div>\r\n\r\n        </Drawer>\r\n\r\n        <Dialog\r\n            open={confirmDialogOpen}\r\n            onClose={handleModalClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{`Are you sure you want to set as Captain/Vice`}</DialogTitle>\r\n\r\n            <DialogActions>\r\n\r\n                <Button onClick={handleModalClose} color=\"primary\" autoFocus>\r\n                    Cancel\r\n      </Button>\r\n                <Button onClick={sellPlayer} color=\"primary\">\r\n                    Sell\r\n      </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    </div>\r\n}\r\n\r\n    function AdminPending() {\r\n        return <Grid container justify=\"center\" alignItems=\"center\" >\r\n            <Table\r\n                tableHeaderColor=\"warning\"\r\n                tableHead={[\"Description\", \"Player Name\"]}\r\n                tableData={captainTableData.map(element => {\r\n                    const arr = [element.desc, element.name]\r\n                    return { data: arr, collapse: [] }\r\n                })}\r\n            />\r\n            <Button variant=\"contained\"\r\n                color=\"secondary\"\r\n                size=\"small\"\r\n                className={classes.button}\r\n                startIcon={<NavigateBeforeIcon />}\r\n                onClick={() => { setSelectCaptain(true);  setOpen(true); }}>\r\n                Set Captain\r\n            </Button>\r\n            <Button variant=\"contained\"\r\n                color=\"secondary\"\r\n                size=\"small\"\r\n                className={classes.button}\r\n                startIcon={<NavigateBeforeIcon />}\r\n                onClick={() => AdminAuction()}>Set Vice Captain\r\n            </Button>\r\n        </Grid>\r\n    }\r\n\r\n    function UserAuctionPending() {\r\n        \r\n        return <Typography>Not a member of the group! <br /> Auction is Coming !!</Typography>\r\n    }\r\n\r\n    function UserAuction() {\r\n        return <Grid container justify=\"center\"\r\n            alignItems=\"center\" >\r\n            <GridItem xs={12} sm={12} md={4} >\r\n                <Card profile>\r\n                    <CardAvatar profile>\r\n\r\n                        <img src={playerImage} alt=\"...\" />\r\n\r\n                    </CardAvatar>\r\n                    <CardBody profile>\r\n\r\n                        <h3 className={classes.cardTitle}>{playerName}</h3>\r\n                        <Grid container justify=\"center\" alignItems=\"center\">\r\n                            <Avatar variant=\"square\" src={`${process.env.PUBLIC_URL}/${team}.JPG`} className={classes.large} />\r\n                        </Grid>\r\n                        <h4 className={classes.cardCategory}> {role}</h4>\r\n                        <h6 className={classes.description}>\r\n                            {battingStyle}<br />\r\n                            {bowlingStyle}\r\n\r\n                        </h6>\r\n\r\n                    </CardBody>\r\n                </Card>\r\n            </GridItem>\r\n            <Table\r\n                tableHeaderColor=\"warning\"\r\n                tableHead={[\"Owner\", \"Player Count\", \"Balance\"]}\r\n                tableData={AuctionTableData.map(element => {\r\n                    const arr = [element.userName, element.playerCount, element.balance]\r\n                    return { data: arr, collapse: [] }\r\n                })}\r\n            />\r\n        </Grid>\r\n    }\r\n    return (\r\n       (isUserMemberOfGroup) ? <AdminAuction /> : <UserAuctionPending /> \r\n    );\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}