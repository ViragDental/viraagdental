{"ast":null,"code":"import _regeneratorRuntime from \"D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\src\\\\views\\\\Profile\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContex, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline'; // import TextField from '@material-ui/core/TextField';\n// import Grid from '@material-ui/core/Grid';\n// import Box from '@material-ui/core/Box';\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { UserContext } from \"../../UserContext\";\nimport axios from \"axios\";\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { blue, red } from '@material-ui/core/colors';\nimport { useHistory } from \"react-router-dom\";\nimport { encrypt, decrypt } from \"views/functions.js\";\nimport { BlankArea, ValidComp } from 'CustomComponents/CustomComponents.js';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    textColor: {\n      color: blue[700]\n    },\n    form: {\n      width: '100%',\n      // Fix IE 11 issue.\n      marginTop: theme.spacing(1)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    },\n    error: {\n      // right: 0,\n      fontSize: '12px',\n      color: red[700],\n      // position: 'absolute',\n      alignItems: 'center',\n      marginTop: '0px'\n    }\n  };\n});\n/***\r\nclass ChildComp extends React.Component {\r\n\r\n  componentDidMount()  {\r\n    // custom rule will have name 'isPasswordMatch'\r\n    ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n      return (value === this.props.p1)\r\n    });\r\n\r\n    ValidatorForm.addValidationRule('minLength', (value) => {\r\n      return (value.length >= 6)\r\n    });\r\n\r\n    ValidatorForm.addValidationRule('noSpecialCharacters', (value) => {\r\n      return validateSpecialCharacters(value);\r\n    });\r\n\r\n    ValidatorForm.addValidationRule('isEmailOK', (value) => {\r\n      return validateEmail(value);\r\n    });\r\n  }\r\n\r\n  \r\n  componentWillUnmount() {\r\n    // remove rule when it is not needed\r\n    ValidatorForm.removeValidationRule('isPasswordMatch');\r\n    ValidatorForm.removeValidationRule('isEmailOK');\r\n    ValidatorForm.removeValidationRule('minLength');\r\n    ValidatorForm.removeValidationRule('noSpecialCharacters');   \r\n  }\r\n\r\n  render() {\r\n    return <br/>;\r\n  }\r\n\r\n}\r\n***/\n// const handleSubmit = e => {\n//   e.preventDefault();\n// };\n\nexport default function Profile() {\n  _s();\n\n  var classes = useStyles();\n  var history = useHistory();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      groupName = _useState4[0],\n      setGroupName = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      profile = _useState8[0],\n      setProfile = _useState8[1];\n\n  var _useState9 = useState(199),\n      _useState10 = _slicedToArray(_useState9, 2),\n      registerStatus = _useState10[0],\n      setRegisterStatus = _useState10[1];\n\n  useEffect(function () {\n    var profileInfo = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var userRes, tmp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.get(\"\".concat(process.env.REACT_APP_AXIOS_BASEPATH, \"/user/cricprofile/\").concat(localStorage.getItem(\"uid\")));\n\n              case 3:\n                userRes = _context.sent;\n                setProfile(userRes.data); // master data for comparision if changed by user\n                // setLoginName(userRes.data.loginName);\n\n                setUserName(userRes.data.userName);\n                setGroupName(userRes.data.defaultGroup);\n                tmp = decrypt(userRes.data.email);\n                setEmail(tmp);\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 11]]);\n      }));\n\n      return function profileInfo() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    profileInfo();\n  }, []); // const { setUser } = useContext(UserContext);\n\n  var handleProfileSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var tmp1, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(profile.email !== email || profile.userName !== userName)) {\n                _context2.next = 6;\n                break;\n              }\n\n              // console.log(\"New EMail or use name\");\n              tmp1 = encrypt(email);\n              _context2.next = 4;\n              return fetch(\"\".concat(process.env.REACT_APP_AXIOS_BASEPATH, \"/user/cricupdateprofile/\").concat(localStorage.getItem(\"uid\"), \"/\").concat(userName, \"/\").concat(tmp1));\n\n            case 4:\n              response = _context2.sent;\n              setRegisterStatus(response.status); // console.log(`Status is ${response.status}`);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleProfileSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  function ShowResisterStatus() {\n    // console.log(`Status is ${registerStatus}`);\n    var myMsg;\n\n    switch (registerStatus) {\n      case 200:\n        myMsg = \"User Profile successfully regisitered.\";\n        break;\n\n      case 601:\n        myMsg = \"Invalid User Id\";\n        break;\n\n      case 602:\n        myMsg = \"Email id already in use\";\n        break;\n\n      case 199:\n        myMsg = \"\";\n        break;\n\n      default:\n        myMsg = \"unKnown error\";\n        break;\n    }\n\n    return /*#__PURE__*/React.createElement(Typography, {\n      className: registerStatus === 200 ? classes.root : classes.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    }, myMsg);\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, \"User Profile\"), /*#__PURE__*/React.createElement(ValidatorForm, {\n    className: classes.form,\n    onSubmit: handleProfileSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: classes.textColor,\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    label: \"User Name\",\n    onChange: function onChange(event) {\n      return setUserName(event.target.value);\n    },\n    name: \"username\" // type=\"\"\n    ,\n    validators: ['required', 'minLength', 'noSpecialCharacters'],\n    errorMessages: ['User Name to be provided', 'Mimumum 6 characters required', 'Special characters not permitted'],\n    value: userName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BlankArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    label: \"Email\",\n    onChange: function onChange(event) {\n      return setEmail(event.target.value);\n    },\n    name: \"email\",\n    type: \"email\",\n    validators: ['isEmailOK', 'required'],\n    errorMessages: ['Invalid Email', 'Email to be provided'],\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BlankArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true // readonly\n    ,\n    disabled: true,\n    label: \"Default Group (read only)\",\n    name: \"groupName\",\n    value: groupName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ShowResisterStatus, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BlankArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }, \"Update\"))), /*#__PURE__*/React.createElement(ValidComp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 5\n    }\n  }));\n}\n\n_s(Profile, \"qa9AoMpKbtK7l7XfB3Lt+ckM9UM=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/src/views/Profile/Profile.js"],"names":["React","useState","useContex","useEffect","Button","CssBaseline","Typography","makeStyles","Container","UserContext","axios","ValidatorForm","TextValidator","blue","red","useHistory","encrypt","decrypt","BlankArea","ValidComp","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","textColor","color","form","width","submit","error","fontSize","Profile","classes","history","userName","setUserName","groupName","setGroupName","email","setEmail","profile","setProfile","registerStatus","setRegisterStatus","profileInfo","get","process","env","REACT_APP_AXIOS_BASEPATH","localStorage","getItem","userRes","data","defaultGroup","tmp","console","log","handleProfileSubmit","tmp1","fetch","response","status","ShowResisterStatus","myMsg","root","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState ,useContex, useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n// import TextField from '@material-ui/core/TextField';\r\n// import Grid from '@material-ui/core/Grid';\r\n// import Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { UserContext } from \"../../UserContext\";\r\nimport axios from \"axios\";\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport {blue, red } from '@material-ui/core/colors';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { encrypt, decrypt} from \"views/functions.js\";\r\nimport { BlankArea, ValidComp } from 'CustomComponents/CustomComponents.js';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  textColor: {\r\n    color: blue[700],\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  error:  {\r\n      // right: 0,\r\n      fontSize: '12px',\r\n      color: red[700],\r\n      // position: 'absolute',\r\n      alignItems: 'center',\r\n      marginTop: '0px',\r\n  },\r\n}));\r\n\r\n/***\r\nclass ChildComp extends React.Component {\r\n\r\n  componentDidMount()  {\r\n    // custom rule will have name 'isPasswordMatch'\r\n    ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n      return (value === this.props.p1)\r\n    });\r\n\r\n    ValidatorForm.addValidationRule('minLength', (value) => {\r\n      return (value.length >= 6)\r\n    });\r\n\r\n    ValidatorForm.addValidationRule('noSpecialCharacters', (value) => {\r\n      return validateSpecialCharacters(value);\r\n    });\r\n\r\n    ValidatorForm.addValidationRule('isEmailOK', (value) => {\r\n      return validateEmail(value);\r\n    });\r\n  }\r\n\r\n  \r\n  componentWillUnmount() {\r\n    // remove rule when it is not needed\r\n    ValidatorForm.removeValidationRule('isPasswordMatch');\r\n    ValidatorForm.removeValidationRule('isEmailOK');\r\n    ValidatorForm.removeValidationRule('minLength');\r\n    ValidatorForm.removeValidationRule('noSpecialCharacters');   \r\n  }\r\n\r\n  render() {\r\n    return <br/>;\r\n  }\r\n\r\n}\r\n***/\r\n// const handleSubmit = e => {\r\n//   e.preventDefault();\r\n// };\r\n\r\n\r\n\r\nexport default function Profile() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [groupName, setGroupName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [profile, setProfile] = useState({});\r\n  const [registerStatus, setRegisterStatus] = useState(199);\r\n\r\n  useEffect(() => {\r\n    const profileInfo = async () => {\r\n      try {\r\n        // get user details\r\n        var userRes = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/user/cricprofile/${localStorage.getItem(\"uid\")}`);\r\n        setProfile(userRes.data); // master data for comparision if changed by user\r\n        // setLoginName(userRes.data.loginName);\r\n        setUserName(userRes.data.userName);\r\n        setGroupName(userRes.data.defaultGroup);\r\n        let tmp = decrypt(userRes.data.email);\r\n        setEmail(tmp);\r\n      } catch (e) {\r\n          console.log(e)\r\n      }\r\n    }\r\n    profileInfo();\r\n  }, []);\r\n\r\n  // const { setUser } = useContext(UserContext);\r\n\r\n  \r\n  const handleProfileSubmit = async() => {\r\n    // console.log(\"Submit command provided\"); \r\n    if ((profile.email !== email) || (profile.userName !== userName)) {\r\n      // console.log(\"New EMail or use name\");\r\n      let tmp1 = encrypt(email)\r\n      let response = await fetch(`${process.env.REACT_APP_AXIOS_BASEPATH}/user/cricupdateprofile/${localStorage.getItem(\"uid\")}/${userName}/${tmp1}`);\r\n      setRegisterStatus(response.status);\r\n      // console.log(`Status is ${response.status}`);\r\n    }\r\n  }\r\n\r\n  function ShowResisterStatus() {\r\n    // console.log(`Status is ${registerStatus}`);\r\n    let myMsg;\r\n    switch (registerStatus) {\r\n      case 200:\r\n        myMsg = `User Profile successfully regisitered.`;\r\n        break;\r\n      case 601:\r\n        myMsg = \"Invalid User Id\";\r\n        break;\r\n      case 602:\r\n        myMsg = \"Email id already in use\";\r\n        break;\r\n      case 199:\r\n        myMsg = ``;\r\n        break;\r\n      default:\r\n        myMsg = \"unKnown error\";\r\n        break;\r\n    }\r\n    return(\r\n      <Typography className={(registerStatus === 200) ? classes.root : classes.error}>{myMsg}</Typography>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">User Profile</Typography>\r\n    <ValidatorForm className={classes.form} onSubmit={handleProfileSubmit}>\r\n      <TextValidator\r\n          className={classes.textColor}\r\n          variant=\"outlined\"\r\n          required\r\n          fullWidth      \r\n          label=\"User Name\"\r\n          onChange={(event) => setUserName(event.target.value)}\r\n          name=\"username\"\r\n          // type=\"\"\r\n          validators={['required', 'minLength', 'noSpecialCharacters']}\r\n          errorMessages={['User Name to be provided', 'Mimumum 6 characters required', 'Special characters not permitted']}\r\n          value={userName}\r\n      />\r\n      <BlankArea/>\r\n      <TextValidator\r\n          variant=\"outlined\"\r\n          required\r\n          fullWidth      \r\n          label=\"Email\"\r\n          onChange={(event) => setEmail(event.target.value)}\r\n          name=\"email\"\r\n          type=\"email\"\r\n          validators={['isEmailOK', 'required']}\r\n          errorMessages={['Invalid Email', 'Email to be provided']}\r\n          value={email}\r\n      />\r\n      <BlankArea/>\r\n      <TextValidator\r\n          variant=\"outlined\"\r\n          required\r\n          fullWidth      \r\n          // readonly\r\n          disabled\r\n          label=\"Default Group (read only)\"\r\n          name=\"groupName\"\r\n          value={groupName}\r\n      />\r\n      <ShowResisterStatus/>\r\n      <BlankArea/>\r\n      <Button\r\n        type=\"submit\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.submit}\r\n      >\r\n        Update\r\n    </Button>\r\n    </ValidatorForm>\r\n    </div>\r\n    <ValidComp />    \r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}