{"ast":null,"code":"import _regeneratorRuntime from \"D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\src\\\\views\\\\UpcomingMatch\\\\UpcomingMatch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Table from \"components/Table/Table.js\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from '@material-ui/core/Typography';\nimport { red, blue } from '@material-ui/core/colors';\nimport { NothingToDisplay, NoGroup, DisplayPageHeader } from 'CustomComponents/CustomComponents.js';\nimport { hasGroup } from 'views/functions';\nvar drawerWidth = 100;\nvar useStyles = makeStyles(function (theme) {\n  return {\n    margin: {\n      margin: theme.spacing(1)\n    },\n    image: {\n      height: \"200px\"\n    },\n    container: {\n      backgroundImage: \"url(\\\"../RCB/5334.jpg\\\")\",\n      backgroundSize: 'cover'\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    drawerHeader: _objectSpread(_objectSpread({\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1)\n    }, theme.mixins.toolbar), {}, {\n      justifyContent: 'flex-start'\n    }),\n    sold: {\n      color: \"green\"\n    },\n    cardCategoryWhite: {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    cardTitleWhite: {\n      color: \"#FFFFFF\",\n      marginTop: \"0px\",\n      minHeight: \"auto\",\n      fontWeight: \"300\",\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n      marginBottom: \"3px\",\n      textDecoration: \"none\"\n    },\n    large: {\n      width: theme.spacing(12),\n      height: theme.spacing(12)\n    },\n    team: {\n      // right: 0,\n      fontSize: '12px',\n      color: blue[700],\n      // position: 'absolute',\n      alignItems: 'center',\n      marginTop: '0px'\n    }\n  };\n});\nexport default function MatchInfo() {\n  _s();\n\n  // const { user } = useContext(UserContext);\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentArray = _useState2[0],\n      setCurrentArray = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      upcomingArray = _useState4[0],\n      setUpcomingArray = _useState4[1];\n\n  useEffect(function () {\n    var fetchMatch = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.get(\"/match/matchinfo/\".concat(localStorage.getItem(\"gid\")));\n\n              case 3:\n                response = _context.sent;\n                setCurrentArray(response.data.current);\n                setUpcomingArray(response.data.upcoming);\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }));\n\n      return function fetchMatch() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    if (hasGroup()) fetchMatch();\n  }, []);\n\n  function MatchDetails(props) {\n    return (\n      /*#__PURE__*/\n      // <Card profile>\n      // <CardBody profile>\n      React.createElement(Paper, {\n        elevation: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        spacing: 2,\n        shadow: 5,\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        justify: \"start\",\n        alignItems: \"start\",\n        item: true,\n        xs: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        variant: \"square\",\n        src: \"\".concat(process.env.PUBLIC_URL, \"/\").concat(props.team1, \".JPG\"),\n        className: classes.medium,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 32\n        }\n      }, props.matchTime)), /*#__PURE__*/React.createElement(Grid, {\n        justify: \"right\",\n        alignItems: \"right\",\n        item: true,\n        xs: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        variant: \"square\",\n        src: \"\".concat(process.env.PUBLIC_URL, \"/\").concat(props.team2, \".JPG\"),\n        className: classes.medium,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        m: 0,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        className: classes.team,\n        align: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 38\n        }\n      }, props.team1)), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        m: 0,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        className: classes.team,\n        align: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 38\n        }\n      }, props.team2)))) // </CardBody>\n      // </Card>\n\n    );\n  }\n\n  function MatchTable(props) {\n    var _this = this;\n\n    /***\r\n                return (\r\n                <Table\r\n                tableHeaderColor=\"warning\"\r\n                tableHead={[\"Team1\", \"Team2\", \"Start Time\"]}\r\n                tableData={props.myTable.map(x => {\r\n                    const arr = [x.team1, x.team2, x.matchTime]\r\n                    return { data: arr, collapse: [] }\r\n                })}\r\n                />);\r\n    ****/\n    // console.log(\"in match table\")    \n    console.log(props.myTable);\n    if (props.myTable.length > 0) //     return (\n      //     props.myTable.map(x => {\n      //     <Grid container>\n      //         {/* <Grid item xs={4}>\n      //             <Avatar variant=\"square\" src={`${process.env.PUBLIC_URL}/${x.team1}.JPG`} className={classes.medium} />                      \n      //         </Grid> */}\n      //         <Grid item xs={4}><Typography align=\"center\">{x.team1}</Typography></Grid>\n      //         <Grid item xs={4}><Typography align=\"center\">{x.matchTime}</Typography></Grid>\n      //         <Grid item xs={4}><Typography align=\"center\">{x.team2}</Typography></Grid>\n      //         {/* <Grid item xs={4}>\n      //             <Avatar variant=\"square\" src={`${process.env.PUBLIC_URL}/${x.team2}.JPG`} className={classes.medium} />                      \n      //         </Grid> */}\n      //     </Grid>\n      //     })\n      // );\n      return props.myTable.map(function (x) {\n        return /*#__PURE__*/React.createElement(MatchDetails, {\n          team1: x.team1,\n          team2: x.team2,\n          matchTime: x.matchTime,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }\n        });\n      });else return /*#__PURE__*/React.createElement(NothingToDisplay, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    });\n  }\n\n  function ShowCurrentMatch() {\n    var myHeader = currentArray.length > 0 ? \"Match running just now\" : \"Currently No Matches running\";\n    return /*#__PURE__*/React.createElement(Card, {\n      profile: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      profile: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: classes.cardTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, myHeader), /*#__PURE__*/React.createElement(MatchTable, {\n      myTable: currentArray,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    })));\n  }\n\n  function ShowUpcomingMatch() {\n    var myHeader = \"Upcoming Matches\";\n    return /*#__PURE__*/React.createElement(Card, {\n      profile: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      profile: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: classes.cardTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }, myHeader), /*#__PURE__*/React.createElement(MatchTable, {\n      myTable: upcomingArray,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    })));\n  }\n\n  if (localStorage.getItem(\"tournament\").length > 0) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DisplayPageHeader, {\n    headerName: \"Matches\",\n    groupName: localStorage.getItem(\"groupName\"),\n    tournament: localStorage.getItem(\"tournament\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ShowCurrentMatch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ShowUpcomingMatch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }));else return /*#__PURE__*/React.createElement(NoGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 16\n    }\n  });\n}\n\n_s(MatchInfo, \"dK00TMqCPhxfA4a8UWK4HaOA/nU=\", false, function () {\n  return [useStyles];\n});\n\n_c = MatchInfo;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"MatchInfo\");","map":{"version":3,"sources":["D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/src/views/UpcomingMatch/UpcomingMatch.js"],"names":["React","useEffect","useState","axios","Grid","Table","makeStyles","GridItem","Card","CardBody","Avatar","Paper","Typography","red","blue","NothingToDisplay","NoGroup","DisplayPageHeader","hasGroup","drawerWidth","useStyles","theme","margin","spacing","image","height","container","backgroundImage","backgroundSize","drawer","width","flexShrink","drawerPaper","drawerHeader","display","alignItems","padding","mixins","toolbar","justifyContent","sold","color","cardCategoryWhite","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","large","team","MatchInfo","classes","currentArray","setCurrentArray","upcomingArray","setUpcomingArray","fetchMatch","get","localStorage","getItem","response","data","current","upcoming","console","log","MatchDetails","props","process","env","PUBLIC_URL","team1","medium","matchTime","team2","MatchTable","myTable","length","map","x","ShowCurrentMatch","myHeader","cardTitle","ShowUpcomingMatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Table from \"components/Table/Table.js\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {red, blue} from '@material-ui/core/colors';\r\nimport { NothingToDisplay, NoGroup, DisplayPageHeader } from 'CustomComponents/CustomComponents.js';\r\nimport {hasGroup} from 'views/functions'\r\n\r\nconst drawerWidth = 100;\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    image: {\r\n        height: \"200px\"\r\n    },\r\n    container: {\r\n        backgroundImage: \"url(\\\"../RCB/5334.jpg\\\")\",\r\n        backgroundSize: 'cover'\r\n    }, drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    sold: {\r\n        color: \"green\"\r\n    }, cardCategoryWhite: {\r\n        color: \"rgba(255,255,255,.62)\",\r\n        margin: \"0\",\r\n        fontSize: \"14px\",\r\n        marginTop: \"0\",\r\n        marginBottom: \"0\"\r\n    },\r\n    cardTitleWhite: {\r\n        color: \"#FFFFFF\",\r\n        marginTop: \"0px\",\r\n        minHeight: \"auto\",\r\n        fontWeight: \"300\",\r\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n        marginBottom: \"3px\",\r\n        textDecoration: \"none\"\r\n    }, large: {\r\n        width: theme.spacing(12),\r\n        height: theme.spacing(12),\r\n    },\r\n    team:  {\r\n        // right: 0,\r\n        fontSize: '12px',\r\n        color: blue[700],\r\n        // position: 'absolute',\r\n        alignItems: 'center',\r\n        marginTop: '0px',\r\n    },\r\n  }));\r\n\r\n\r\nexport default function MatchInfo() {\r\n    // const { user } = useContext(UserContext);\r\n\r\n    const classes = useStyles(); \r\n    const [currentArray, setCurrentArray] = useState([]);\r\n    const [upcomingArray, setUpcomingArray] = useState([]);\r\n\r\n    useEffect(() => { \r\n        const fetchMatch = async () => {\r\n            try {\r\n\r\n                var response = await axios.get(`/match/matchinfo/${localStorage.getItem(\"gid\")}`);\r\n                setCurrentArray(response.data.current);\r\n                setUpcomingArray(response.data.upcoming);\r\n            } catch (e) {\r\n                console.log(e)\r\n            }\r\n        }\r\n        if (hasGroup()) fetchMatch();\r\n    }, []);\r\n\r\n    function MatchDetails(props) {\r\n    return (\r\n        // <Card profile>\r\n        // <CardBody profile>\r\n        <Paper elevation={6} >\r\n        <Grid spacing={2} shadow={5} container>\r\n            <Grid  justify=\"start\" alignItems=\"start\" item xs={2}>\r\n                <Avatar variant=\"square\" src={`${process.env.PUBLIC_URL}/${props.team1}.JPG`} className={classes.medium} />                      \r\n            </Grid>\r\n            <Grid  item xs={8}><Typography align=\"center\">{props.matchTime}</Typography></Grid>\r\n            <Grid justify=\"right\" alignItems=\"right\" item xs={2}>\r\n                <Avatar variant=\"square\" src={`${process.env.PUBLIC_URL}/${props.team2}.JPG`} className={classes.medium} />                      \r\n            </Grid>\r\n            <Grid item  m={0} xs={6}><Typography className={classes.team} align=\"left\">{props.team1}</Typography></Grid>\r\n            <Grid item  m={0} xs={6}><Typography className={classes.team} align=\"right\">{props.team2}</Typography></Grid>\r\n        </Grid>\r\n        </Paper>\r\n        // </CardBody>\r\n        // </Card>\r\n    );        \r\n    }\r\n    function MatchTable(props) {\r\n/***\r\n            return (\r\n            <Table\r\n            tableHeaderColor=\"warning\"\r\n            tableHead={[\"Team1\", \"Team2\", \"Start Time\"]}\r\n            tableData={props.myTable.map(x => {\r\n                const arr = [x.team1, x.team2, x.matchTime]\r\n                return { data: arr, collapse: [] }\r\n            })}\r\n            />);\r\n****/       \r\n            // console.log(\"in match table\")    \r\n            console.log(props.myTable);\r\n            if (props.myTable.length > 0)\r\n            //     return (\r\n            //     props.myTable.map(x => {\r\n            //     <Grid container>\r\n            //         {/* <Grid item xs={4}>\r\n            //             <Avatar variant=\"square\" src={`${process.env.PUBLIC_URL}/${x.team1}.JPG`} className={classes.medium} />                      \r\n            //         </Grid> */}\r\n            //         <Grid item xs={4}><Typography align=\"center\">{x.team1}</Typography></Grid>\r\n            //         <Grid item xs={4}><Typography align=\"center\">{x.matchTime}</Typography></Grid>\r\n            //         <Grid item xs={4}><Typography align=\"center\">{x.team2}</Typography></Grid>\r\n            //         {/* <Grid item xs={4}>\r\n            //             <Avatar variant=\"square\" src={`${process.env.PUBLIC_URL}/${x.team2}.JPG`} className={classes.medium} />                      \r\n            //         </Grid> */}\r\n            //     </Grid>\r\n            //     })\r\n            // );\r\n            return (\r\n                props.myTable.map((x) => (\r\n                    <MatchDetails team1={x.team1} team2={x.team2} matchTime={x.matchTime}  />\r\n                ))\r\n                );\r\n            else\r\n            return (<NothingToDisplay />);\r\n    }\r\n\r\n    function ShowCurrentMatch() {\r\n        var myHeader = (currentArray.length > 0)\r\n            ? \"Match running just now\" : \"Currently No Matches running\";\r\n        return(\r\n            <Card profile>\r\n            <CardBody profile>\r\n                <h4 className={classes.cardTitle}>{myHeader}</h4>\r\n                <MatchTable myTable={currentArray}/>\r\n            </CardBody>\r\n            </Card>\r\n        )\r\n    }\r\n\r\n    function ShowUpcomingMatch() {\r\n        var myHeader = \"Upcoming Matches\";\r\n        return(\r\n            <Card profile>\r\n            <CardBody profile>\r\n                <h4 className={classes.cardTitle}>{myHeader}</h4>\r\n                <MatchTable myTable={upcomingArray}/>\r\n            </CardBody>\r\n            </Card>\r\n\r\n        )\r\n    }\r\n\r\n    if (localStorage.getItem(\"tournament\").length > 0)\r\n        return (\r\n            <div>\r\n                {/* <h3 align=\"center\">Tournament ({localStorage.getItem(\"tournament\")})</h3> */}\r\n                {/* <h3 align=\"center\">Matches</h3> */}\r\n                <DisplayPageHeader headerName=\"Matches\" groupName={localStorage.getItem(\"groupName\")} tournament={localStorage.getItem(\"tournament\")}/>\r\n                <ShowCurrentMatch/>\r\n                <ShowUpcomingMatch/>\r\n            </div>\r\n        )\r\n    else\r\n        return <NoGroup/>\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}