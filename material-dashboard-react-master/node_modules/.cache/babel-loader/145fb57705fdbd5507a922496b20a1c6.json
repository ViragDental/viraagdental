{"ast":null,"code":"import _slicedToArray from\"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from\"react\";// react plugin for creating charts\n// @material-ui/core\nimport{useEffect,useState}from'react';// import axios from \"axios\";\nimport{makeStyles}from\"@material-ui/core/styles\";// @material-ui/icons\nimport SportsHandballIcon from'@material-ui/icons/SportsHandball';import TimelineIcon from'@material-ui/icons/Timeline';import GroupIcon from'@material-ui/icons/Group';import Update from\"@material-ui/icons/Update\";import Accessibility from\"@material-ui/icons/Accessibility\";// core components\nimport GridItem from\"components/Grid/GridItem.js\";import GridContainer from\"components/Grid/GridContainer.js\";import Table from\"components/Table/Table.js\";import Card from\"components/Card/Card.js\";import CardHeader from\"components/Card/CardHeader.js\";import CardIcon from\"components/Card/CardIcon.js\";import CardBody from\"components/Card/CardBody.js\";import CardFooter from\"components/Card/CardFooter.js\";import socketIOClient from\"socket.io-client\";import styles from\"assets/jss/material-dashboard-react/views/dashboardStyle.js\";import{Redirect}from'react-router-dom';//  const ENDPOINT = \"https://happy-home-ipl-2020.herokuapp.com/\";\nvar ENDPOINT=\"http://localhost:4000\";var useStyles=makeStyles(styles);export default function Dashboard(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),rankArray=_useState2[0],setRankArray=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),rank=_useState4[0],setRank=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),score=_useState6[0],setScore=_useState6[1];var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),mostRuns=_useState8[0],setMostRuns=_useState8[1];var _useState9=useState({}),_useState10=_slicedToArray(_useState9,2),mostWickets=_useState10[0],setMostwickets=_useState10[1];// const [mvp, SetMvp] = useState();\n// const { user } = useContext(UserContext);\nvar date=new Date().toDateString()+\" \"+new Date().toLocaleTimeString();var socket=socketIOClient(ENDPOINT);var tableData=function tableData(rankDetails){var arr=rankDetails.map(function(element){// console.log(element)\nvar displayName=element.displayName,userName=element.userName,grandScore=element.grandScore,rank=element.rank;//const {rank,displayName,userName,grandScore}=element;\n// return { data: Object.values({ rank, displayName, userName, displayName, grandScore }), collapse: [] }\nreturn{data:Object.values({rank:rank,displayName:displayName,userName:userName,grandScore:grandScore}),collapse:[]};});return arr;};useEffect(function(){if(!localStorage(\"uid\"))return/*#__PURE__*/React.createElement(Redirect,{to:\"/signIn\"});socket.on(\"connect\",function(){console.log(\"dashboard connected\");socket.on(\"rank\",function(rank){// console.log(rank)\nvar userDetails=rank.filter(function(element){return element.uid===parseInt(localStorage.getItem(\"uid\"));});// if (userDetails) {\n//   setRank(userDetails[0].rank);\n//   setScore(userDetails[0].grandScore)\n//   setRankArray(tableData(rank));\n// }\n// console.log(`Admin: ${localStorage.getItem(\"admin\")}`)\nif(userDetails.length>0){// if details of current user found (current user is a member of group 1)\nsetRank(userDetails[0].rank);setScore(userDetails[0].grandScore);setRankArray(tableData(rank));}else if(localStorage.getItem(\"admin\")===\"true\"){// current user is not member of the group but is ADMIN. Thus show the rank details\nsetRankArray(tableData(rank));}});socket.on(\"maxRun\",function(maxRun){var runDetails=maxRun.filter(function(element){return element.uid===parseInt(localStorage.getItem(\"uid\"));});// console.log(runDetails)\nif(runDetails){setMostRuns(runDetails[0]);}});socket.on(\"maxWicket\",function(maxWicket){var wicketDetails=maxWicket.filter(function(element){return element.uid===parseInt(localStorage.getItem(\"uid\"));});if(wicketDetails){setMostwickets(wicketDetails[0]);}});});},[rankArray]);var classes=useStyles();return/*#__PURE__*/React.createElement(\"div\",null,localStorage.getItem(\"admin\")===\"false\"?/*#__PURE__*/React.createElement(GridContainer,null,/*#__PURE__*/React.createElement(GridItem,{xs:12,sm:6,md:3},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,{color:\"warning\",stats:true,icon:true},/*#__PURE__*/React.createElement(CardIcon,{color:\"warning\"},/*#__PURE__*/React.createElement(GroupIcon,null)),/*#__PURE__*/React.createElement(\"h2\",{className:classes.cardCategory},\"Rank\"),/*#__PURE__*/React.createElement(\"h3\",{className:classes.cardTitle},rank)),/*#__PURE__*/React.createElement(CardFooter,{stats:true},/*#__PURE__*/React.createElement(\"div\",{className:classes.stats},/*#__PURE__*/React.createElement(GroupIcon,null),/*#__PURE__*/React.createElement(\"a\",{href:\"#pablo\",onClick:function onClick(e){return e.preventDefault();}},localStorage.getItem(\"groupName\")))))),/*#__PURE__*/React.createElement(GridItem,{xs:12,sm:6,md:3},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,{color:\"success\",stats:true,icon:true},/*#__PURE__*/React.createElement(CardIcon,{color:\"success\"},/*#__PURE__*/React.createElement(TimelineIcon,null)),/*#__PURE__*/React.createElement(\"p\",{className:classes.cardCategory},\"Total Points\"),/*#__PURE__*/React.createElement(\"h3\",{className:classes.cardTitle},score)),/*#__PURE__*/React.createElement(CardFooter,{stats:true},/*#__PURE__*/React.createElement(\"div\",{className:classes.stats},/*#__PURE__*/React.createElement(Update,null),localStorage.getItem(\"tournament\"))))),/*#__PURE__*/React.createElement(GridItem,{xs:12,sm:6,md:3},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,{color:\"info\",stats:true,icon:true},/*#__PURE__*/React.createElement(CardIcon,{color:\"info\"},/*#__PURE__*/React.createElement(Accessibility,null)),/*#__PURE__*/React.createElement(\"p\",{className:classes.cardCategory},\"Most Runs\"),/*#__PURE__*/React.createElement(\"h3\",{className:classes.cardTitle},mostRuns?mostRuns.maxRunPlayerName:\"\")),/*#__PURE__*/React.createElement(CardFooter,{stats:true},/*#__PURE__*/React.createElement(\"div\",{className:classes.stats},/*#__PURE__*/React.createElement(Accessibility,null),mostRuns?mostRuns.maxRun:\"\")))),/*#__PURE__*/React.createElement(GridItem,{xs:12,sm:6,md:3},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,{color:\"danger\",stats:true,icon:true},/*#__PURE__*/React.createElement(CardIcon,{color:\"danger\"},/*#__PURE__*/React.createElement(SportsHandballIcon,null)),/*#__PURE__*/React.createElement(\"p\",{className:classes.cardCategory},\"Most Wickets\"),/*#__PURE__*/React.createElement(\"h3\",{className:classes.cardTitle},mostWickets?mostWickets.maxWicketPlayerName:\"\")),/*#__PURE__*/React.createElement(CardFooter,{stats:true},/*#__PURE__*/React.createElement(\"div\",{className:classes.stats},/*#__PURE__*/React.createElement(SportsHandballIcon,null),mostWickets?mostWickets.maxWicket:\"\"))))):\"\",/*#__PURE__*/React.createElement(GridContainer,null,/*#__PURE__*/React.createElement(GridItem,{xs:12,sm:12,md:12},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,{color:\"warning\"},/*#__PURE__*/React.createElement(\"h4\",{className:classes.cardTitleWhite},\"Franchise Score Board\"),/*#__PURE__*/React.createElement(\"p\",{className:classes.cardCategoryWhite},\"Updated as of \".concat(date))),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Table,{tableHeaderColor:\"warning\",tableHead:[\"Rank\",\"Franchise\",\"Owner\",\"Score\"],tableData:rankArray}))))));}","map":{"version":3,"sources":["D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/src/views/Dashboard/Dashboard.js"],"names":["React","useEffect","useState","makeStyles","SportsHandballIcon","TimelineIcon","GroupIcon","Update","Accessibility","GridItem","GridContainer","Table","Card","CardHeader","CardIcon","CardBody","CardFooter","socketIOClient","styles","Redirect","ENDPOINT","useStyles","Dashboard","rankArray","setRankArray","rank","setRank","score","setScore","mostRuns","setMostRuns","mostWickets","setMostwickets","date","Date","toDateString","toLocaleTimeString","socket","tableData","rankDetails","arr","map","element","displayName","userName","grandScore","data","Object","values","collapse","localStorage","on","console","log","userDetails","filter","uid","parseInt","getItem","length","maxRun","runDetails","maxWicket","wicketDetails","classes","cardCategory","cardTitle","stats","e","preventDefault","maxRunPlayerName","maxWicketPlayerName","cardTitleWhite","cardCategoryWhite"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n// react plugin for creating charts\r\n\r\n// @material-ui/core\r\nimport { useEffect, useState } from 'react';\r\n// import axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/icons\r\nimport SportsHandballIcon from '@material-ui/icons/SportsHandball';\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\nimport Update from \"@material-ui/icons/Update\";\r\n\r\nimport Accessibility from \"@material-ui/icons/Accessibility\";\r\n\r\n\r\n// core components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Table from \"components/Table/Table.js\";\r\n\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardIcon from \"components/Card/CardIcon.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\n\r\nimport socketIOClient from \"socket.io-client\";\r\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n//  const ENDPOINT = \"https://happy-home-ipl-2020.herokuapp.com/\";\r\nconst ENDPOINT = \"http://localhost:4000\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\n\r\nexport default function Dashboard() {\r\n\r\n  const [rankArray, setRankArray] = useState([]);\r\n  const [rank, setRank] = useState();\r\n  const [score, setScore] = useState(0);\r\n  const [mostRuns, setMostRuns] = useState({});\r\n  const [mostWickets, setMostwickets] = useState({});\r\n  // const [mvp, SetMvp] = useState();\r\n  // const { user } = useContext(UserContext);\r\n  const date = new Date().toDateString() + \" \" + new Date().toLocaleTimeString();\r\n  const socket = socketIOClient(ENDPOINT);\r\n\r\n\r\n\r\n  const tableData = (rankDetails) => {\r\n    const arr = rankDetails.map(element => {\r\n      // console.log(element)\r\n      const { displayName, userName, grandScore, rank } = element;\r\n      //const {rank,displayName,userName,grandScore}=element;\r\n      // return { data: Object.values({ rank, displayName, userName, displayName, grandScore }), collapse: [] }\r\n      return { data: Object.values({ rank, displayName, userName, grandScore }), collapse: [] }\r\n    });\r\n\r\n    return arr;\r\n  }\r\n  useEffect(() => {\r\n\r\n    if (!localStorage(\"uid\"))\r\n      return  <Redirect  to=\"/signIn\" />\r\n\r\n    socket.on(\"connect\", () => {\r\n      console.log(\"dashboard connected\");\r\n      socket.on(\"rank\", (rank) => {\r\n        // console.log(rank)\r\n        const userDetails = rank.filter((element) => element.uid === parseInt(localStorage.getItem(\"uid\")))\r\n\r\n        // if (userDetails) {\r\n\r\n        //   setRank(userDetails[0].rank);\r\n        //   setScore(userDetails[0].grandScore)\r\n        //   setRankArray(tableData(rank));\r\n        // }\r\n        // console.log(`Admin: ${localStorage.getItem(\"admin\")}`)\r\n        if (userDetails.length > 0) {\r\n          // if details of current user found (current user is a member of group 1)\r\n          setRank(userDetails[0].rank);\r\n          setScore(userDetails[0].grandScore)\r\n          setRankArray(tableData(rank));\r\n        } else if (localStorage.getItem(\"admin\") === \"true\") {\r\n          // current user is not member of the group but is ADMIN. Thus show the rank details\r\n          setRankArray(tableData(rank));\r\n        }\r\n\r\n      });\r\n\r\n      socket.on(\"maxRun\", (maxRun) => {\r\n\r\n        const runDetails = maxRun.filter((element) => element.uid === parseInt(localStorage.getItem(\"uid\")));\r\n\r\n        // console.log(runDetails)\r\n        if (runDetails) {\r\n\r\n          setMostRuns(runDetails[0])\r\n        }\r\n\r\n      });\r\n\r\n      socket.on(\"maxWicket\", (maxWicket) => {\r\n\r\n        const wicketDetails = maxWicket.filter((element) => element.uid === parseInt(localStorage.getItem(\"uid\")));\r\n\r\n        if (wicketDetails) {\r\n          setMostwickets(wicketDetails[0]);\r\n        }\r\n\r\n      });\r\n    });\r\n\r\n\r\n\r\n  }, [rankArray]);\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      { localStorage.getItem(\"admin\") === \"false\" ? <GridContainer>\r\n        <GridItem xs={12} sm={6} md={3}>\r\n          <Card>\r\n            <CardHeader color=\"warning\" stats icon>\r\n              <CardIcon color=\"warning\">\r\n                <GroupIcon />\r\n              </CardIcon>\r\n              <h2 className={classes.cardCategory}>Rank</h2>\r\n              <h3 className={classes.cardTitle}>\r\n                {rank}\r\n              </h3>\r\n            </CardHeader>\r\n            <CardFooter stats>\r\n              <div className={classes.stats}>\r\n                <GroupIcon />\r\n                <a href=\"#pablo\" onClick={e => e.preventDefault()}>\r\n                  {localStorage.getItem(\"groupName\")}\r\n                </a>\r\n              </div>\r\n            </CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={6} md={3}>\r\n          <Card>\r\n            <CardHeader color=\"success\" stats icon>\r\n              <CardIcon color=\"success\">\r\n                <TimelineIcon />\r\n              </CardIcon>\r\n              <p className={classes.cardCategory}>Total Points</p>\r\n              <h3 className={classes.cardTitle}>{score}</h3>\r\n            </CardHeader>\r\n            <CardFooter stats>\r\n              <div className={classes.stats}>\r\n                <Update />\r\n                {localStorage.getItem(\"tournament\")}\r\n              </div>\r\n            </CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n\r\n        <GridItem xs={12} sm={6} md={3}>\r\n          <Card>\r\n            <CardHeader color=\"info\" stats icon>\r\n              <CardIcon color=\"info\">\r\n                <Accessibility />\r\n              </CardIcon>\r\n              <p className={classes.cardCategory}>Most Runs</p>\r\n              <h3 className={classes.cardTitle}>{mostRuns ? mostRuns.maxRunPlayerName : \"\"}</h3>\r\n            </CardHeader>\r\n            <CardFooter stats>\r\n              <div className={classes.stats}>\r\n                <Accessibility />\r\n                {mostRuns ? mostRuns.maxRun : \"\"}\r\n              </div>\r\n            </CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n\r\n        <GridItem xs={12} sm={6} md={3}>\r\n          <Card>\r\n            <CardHeader color=\"danger\" stats icon>\r\n              <CardIcon color=\"danger\">\r\n                <SportsHandballIcon />\r\n              </CardIcon>\r\n              <p className={classes.cardCategory}>Most Wickets</p>\r\n              <h3 className={classes.cardTitle}>{mostWickets ? mostWickets.maxWicketPlayerName : \"\"}</h3>\r\n            </CardHeader>\r\n            <CardFooter stats>\r\n              <div className={classes.stats}>\r\n                <SportsHandballIcon />\r\n                {mostWickets ? mostWickets.maxWicket : \"\"}\r\n              </div>\r\n            </CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer> : \"\"}\r\n\r\n\r\n      <GridContainer>\r\n\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"warning\">\r\n              <h4 className={classes.cardTitleWhite}>Franchise Score Board</h4>\r\n              <p className={classes.cardCategoryWhite}>\r\n                {`Updated as of ${date}`}\r\n              </p>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Table\r\n                tableHeaderColor=\"warning\"\r\n                tableHead={[\"Rank\", \"Franchise\", \"Owner\", \"Score\"]}\r\n                tableData={rankArray}\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}