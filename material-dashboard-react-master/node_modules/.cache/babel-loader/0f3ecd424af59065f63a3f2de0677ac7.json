{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\src\\\\views\\\\Group\\\\AddGroupMember.js\";\n_ = require(\"lodash\");\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { Switch, Route } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport { useHistory } from \"react-router-dom\"; // import Grid from \"@material-ui/core/Grid\";\n\nimport Table from \"components/Table/Table.js\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Radio from '@material-ui/core/Radio';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel'; // import GridItem from \"components/Grid/GridItem.js\";\n// import Card from \"components/Card/Card.js\";\n// import CardAvatar from \"components/Card/CardAvatar.js\";\n// import CardBody from \"components/Card/CardBody.js\";\n// import { useLocation } from \"react-router-dom\";\n\nimport GroupMember from \"views/Group/GroupMember.js\";\nimport NewGroup from \"views/Group/NewGroup.js\";\nvar drawerWidth = 100;\nvar useStyles = makeStyles(function (theme) {\n  return {\n    margin: {\n      margin: theme.spacing(1)\n    },\n    image: {\n      height: \"200px\"\n    },\n    container: {\n      backgroundImage: \"url(\\\"../RCB/5334.jpg\\\")\",\n      backgroundSize: 'cover'\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    drawerHeader: _objectSpread(_objectSpread({\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1)\n    }, theme.mixins.toolbar), {}, {\n      justifyContent: 'flex-start'\n    }),\n    sold: {\n      color: \"green\"\n    },\n    cardCategoryWhite: {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    cardTitleWhite: {\n      color: \"#FFFFFF\",\n      marginTop: \"0px\",\n      minHeight: \"auto\",\n      fontWeight: \"300\",\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n      marginBottom: \"3px\",\n      textDecoration: \"none\"\n    },\n    large: {\n      width: theme.spacing(12),\n      height: theme.spacing(12)\n    },\n    filter: {\n      marginTop: '0.1rem',\n      marginBottom: '0.1rem',\n      fontSize: 5\n    }\n  };\n});\nexport default function AddGroupMember() {\n  var _this = this;\n\n  var classes = useStyles(); // const location = useLocation();\n\n  var history = useHistory();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      memberArray = _useState2[0],\n      setMemberArray = _useState2[1];\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      masterUserArray = _React$useState2[0],\n      setMasterUserArray = _React$useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userArray = _useState4[0],\n      setUserArray = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tournamentStated = _useState6[0],\n      setTournamentStarted = _useState6[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      filterString = _React$useState4[0],\n      setfilterString = _React$useState4[1];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      page = _React$useState6[0],\n      setPage = _React$useState6[1];\n\n  var _React$useState7 = React.useState(true),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      dense = _React$useState8[0],\n      setDense = _React$useState8[1];\n\n  var _React$useState9 = React.useState(10),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      rowsPerPage = _React$useState10[0],\n      setRowsPerPage = _React$useState10[1];\n\n  var _React$useState11 = React.useState(\"\"),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      selectedStation = _React$useState12[0],\n      setSelectedStation = _React$useState12[1];\n\n  useEffect(function () {\n    var fetchMember = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response, response1, tmp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.get(\"/user/group/\".concat(localStorage.getItem(\"gdGid\")));\n\n              case 3:\n                response = _context.sent;\n                // console.log(response.data);\n                setMemberArray(response.data);\n                _context.next = 7;\n                return axios.get(\"/user\");\n\n              case 7:\n                response1 = _context.sent;\n                tmp = response1.data.sort(function (x) {\n                  return x.displayName;\n                });\n                setUserArray(tmp);\n                setMasterUserArray(response1.tmp); // var gameStarted = (response1.data.length > 0);\n                // console.log(gameStarted);\n                // // gameStarted = false;\n                // setTournamentStarted(gameStarted);    \n\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 16:\n                setfilterString(\"\");\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 13]]);\n      }));\n\n      return function fetchMember() {\n        return _ref.apply(this, arguments);\n      };\n    }(); // console.log(`Is Admin: ${localStorage.getItem(\"gdAdmin\")}`);\n\n\n    fetchMember();\n  }, []);\n\n  function addNewMember() {\n    console.log(\"Add new member to be implemnted\");\n  }\n\n  function ShowGmButtons() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      disabled: tournamentStated || localStorage.getItem(\"gdAdmin\").length === 0,\n      className: classes.button,\n      onClick: addNewMember,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, \"Update List\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      className: classes.button,\n      onClick: function onClick() {\n        history.push(\"/admin/groupmember\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, \"Back\"));\n  }\n\n  function SetFilter() {\n    // console.log(\"in set filter\");\n    var chkstr = document.getElementById(\"filterstring\").value.toLowerCase();\n    setfilterString(chkstr);\n    console.log(chkstr);\n    var tmp = masterUserArray.filter(function (x) {\n      return x.displayName.toLowerCase().includes(chkstr);\n    });\n    setUserArray(tmp); // setStationTableData(tmp);\n    // // setSelectedStation((tmp.length > 0) ? tmp[0].StationName : \"\");\n\n    setPage(0);\n  }\n\n  function ShowFilters() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.filter,\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      className: classes.filter,\n      id: \"filterstring\",\n      margin: \"none\",\n      size: \"small\",\n      defaultValue: filterString,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      key: \"filterbtn\",\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      className: classes.button,\n      onClick: SetFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, \"Filter\"));\n  }\n  /*    \r\n  return (\r\n  <div key={localStorage.getItem(\"gdName\")}>\r\n      <h3 className={classes.cardTitle}>Edit Member List ({localStorage.getItem(\"gdName\")})</h3>\r\n      <ShowFilters/>\r\n      <Table\r\n          id={localStorage.getItem(\"gdName\")}\r\n          tableHeaderColor=\"warning\"\r\n          tableHead={[\"userName\", \"displayName\"]}\r\n          tableData={userArray.map(x => {\r\n          const arr = [x.userName, x.displayName]\r\n              return { data: arr, collapse: [] }\r\n          })}\r\n      />\r\n      <br/>\r\n      <ShowGmButtons/>\r\n      <Switch>\r\n          <Route  path='/admin/groupmember' component={GroupMember} key=\"MemberList\"/>\r\n          <Route  path='/admin/newgroup' component={NewGroup} key=\"NewGroup\"></Route>\r\n      </Switch>\r\n  </div>\r\n  );\r\n  */\n\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    event.preventDefault();\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  var handleClick = function handleClick(event, name) {\n    event.preventDefault();\n    console.log(name);\n    setSelectedStation(name);\n  };\n\n  var emptyRows = rowsPerPage - Math.min(rowsPerPage, userArray.length - page * rowsPerPage);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: localStorage.getItem(\"gdName\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, \"Edit Member List (\", localStorage.getItem(\"gdName\"), \")\"), /*#__PURE__*/React.createElement(ShowFilters, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, userArray.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) // .filter(x => x.displayName.toLowerCase().includes(filterString))\n  .map(function (row, index) {\n    // const isItemSelected = isSelected(row.name);\n    //   const isItemSelected = (selectedStation === row.StationName);\n    // console.log(`Info on ${selectedStation} and ${row.StationName}`)\n    // console.log(row);\n    var labelId = \"enhanced-table-checkbox-\".concat(index);\n    return /*#__PURE__*/React.createElement(TableRow // hover\n    , {\n      onClick: function onClick(event) {\n        return handleClick(event, row.userName);\n      },\n      role: \"checkbox\",\n      \"aria-checked\": selectedStation === row.userName,\n      tabIndex: -1,\n      key: row.userName,\n      selected: selectedStation === row.userName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      color: \"primary\",\n      checked: selectedStation === row.userName,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      id: labelId,\n      scope: \"row\",\n      align: \"center\",\n      padding: \"none\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }, row.userName), /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      id: labelId,\n      scope: \"row\",\n      align: \"center\",\n      padding: \"none\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 21\n      }\n    }, row.displayName));\n  }), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: (dense ? 33 : 53) * emptyRows\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 15, 20, 25],\n    component: \"div\",\n    count: userArray.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ShowGmButtons, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/admin/groupmember\",\n    component: GroupMember,\n    key: \"MemberList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/admin/newgroup\",\n    component: NewGroup,\n    key: \"NewGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  })));\n}\n;","map":{"version":3,"sources":["D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/src/views/Group/AddGroupMember.js"],"names":["_","require","React","useEffect","useState","axios","Switch","Route","Button","useHistory","Table","makeStyles","TextField","Checkbox","Radio","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","GroupMember","NewGroup","drawerWidth","useStyles","theme","margin","spacing","image","height","container","backgroundImage","backgroundSize","drawer","width","flexShrink","drawerPaper","drawerHeader","display","alignItems","padding","mixins","toolbar","justifyContent","sold","color","cardCategoryWhite","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","large","filter","AddGroupMember","classes","history","memberArray","setMemberArray","masterUserArray","setMasterUserArray","userArray","setUserArray","tournamentStated","setTournamentStarted","filterString","setfilterString","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","selectedStation","setSelectedStation","fetchMember","get","localStorage","getItem","response","data","response1","tmp","sort","x","displayName","console","log","addNewMember","ShowGmButtons","length","button","push","SetFilter","chkstr","document","getElementById","value","toLowerCase","includes","ShowFilters","handleChangePage","event","newPage","preventDefault","handleChangeRowsPerPage","parseInt","target","handleClick","name","emptyRows","Math","min","cardTitle","slice","map","row","index","labelId","userName"],"mappings":"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","sourcesContent":["_ = require(\"lodash\");\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\n// import Grid from \"@material-ui/core/Grid\";\r\nimport Table from \"components/Table/Table.js\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\n// import GridItem from \"components/Grid/GridItem.js\";\r\n// import Card from \"components/Card/Card.js\";\r\n// import CardAvatar from \"components/Card/CardAvatar.js\";\r\n// import CardBody from \"components/Card/CardBody.js\";\r\n// import { useLocation } from \"react-router-dom\";\r\nimport GroupMember from \"views/Group/GroupMember.js\"\r\nimport NewGroup from \"views/Group/NewGroup.js\"\r\n\r\nconst drawerWidth = 100;\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    image: {\r\n        height: \"200px\"\r\n    },\r\n    container: {\r\n        backgroundImage: \"url(\\\"../RCB/5334.jpg\\\")\",\r\n        backgroundSize: 'cover'\r\n    }, drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    sold: {\r\n        color: \"green\"\r\n    }, cardCategoryWhite: {\r\n        color: \"rgba(255,255,255,.62)\",\r\n        margin: \"0\",\r\n        fontSize: \"14px\",\r\n        marginTop: \"0\",\r\n        marginBottom: \"0\"\r\n    },\r\n    cardTitleWhite: {\r\n        color: \"#FFFFFF\",\r\n        marginTop: \"0px\",\r\n        minHeight: \"auto\",\r\n        fontWeight: \"300\",\r\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n        marginBottom: \"3px\",\r\n        textDecoration: \"none\"\r\n    }, \r\n    large: {\r\n        width: theme.spacing(12),\r\n        height: theme.spacing(12),\r\n    },\r\n    filter: {\r\n        marginTop: '0.1rem',\r\n        marginBottom: '0.1rem',\r\n        fontSize: 5,\r\n      },\r\n    }));\r\n\r\n\r\nexport default function AddGroupMember() {\r\n    const classes = useStyles();\r\n    // const location = useLocation();\r\n    const history = useHistory();\r\n    const [memberArray, setMemberArray] = useState([]);\r\n    const [masterUserArray, setMasterUserArray] = React.useState([]);\r\n    const [userArray, setUserArray] = useState([]);\r\n    const [tournamentStated, setTournamentStarted] = useState(false);\r\n    const [filterString, setfilterString] = React.useState(\"\");\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense, setDense] = React.useState(true);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [selectedStation, setSelectedStation] = React.useState(\"\");\r\n\r\n    useEffect(() => {\r\n       \r\n        const fetchMember = async () => {\r\n            // console.log(state);\r\n            try {\r\n                var response = await axios.get(`/user/group/${localStorage.getItem(\"gdGid\")}`);\r\n                // console.log(response.data);\r\n                setMemberArray(response.data);\r\n                var response1 = await axios.get(`/user`);\r\n                let tmp = response1.data.sort(x => x.displayName);\r\n                \r\n                setUserArray(tmp);\r\n                setMasterUserArray(response1.tmp);\r\n                // var gameStarted = (response1.data.length > 0);\r\n                // console.log(gameStarted);\r\n                // // gameStarted = false;\r\n                // setTournamentStarted(gameStarted);    \r\n            } catch (e) {\r\n                console.log(e)\r\n            }\r\n            setfilterString(\"\")\r\n        }\r\n        // console.log(`Is Admin: ${localStorage.getItem(\"gdAdmin\")}`);\r\n        fetchMember();\r\n    }, []);\r\n\r\n    function addNewMember() {\r\n        console.log(\"Add new member to be implemnted\");\r\n    }\r\n\r\n\r\n    function ShowGmButtons() {\r\n        return (\r\n        <div align=\"center\">\r\n            <Button variant=\"contained\" color=\"primary\" size=\"small\"\r\n                disabled={tournamentStated || (localStorage.getItem(\"gdAdmin\").length === 0)}\r\n                className={classes.button} onClick={addNewMember}>Update List\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" size=\"small\"\r\n                className={classes.button} onClick={() => { history.push(\"/admin/groupmember\") }}>Back\r\n            </Button>\r\n\r\n        </div>)\r\n    }\r\n\r\n    function SetFilter() { \r\n        // console.log(\"in set filter\");\r\n        const chkstr = document.getElementById(\"filterstring\").value.toLowerCase();\r\n        setfilterString(chkstr);\r\n        console.log(chkstr);\r\n        var tmp = masterUserArray.filter(x => x.displayName.toLowerCase().includes(chkstr));\r\n        setUserArray(tmp);\r\n        // setStationTableData(tmp);\r\n        // // setSelectedStation((tmp.length > 0) ? tmp[0].StationName : \"\");\r\n        setPage(0);\r\n      }\r\n    \r\n    function ShowFilters() {\r\n        return (\r\n          <div className={classes.filter} align=\"right\">\r\n            <TextField className={classes.filter} id=\"filterstring\" margin=\"none\" size=\"small\" defaultValue={filterString}/>        \r\n            <Button key=\"filterbtn\" variant=\"contained\" color=\"primary\" size=\"small\"\r\n              className={classes.button} onClick={SetFilter}>Filter\r\n            </Button>\r\n          </div>\r\n        );\r\n      }\r\n\r\n    /*    \r\n    return (\r\n    <div key={localStorage.getItem(\"gdName\")}>\r\n        <h3 className={classes.cardTitle}>Edit Member List ({localStorage.getItem(\"gdName\")})</h3>\r\n        <ShowFilters/>\r\n        <Table\r\n            id={localStorage.getItem(\"gdName\")}\r\n            tableHeaderColor=\"warning\"\r\n            tableHead={[\"userName\", \"displayName\"]}\r\n            tableData={userArray.map(x => {\r\n            const arr = [x.userName, x.displayName]\r\n                return { data: arr, collapse: [] }\r\n            })}\r\n        />\r\n        <br/>\r\n        <ShowGmButtons/>\r\n        <Switch>\r\n            <Route  path='/admin/groupmember' component={GroupMember} key=\"MemberList\"/>\r\n            <Route  path='/admin/newgroup' component={NewGroup} key=\"NewGroup\"></Route>\r\n        </Switch>\r\n    </div>\r\n    );\r\n*/\r\n\r\nconst handleChangePage = (event, newPage) => {\r\n    event.preventDefault();\r\n    setPage(newPage);\r\n};\r\n\r\nconst handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n};\r\n\r\nconst handleClick = (event, name) => {\r\n    event.preventDefault();\r\n    console.log(name);\r\n    setSelectedStation(name);\r\n  };\r\n\r\nconst emptyRows = rowsPerPage - Math.min(rowsPerPage, userArray.length - page * rowsPerPage);\r\n\r\nreturn (\r\n    <div key={localStorage.getItem(\"gdName\")}>\r\n        <h3 className={classes.cardTitle}>Edit Member List ({localStorage.getItem(\"gdName\")})</h3>\r\n        <ShowFilters/>\r\n        <TableContainer>\r\n        <TableBody>\r\n              {userArray.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                // .filter(x => x.displayName.toLowerCase().includes(filterString))\r\n                .map((row, index) => {\r\n                  // const isItemSelected = isSelected(row.name);\r\n                //   const isItemSelected = (selectedStation === row.StationName);\r\n                  // console.log(`Info on ${selectedStation} and ${row.StationName}`)\r\n                  // console.log(row);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n                  return (\r\n                    <TableRow\r\n                      // hover\r\n                      onClick={(event) => handleClick(event, row.userName)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={(selectedStation === row.userName)}\r\n                      tabIndex={-1}\r\n                      key={row.userName}\r\n                      selected={(selectedStation === row.userName)}\r\n                    >\r\n                    <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        color=\"primary\"\r\n                        checked={(selectedStation === row.userName)}\r\n                        inputProps={{ 'aria-labelledby': labelId }}\r\n                    />\r\n                    </TableCell>\r\n                    <TableCell component=\"th\" id={labelId} scope=\"row\" align=\"center\" padding=\"none\">\r\n                    {row.userName}\r\n                    </TableCell>\r\n                    <TableCell component=\"th\" id={labelId} scope=\"row\" align=\"center\" padding=\"none\">\r\n                    {row.displayName}\r\n                    </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={2} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 15, 20, 25]}\r\n          component=\"div\"\r\n          count={userArray.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n        <br/>\r\n        <ShowGmButtons/>\r\n        <Switch>\r\n            <Route  path='/admin/groupmember' component={GroupMember} key=\"MemberList\"/>\r\n            <Route  path='/admin/newgroup' component={NewGroup} key=\"NewGroup\"></Route>\r\n        </Switch>\r\n    </div>\r\n    );\r\n\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}