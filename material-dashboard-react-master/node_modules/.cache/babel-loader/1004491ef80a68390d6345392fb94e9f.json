{"ast":null,"code":"import _regeneratorRuntime from \"D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _s = $RefreshSig$(),\n    _jsxFileName = \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\src\\\\views\\\\Group\\\\GroupDetails.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline'; // import TextField from '@material-ui/core/TextField';\n\nimport Link from '@material-ui/core/Link';\nimport { Switch, Route } from 'react-router-dom'; // import Grid from '@material-ui/core/Grid';\n// import Box from '@material-ui/core/Box';\n\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { UserContext } from \"../../UserContext\";\nimport axios from \"axios\";\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport red from '@material-ui/core/colors/red';\nimport { useHistory } from \"react-router-dom\";\nimport { validateSpecialCharacters, validateEmail } from \"views/functions.js\";\nimport { BlankArea } from \"CustomComponents/CustomComponents.js\";\nimport { useParams } from \"react-router\"; // const [myGroupName, setMyGroupName] = useState(\"\");\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n      width: '100%',\n      // Fix IE 11 issue.\n      marginTop: theme.spacing(1)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    },\n    error: {\n      // right: 0,\n      fontSize: '12px',\n      color: red[700],\n      // position: 'absolute',\n      alignItems: 'center',\n      marginTop: '0px'\n    }\n  };\n});\n\nfunction paramData() {\n  _s();\n\n  var _useParams = useParams(),\n      groupName = _useParams.groupName;\n\n  return groupName;\n}\n\n_s(paramData, \"k0ijay+4gTmhd+CXx0hOwnbLC1o=\", false, function () {\n  return [useParams];\n});\n\nvar myGroupName = \"\";\n\nvar ChildComp = /*#__PURE__*/function (_React$Component) {\n  _inherits(ChildComp, _React$Component);\n\n  var _super = _createSuper(ChildComp);\n\n  function ChildComp() {\n    _classCallCheck(this, ChildComp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ChildComp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      // custom rule will have name 'isPasswordMatch'\n      ValidatorForm.addValidationRule('isPasswordMatch', function (value) {\n        return value === _this.props.p1;\n      });\n      ValidatorForm.addValidationRule('minLength', function (value) {\n        return value.length >= 6;\n      });\n      ValidatorForm.addValidationRule('noSpecialCharacters', function (value) {\n        return validateSpecialCharacters(value);\n      });\n      ValidatorForm.addValidationRule('isEmailOK', function (value) {\n        return validateEmail(value);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // remove rule when it is not needed\n      ValidatorForm.removeValidationRule('isPasswordMatch');\n      ValidatorForm.removeValidationRule('isEmailOK');\n      ValidatorForm.removeValidationRule('minLength');\n      ValidatorForm.removeValidationRule('noSpecialCharacters');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return ChildComp;\n}(React.Component); // const handleSubmit = e => {\n//   e.preventDefault();\n// };\n\n\nexport default function GroupDetails() {\n  _s2();\n\n  var classes = useStyles();\n  var history = useHistory(); //   const [userName, setUserName] = useState(\"\");\n  //   const [password, setPassword] = useState(\"\");\n  //   const [email, setEmail] = useState(\"\");\n  //   const [repeatPassword, setRepeatPassword] = useState(\"\");\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      registerStatus = _useState2[0],\n      setRegisterStatus = _useState2[1];\n\n  var _useContext = useContext(UserContext),\n      setUser = _useContext.setUser;\n\n  myGroupName = paramData();\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"Submit command provided\"); // let response = await fetch(`/user/signup/${userName}/${password}/${email}`);\n              // setRegisterStatus(response.status);\n              // console.log(`Status is ${response.status}`);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  function handleLogin() {\n    // console.log(\"Call for login here\");\n    history.push(\"/signin\");\n  }\n\n  function ShowResisterStatus() {\n    // console.log(`Status is ${registerStatus}`);\n    var myMsg;\n\n    switch (registerStatus) {\n      case 200:\n        // setUserName(\"\");\n        // setPassword(\"\");\n        // setRepeatPassword(\"\");\n        // setEmail(\"\");\n        myMsg = \"User \".concat(userName, \" successfully regisitered.\");\n        break;\n\n      case 602:\n        myMsg = \"User Name already in use\";\n        break;\n\n      case 603:\n        myMsg = \"Email id already in use\";\n        break;\n\n      default:\n        myMsg = \"\";\n        break;\n    }\n\n    return /*#__PURE__*/React.createElement(Typography, {\n      className: registerStatus === 200 ? classes.root : classes.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, myMsg);\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, \"Group Details\"), /*#__PURE__*/React.createElement(ValidatorForm, {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    variant: \"outlined\",\n    fullWidth: true,\n    readOnly: true,\n    value: myGroupName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BlankArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BlankArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\" // size=\"small\"\n    // fullWidth\n    ,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"cancel\" // fullWidth\n    ,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    onClick: function onClick() {\n      history.push('/admin/mygroup');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }\n  }, \"Back\"))), /*#__PURE__*/React.createElement(ShowResisterStatus, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 5\n    }\n  })));\n}\n/*\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n        //   <LockOutlinedIcon />\r\n        // </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Group Details\r\n        </Typography>\r\n    <ValidatorForm className={classes.form} onSubmit={handleSubmit}>\r\n      <TextValidator\r\n          variant=\"outlined\"\r\n        //   required\r\n          fullWidth      \r\n          label=\"User Name\"\r\n        //   onChange={(event) => setUserName(event.target.value)}\r\n          name=\"username\"\r\n          // type=\"\"\r\n        //   validators={['required', 'minLength', 'noSpecialCharacters']}\r\n        //   errorMessages={['User Name to be provided', 'Mimumum 6 characters required', 'Special characters not permitted']}\r\n          value={localStorage.getItem(\"groupName\")}\r\n      />\r\n      <BlankArea/>\r\n      <TextValidator\r\n          variant=\"outlined\"\r\n          required\r\n          fullWidth      \r\n          label=\"Email\"\r\n          onChange={(event) => setEmail(event.target.value)}\r\n          name=\"email\"\r\n          type=\"email\"\r\n          validators={['isEmailOK', 'required']}\r\n          errorMessages={['Invalid Email', 'Email to be provided']}\r\n          value={email}\r\n      />\r\n      <BlankArea/>\r\n      <TextValidator\r\n          variant=\"outlined\"\r\n          required\r\n          fullWidth      \r\n          label=\"Password\"\r\n          onChange={(event) => setPassword(event.target.value)}\r\n          name=\"password\"\r\n          type=\"password\"\r\n          validators={['required', 'minLength', 'noSpecialCharacters']}\r\n          errorMessages={['Password to be provided', 'Mimumum 6 characters required', 'Special characters not permitted']}\r\n          value={password}\r\n      />\r\n      <BlankArea/>\r\n      <TextValidator\r\n          variant=\"outlined\"\r\n          required\r\n          fullWidth      \r\n          label=\"Repeat password\"\r\n          onChange={(event) => setRepeatPassword(event.target.value)}\r\n          name=\"repeatPassword\"\r\n          type=\"password\"\r\n          validators={['isPasswordMatch', 'required']}\r\n          errorMessages={['password mismatch', 'this field is required']}\r\n          value={repeatPassword}\r\n      />\r\n      <BlankArea/>\r\n      <Button\r\n        type=\"submit\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.submit}\r\n      >\r\n        Register\r\n    </Button>\r\n    </ValidatorForm>\r\n    <ShowResisterStatus/>\r\n    </div>\r\n    <ChildComp p1={password}/>    \r\n    <Switch>\r\n      <Route  path='/admin/signin' component={SignIn} key=\"MemberList\"/>\r\n    </Switch>\r\n    </Container>\r\n  );\r\n\r\n*/\n\n_s2(GroupDetails, \"e3Yh6qxkl22GOsiE5KdtOju7+70=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = GroupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupDetails\");","map":{"version":3,"sources":["D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/src/views/Group/GroupDetails.js"],"names":["React","useState","useContext","Avatar","Button","CssBaseline","Link","Switch","Route","LockOutlinedIcon","Typography","makeStyles","Container","UserContext","axios","ValidatorForm","TextValidator","red","useHistory","validateSpecialCharacters","validateEmail","BlankArea","useParams","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","error","fontSize","color","paramData","groupName","myGroupName","ChildComp","addValidationRule","value","props","p1","length","removeValidationRule","Component","GroupDetails","classes","history","registerStatus","setRegisterStatus","setUser","handleSubmit","console","log","handleLogin","push","ShowResisterStatus","myMsg","userName","root"],"mappings":"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","sourcesContent":["import React, { useState ,useContext} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n// import TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport { Switch, Route } from 'react-router-dom';\r\n// import Grid from '@material-ui/core/Grid';\r\n// import Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { UserContext } from \"../../UserContext\";\r\nimport axios from \"axios\";\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport red from '@material-ui/core/colors/red';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {validateSpecialCharacters, validateEmail} from \"views/functions.js\";\r\nimport {BlankArea} from \"CustomComponents/CustomComponents.js\"\r\nimport { useParams } from \"react-router\";\r\n\r\n// const [myGroupName, setMyGroupName] = useState(\"\");\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  error:  {\r\n      // right: 0,\r\n      fontSize: '12px',\r\n      color: red[700],\r\n      // position: 'absolute',\r\n      alignItems: 'center',\r\n      marginTop: '0px',\r\n  },\r\n}));\r\n\r\nfunction paramData() {\r\n    let { groupName } = useParams();\r\n    return groupName;\r\n}\r\n\r\nvar myGroupName = \"\";\r\n\r\nclass ChildComp extends React.Component {\r\n\r\n  componentDidMount()  {\r\n    // custom rule will have name 'isPasswordMatch'\r\n    ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n      return (value === this.props.p1)\r\n    });\r\n\r\n    ValidatorForm.addValidationRule('minLength', (value) => {\r\n      return (value.length >= 6)\r\n    });\r\n\r\n    ValidatorForm.addValidationRule('noSpecialCharacters', (value) => {\r\n      return validateSpecialCharacters(value);\r\n    });\r\n\r\n    ValidatorForm.addValidationRule('isEmailOK', (value) => {\r\n      return validateEmail(value);\r\n    });\r\n  }\r\n\r\n  \r\n  componentWillUnmount() {\r\n    // remove rule when it is not needed\r\n    ValidatorForm.removeValidationRule('isPasswordMatch');\r\n    ValidatorForm.removeValidationRule('isEmailOK');\r\n    ValidatorForm.removeValidationRule('minLength');\r\n    ValidatorForm.removeValidationRule('noSpecialCharacters');   \r\n  }\r\n\r\n  render() {\r\n    return <br/>;\r\n  }\r\n\r\n}\r\n// const handleSubmit = e => {\r\n//   e.preventDefault();\r\n// };\r\n\r\n\r\n\r\nexport default function GroupDetails() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n//   const [userName, setUserName] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [repeatPassword, setRepeatPassword] = useState(\"\");\r\n  const [registerStatus, setRegisterStatus] = useState(0);\r\n\r\n  const { setUser } = useContext(UserContext);\r\n\r\n  myGroupName = paramData();\r\n  \r\n  const handleSubmit = async() => {\r\n    console.log(\"Submit command provided\");\r\n    // let response = await fetch(`/user/signup/${userName}/${password}/${email}`);\r\n    // setRegisterStatus(response.status);\r\n    // console.log(`Status is ${response.status}`);\r\n  }\r\n\r\n  function handleLogin() {\r\n    // console.log(\"Call for login here\");\r\n    history.push(\"/signin\")\r\n  }\r\n\r\n  function ShowResisterStatus() {\r\n    // console.log(`Status is ${registerStatus}`);\r\n    let myMsg;\r\n    switch (registerStatus) {\r\n      case 200:\r\n        // setUserName(\"\");\r\n        // setPassword(\"\");\r\n        // setRepeatPassword(\"\");\r\n        // setEmail(\"\");\r\n        myMsg = `User ${userName} successfully regisitered.`;\r\n        break;\r\n      case 602:\r\n        myMsg = \"User Name already in use\";\r\n        break;\r\n      case 603:\r\n        myMsg = \"Email id already in use\";\r\n        break;\r\n      default:\r\n          myMsg = \"\";\r\n          break;\r\n    }\r\n    return(\r\n        <Typography className={(registerStatus === 200) ? classes.root : classes.error}>{myMsg}</Typography>\r\n    )\r\n  }\r\n\r\n  \r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Group Details\r\n        </Typography>\r\n    <ValidatorForm className={classes.form} onSubmit={handleSubmit}>\r\n      <TextValidator\r\n          variant=\"outlined\"\r\n          fullWidth      \r\n          readOnly\r\n          value={myGroupName}\r\n        />\r\n      <BlankArea/>\r\n      <BlankArea/>\r\n       <div align=\"center\">\r\n      <Button\r\n        type=\"submit\"\r\n        // size=\"small\"\r\n        // fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.submit}\r\n      >\r\n        Update\r\n    </Button>\r\n    <Button\r\n        type=\"cancel\"\r\n        // fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.submit}\r\n        onClick={() => {history.push('/admin/mygroup')}}\r\n      >\r\n        Back\r\n    </Button>\r\n    </div>\r\n    </ValidatorForm>\r\n    <ShowResisterStatus/>\r\n    </div>\r\n    {/* <ChildComp p1={password}/>     */}\r\n    {/* <Switch>\r\n      <Route  path='/admin/group' component={SignIn} key=\"MemberList\"/>\r\n    </Switch> */}\r\n    </Container>\r\n  );\r\n}\r\n\r\n/*\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n        //   <LockOutlinedIcon />\r\n        // </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Group Details\r\n        </Typography>\r\n    <ValidatorForm className={classes.form} onSubmit={handleSubmit}>\r\n      <TextValidator\r\n          variant=\"outlined\"\r\n        //   required\r\n          fullWidth      \r\n          label=\"User Name\"\r\n        //   onChange={(event) => setUserName(event.target.value)}\r\n          name=\"username\"\r\n          // type=\"\"\r\n        //   validators={['required', 'minLength', 'noSpecialCharacters']}\r\n        //   errorMessages={['User Name to be provided', 'Mimumum 6 characters required', 'Special characters not permitted']}\r\n          value={localStorage.getItem(\"groupName\")}\r\n      />\r\n      <BlankArea/>\r\n      <TextValidator\r\n          variant=\"outlined\"\r\n          required\r\n          fullWidth      \r\n          label=\"Email\"\r\n          onChange={(event) => setEmail(event.target.value)}\r\n          name=\"email\"\r\n          type=\"email\"\r\n          validators={['isEmailOK', 'required']}\r\n          errorMessages={['Invalid Email', 'Email to be provided']}\r\n          value={email}\r\n      />\r\n      <BlankArea/>\r\n      <TextValidator\r\n          variant=\"outlined\"\r\n          required\r\n          fullWidth      \r\n          label=\"Password\"\r\n          onChange={(event) => setPassword(event.target.value)}\r\n          name=\"password\"\r\n          type=\"password\"\r\n          validators={['required', 'minLength', 'noSpecialCharacters']}\r\n          errorMessages={['Password to be provided', 'Mimumum 6 characters required', 'Special characters not permitted']}\r\n          value={password}\r\n      />\r\n      <BlankArea/>\r\n      <TextValidator\r\n          variant=\"outlined\"\r\n          required\r\n          fullWidth      \r\n          label=\"Repeat password\"\r\n          onChange={(event) => setRepeatPassword(event.target.value)}\r\n          name=\"repeatPassword\"\r\n          type=\"password\"\r\n          validators={['isPasswordMatch', 'required']}\r\n          errorMessages={['password mismatch', 'this field is required']}\r\n          value={repeatPassword}\r\n      />\r\n      <BlankArea/>\r\n      <Button\r\n        type=\"submit\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.submit}\r\n      >\r\n        Register\r\n    </Button>\r\n    </ValidatorForm>\r\n    <ShowResisterStatus/>\r\n    </div>\r\n    <ChildComp p1={password}/>    \r\n    <Switch>\r\n      <Route  path='/admin/signin' component={SignIn} key=\"MemberList\"/>\r\n    </Switch>\r\n    </Container>\r\n  );\r\n\r\n*/"]},"metadata":{},"sourceType":"module"}