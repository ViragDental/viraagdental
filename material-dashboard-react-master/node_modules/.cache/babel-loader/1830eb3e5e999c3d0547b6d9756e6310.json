{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _objectSpread from\"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import React,{useEffect,useState}from'react';import axios from\"axios\";import Grid from\"@material-ui/core/Grid\";import Table from\"components/Table/Table.js\";import{makeStyles}from'@material-ui/core/styles';// import { UserContext } from \"../../UserContext\";\n// import { Typography } from '@material-ui/core';\nimport GridItem from\"components/Grid/GridItem.js\";import Card from\"components/Card/Card.js\";// import CardAvatar from \"components/Card/CardAvatar.js\";\nimport CardBody from\"components/Card/CardBody.js\";import Avatar from\"@material-ui/core/Avatar\";var drawerWidth=100;var useStyles=makeStyles(function(theme){return{margin:{margin:theme.spacing(1)},image:{height:\"200px\"},container:{backgroundImage:\"url(\\\"../RCB/5334.jpg\\\")\",backgroundSize:'cover'},drawer:{width:drawerWidth,flexShrink:0},drawerPaper:{width:drawerWidth},drawerHeader:_objectSpread(_objectSpread({display:'flex',alignItems:'center',padding:theme.spacing(0,1)},theme.mixins.toolbar),{},{justifyContent:'flex-start'}),sold:{color:\"green\"},cardCategoryWhite:{color:\"rgba(255,255,255,.62)\",margin:\"0\",fontSize:\"14px\",marginTop:\"0\",marginBottom:\"0\"},cardTitleWhite:{color:\"#FFFFFF\",marginTop:\"0px\",minHeight:\"auto\",fontWeight:\"300\",fontFamily:\"'Roboto', 'Helvetica', 'Arial', sans-serif\",marginBottom:\"3px\",textDecoration:\"none\"},large:{width:theme.spacing(12),height:theme.spacing(12)},medium:{width:theme.spacing(7),height:theme.spacing(7)}};});// const populateTable = (data) => {\n//     const tableData = [];\n//     data.forEach(element => {\n//         tableData.push({ displayName: element.displayName, players: element.players })\n//     });\n//     return tableData;\n// }\nexport default function App(){// const { user } = useContext(UserContext);\n// const theme = useTheme();\nvar classes=useStyles();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),teamArray=_useState2[0],setTeamArray=_useState2[1];useEffect(function(){var fetchTeam=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var myTeamUrl,response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;myTeamUrl=\"\";if(localStorage.getItem(\"admin\")===\"true\")myTeamUrl=\"/user/myteam/\".concat(localStorage.getItem(\"gid\"),\"/all\");else if(localStorage.getItem(\"ismember\")===\"true\")myTeamUrl=\"/user/myteam/\".concat(localStorage.getItem(\"gid\"),\"/\").concat(localStorage.getItem(\"uid\"));if(!(myTeamUrl.length>0)){_context.next=10;break;}_context.next=6;return axios.get(myTeamUrl);case 6:response=_context.sent;// data = populateTable(response.data);\n// console.log(response.data);\nsetTeamArray(response.data);_context.next=12;break;case 10:data=[{displayName:\"Not a team member\",players:[{playerName:\"\",team:\"\",bidAmount:\"\"}]}];setTeamArray(data);case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 17:case\"end\":return _context.stop();}}},_callee,null,[[0,14]]);}));return function fetchTeam(){return _ref.apply(this,arguments);};}();fetchTeam();},[]);// return (\n//     teamArray.map(team => \n//     <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n//         <Typography>{team.displayName}</Typography>\n//         <Table\n//             tableHeaderColor=\"warning\"\n//             tableHead={[\"Player Name\", \"Team\", \"Bid Amount\"]}\n//             tableData={team.players.map(team => {\n//                 const arr = [team.playerName, team.team, team.bidAmount]\n//                 return { data: arr, collapse: [] }\n//             })}\n//         />\n//     </Grid>           \n//     )\n// )\n// <Grid container justify=\"center\" alignItems=\"center\">\n// <Grid item xs={12}>\n//     <div key={team.displayName}>\nreturn teamArray.map(function(team){return/*#__PURE__*/ (// <Grid key={team.displayName} container justify=\"center\" alignItems=\"center\" >\n//     <GridItem key={team.displayName} xs={12} sm={12} md={12} lg={12} >\n//         <Card key={team.displayName} profile>\n//             <CardBody key={team.displayName} profile>\nReact.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",{className:classes.cardTitle},team.displayName),/*#__PURE__*/React.createElement(Table,{key:team.displayName,id:team.displayName,tableHeaderColor:\"warning\",tableHead:[\"Player Name\",\"Team\",\"Bid Amount\"],tableData:team.players.map(function(team){var arr=[team.playerName,/*#__PURE__*/React.createElement(Avatar,{variant:\"circle\",src:\"\".concat(process.env.PUBLIC_URL,\"/\").concat(team.team,\".JPG\"),className:classes.medium}),team.bidAmount];return{data:arr,collapse:[]};})})));}//             </CardBody>\n//         </Card>\n//     </GridItem>\n// </Grid>\n);};","map":{"version":3,"sources":["D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/src/views/MyTeam/MyTeam.js"],"names":["React","useEffect","useState","axios","Grid","Table","makeStyles","GridItem","Card","CardBody","Avatar","drawerWidth","useStyles","theme","margin","spacing","image","height","container","backgroundImage","backgroundSize","drawer","width","flexShrink","drawerPaper","drawerHeader","display","alignItems","padding","mixins","toolbar","justifyContent","sold","color","cardCategoryWhite","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","large","medium","App","classes","teamArray","setTeamArray","fetchTeam","myTeamUrl","localStorage","getItem","length","get","response","data","displayName","players","playerName","team","bidAmount","console","log","map","cardTitle","arr","process","env","PUBLIC_URL","collapse"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Table from \"components/Table/Table.js\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import { UserContext } from \"../../UserContext\";\r\n// import { Typography } from '@material-ui/core';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport Card from \"components/Card/Card.js\";\r\n// import CardAvatar from \"components/Card/CardAvatar.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\n\r\nconst drawerWidth = 100;\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    image: {\r\n        height: \"200px\"\r\n    },\r\n    container: {\r\n        backgroundImage: \"url(\\\"../RCB/5334.jpg\\\")\",\r\n        backgroundSize: 'cover'\r\n    }, drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    sold: {\r\n        color: \"green\"\r\n    }, cardCategoryWhite: {\r\n        color: \"rgba(255,255,255,.62)\",\r\n        margin: \"0\",\r\n        fontSize: \"14px\",\r\n        marginTop: \"0\",\r\n        marginBottom: \"0\"\r\n    },\r\n    cardTitleWhite: {\r\n        color: \"#FFFFFF\",\r\n        marginTop: \"0px\",\r\n        minHeight: \"auto\",\r\n        fontWeight: \"300\",\r\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n        marginBottom: \"3px\",\r\n        textDecoration: \"none\"\r\n    },\r\n    large: {\r\n        width: theme.spacing(12),\r\n        height: theme.spacing(12),\r\n    },\r\n    medium: {\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7),\r\n    }\r\n}));\r\n\r\n\r\n// const populateTable = (data) => {\r\n//     const tableData = [];\r\n//     data.forEach(element => {\r\n//         tableData.push({ displayName: element.displayName, players: element.players })\r\n//     });\r\n//     return tableData;\r\n// }\r\n\r\nexport default function App() {\r\n    // const { user } = useContext(UserContext);\r\n    // const theme = useTheme();\r\n\r\n    const classes = useStyles();\r\n    const [teamArray, setTeamArray] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchTeam = async () => {\r\n            try {\r\n                var myTeamUrl = \"\";\r\n                if (localStorage.getItem(\"admin\") === \"true\")\r\n                    myTeamUrl = `/user/myteam/${localStorage.getItem(\"gid\")}/all`;\r\n                else if (localStorage.getItem(\"ismember\") === \"true\")\r\n                    myTeamUrl = `/user/myteam/${localStorage.getItem(\"gid\")}/${localStorage.getItem(\"uid\")}`;\r\n                \r\n                if (myTeamUrl.length > 0) {\r\n                    var response = await axios.get(myTeamUrl);\r\n                    // data = populateTable(response.data);\r\n                    // console.log(response.data);\r\n                    setTeamArray(response.data);\r\n                } else {\r\n                    var data = [{displayName: \"Not a team member\", players: [{playerName: \"\", team: \"\", bidAmount: \"\"}] }];\r\n                    setTeamArray(data);\r\n                }\r\n            } catch (e) {\r\n                console.log(e)\r\n            }\r\n        }\r\n        fetchTeam();\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    // return (\r\n    //     teamArray.map(team => \r\n    //     <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n    //         <Typography>{team.displayName}</Typography>\r\n    //         <Table\r\n    //             tableHeaderColor=\"warning\"\r\n    //             tableHead={[\"Player Name\", \"Team\", \"Bid Amount\"]}\r\n    //             tableData={team.players.map(team => {\r\n    //                 const arr = [team.playerName, team.team, team.bidAmount]\r\n    //                 return { data: arr, collapse: [] }\r\n    //             })}\r\n    //         />\r\n    //     </Grid>           \r\n    //     )\r\n\r\n    // )\r\n\r\n    // <Grid container justify=\"center\" alignItems=\"center\">\r\n    // <Grid item xs={12}>\r\n    //     <div key={team.displayName}>\r\n\r\n    return (\r\n        teamArray.map(team => \r\n                    // <Grid key={team.displayName} container justify=\"center\" alignItems=\"center\" >\r\n                    //     <GridItem key={team.displayName} xs={12} sm={12} md={12} lg={12} >\r\n                    //         <Card key={team.displayName} profile>\r\n                    //             <CardBody key={team.displayName} profile>\r\n                                <div>\r\n                                    <h3 className={classes.cardTitle}>{team.displayName}</h3>\r\n                                    <Table\r\n                                        key={team.displayName}\r\n                                        id={team.displayName}\r\n                                        tableHeaderColor=\"warning\"\r\n                                        tableHead={[\"Player Name\", \"Team\", \"Bid Amount\"]}\r\n                                        tableData={team.players.map(team => {\r\n                                            const arr = [team.playerName, \r\n                                                <Avatar variant=\"circle\" src={`${process.env.PUBLIC_URL}/${team.team}.JPG`} className={classes.medium} />, \r\n                                                team.bidAmount]\r\n                                                return { data: arr, collapse: [] }\r\n                                        })}\r\n                                    />\r\n                                </div>\r\n                    //             </CardBody>\r\n                    //         </Card>\r\n                    //     </GridItem>\r\n                    // </Grid>\r\n        )\r\n    )\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}