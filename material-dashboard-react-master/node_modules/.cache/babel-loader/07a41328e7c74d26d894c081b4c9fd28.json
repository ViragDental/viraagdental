{"ast":null,"code":"import _defineProperty from \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\src\\\\views\\\\Dashboard\\\\Dashboard.js\";\nimport React from \"react\"; // react plugin for creating charts\n// @material-ui/core\n\nimport { useEffect, useState, useContext } from 'react';\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\"; // @material-ui/icons\n\nimport SportsHandballIcon from '@material-ui/icons/SportsHandball';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Update from \"@material-ui/icons/Update\";\nimport Accessibility from \"@material-ui/icons/Accessibility\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardIcon from \"components/Card/CardIcon.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport socketIOClient from \"socket.io-client\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nvar ENDPOINT = \"https://happy-home-ipl-2020.herokuapp.com/\"; // const ENDPOINT = \"http://localhost:4000\";\n\nvar useStyles = makeStyles(styles);\nexport default function Dashboard() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      rankArray = _useState2[0],\n      setRankArray = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rank = _useState4[0],\n      setRank = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      score = _useState6[0],\n      setScore = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      mostRuns = _useState8[0],\n      setMostRuns = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      mostWickets = _useState10[0],\n      setMostwickets = _useState10[1]; // const [mvp, SetMvp] = useState();\n  // const { user } = useContext(UserContext);\n\n\n  var date = new Date().toDateString() + \" \" + new Date().toLocaleTimeString();\n  var socket = socketIOClient(ENDPOINT);\n\n  var tableData = function tableData(rankDetails) {\n    var arr = rankDetails.map(function (element) {\n      var _Object$values;\n\n      // console.log(element)\n      var displayName = element.displayName,\n          userName = element.userName,\n          grandScore = element.grandScore,\n          rank = element.rank; //const {rank,displayName,userName,grandScore}=element;\n\n      return {\n        data: Object.values((_Object$values = {\n          rank: rank,\n          displayName: displayName,\n          userName: userName\n        }, _defineProperty(_Object$values, \"displayName\", displayName), _defineProperty(_Object$values, \"grandScore\", grandScore), _Object$values)),\n        collapse: []\n      };\n    });\n    return arr;\n  };\n\n  useEffect(function () {\n    socket.on(\"connect\", function () {\n      console.log(\"dashboard connected\");\n      socket.on(\"rank\", function (rank) {\n        // console.log(rank)\n        var userDetails = rank.filter(function (element) {\n          return element.uid === parseInt(localStorage.getItem(\"uid\"));\n        }); // if (userDetails) {\n        //   setRank(userDetails[0].rank);\n        //   setScore(userDetails[0].grandScore)\n        //   setRankArray(tableData(rank));\n        // }\n        // console.log(`Admin: ${localStorage.getItem(\"admin\")}`)\n\n        if (userDetails.length > 0) {\n          // if details of current user found (current user is a member of group 1)\n          setRank(userDetails[0].rank);\n          setScore(userDetails[0].grandScore);\n          setRankArray(tableData(rank));\n        } else if (localStorage.getItem(\"admin\") == \"true\") {\n          // current user is not member of the group but is ADMIN. Thus show the rank details\n          setRankArray(tableData(rank));\n        }\n      });\n      socket.on(\"maxRun\", function (maxRun) {\n        var runDetails = maxRun.filter(function (element) {\n          return element.uid === parseInt(localStorage.getItem(\"uid\"));\n        }); // console.log(runDetails)\n\n        if (runDetails) {\n          setMostRuns(runDetails[0]);\n        }\n      });\n      socket.on(\"maxWicket\", function (maxWicket) {\n        var wicketDetails = maxWicket.filter(function (element) {\n          return element.uid === parseInt(localStorage.getItem(\"uid\"));\n        });\n\n        if (wicketDetails) {\n          setMostwickets(wicketDetails[0]);\n        }\n      });\n    });\n  }, [rankArray]);\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, localStorage.getItem(\"admin\") === \"false\" ? /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"warning\",\n    stats: true,\n    icon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardIcon, {\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(GroupIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    className: classes.cardCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, \"Rank\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, rank)), /*#__PURE__*/React.createElement(CardFooter, {\n    stats: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(GroupIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#pablo\",\n    onClick: function onClick(e) {\n      return e.preventDefault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, localStorage.getItem(\"groupName\")))))), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"success\",\n    stats: true,\n    icon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardIcon, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TimelineIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.cardCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, \"Total Points\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }, score)), /*#__PURE__*/React.createElement(CardFooter, {\n    stats: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Update, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }), localStorage.getItem(\"tournament\"))))), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"info\",\n    stats: true,\n    icon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardIcon, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Accessibility, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.cardCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, \"Most Runs\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, mostRuns ? mostRuns.maxRunPlayerName : \"\")), /*#__PURE__*/React.createElement(CardFooter, {\n    stats: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Accessibility, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }), mostRuns ? mostRuns.maxRun : \"\")))), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"danger\",\n    stats: true,\n    icon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardIcon, {\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SportsHandballIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.cardCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }, \"Most Wickets\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, mostWickets ? mostWickets.maxWicketPlayerName : \"\")), /*#__PURE__*/React.createElement(CardFooter, {\n    stats: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SportsHandballIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }), mostWickets ? mostWickets.maxWicket : \"\"))))) : \"\", /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }, \"Franchise Score Board\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.cardCategoryWhite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, \"Updated as of \".concat(date))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    tableHeaderColor: \"warning\",\n    tableHead: [\"Rank\", \"Franchise\", \"Owner\", \"Score\"],\n    tableData: rankArray,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }))))));\n}","map":{"version":3,"sources":["D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/src/views/Dashboard/Dashboard.js"],"names":["React","useEffect","useState","useContext","axios","makeStyles","SportsHandballIcon","TimelineIcon","GroupIcon","Update","Accessibility","GridItem","GridContainer","Table","Card","CardHeader","CardIcon","CardBody","CardFooter","socketIOClient","styles","ENDPOINT","useStyles","Dashboard","rankArray","setRankArray","rank","setRank","score","setScore","mostRuns","setMostRuns","mostWickets","setMostwickets","date","Date","toDateString","toLocaleTimeString","socket","tableData","rankDetails","arr","map","element","displayName","userName","grandScore","data","Object","values","collapse","on","console","log","userDetails","filter","uid","parseInt","localStorage","getItem","length","maxRun","runDetails","maxWicket","wicketDetails","classes","cardCategory","cardTitle","stats","e","preventDefault","maxRunPlayerName","maxWicketPlayerName","cardTitleWhite","cardCategoryWhite"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AAEA;;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CAEA;;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,OAAOC,MAAP,MAAmB,2BAAnB;AAEA,OAAOC,aAAP,MAA0B,kCAA1B,C,CAGA;;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AAGA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,6DAAnB;AAEC,IAAMC,QAAQ,GAAG,4CAAjB,C,CACD;;AAIA,IAAMC,SAAS,GAAGjB,UAAU,CAACe,MAAD,CAA5B;AAGA,eAAe,SAASG,SAAT,GAAqB;AAAA,kBAEArB,QAAQ,CAAC,EAAD,CAFR;AAAA;AAAA,MAE3BsB,SAF2B;AAAA,MAEhBC,YAFgB;;AAAA,mBAGVvB,QAAQ,EAHE;AAAA;AAAA,MAG3BwB,IAH2B;AAAA,MAGrBC,OAHqB;;AAAA,mBAIRzB,QAAQ,CAAC,CAAD,CAJA;AAAA;AAAA,MAI3B0B,KAJ2B;AAAA,MAIpBC,QAJoB;;AAAA,mBAKF3B,QAAQ,CAAC,EAAD,CALN;AAAA;AAAA,MAK3B4B,QAL2B;AAAA,MAKjBC,WALiB;;AAAA,mBAMI7B,QAAQ,CAAC,EAAD,CANZ;AAAA;AAAA,MAM3B8B,WAN2B;AAAA,MAMdC,cANc,mBAOlC;AACA;;;AACA,MAAMC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,YAAX,KAA4B,GAA5B,GAAkC,IAAID,IAAJ,GAAWE,kBAAX,EAA/C;AACA,MAAMC,MAAM,GAAGnB,cAAc,CAACE,QAAD,CAA7B;;AAIA,MAAMkB,SAAS,GAAG,SAAZA,SAAY,CAACC,WAAD,EAAiB;AACjC,QAAMC,GAAG,GAAGD,WAAW,CAACE,GAAZ,CAAgB,UAAAC,OAAO,EAAI;AAAA;;AACrC;AADqC,UAE7BC,WAF6B,GAEeD,OAFf,CAE7BC,WAF6B;AAAA,UAEhBC,QAFgB,GAEeF,OAFf,CAEhBE,QAFgB;AAAA,UAENC,UAFM,GAEeH,OAFf,CAENG,UAFM;AAAA,UAEMpB,IAFN,GAEeiB,OAFf,CAEMjB,IAFN,EAGrC;;AACA,aAAO;AAAEqB,QAAAA,IAAI,EAAEC,MAAM,CAACC,MAAP;AAAgBvB,UAAAA,IAAI,EAAJA,IAAhB;AAAsBkB,UAAAA,WAAW,EAAXA,WAAtB;AAAmCC,UAAAA,QAAQ,EAARA;AAAnC,0DAA6CD,WAA7C,iDAA0DE,UAA1D,mBAAR;AAAiFI,QAAAA,QAAQ,EAAE;AAA3F,OAAP;AACD,KALW,CAAZ;AAOA,WAAOT,GAAP;AACD,GATD;;AAUAxC,EAAAA,SAAS,CAAC,YAAM;AAEdqC,IAAAA,MAAM,CAACa,EAAP,CAAU,SAAV,EAAqB,YAAM;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAf,MAAAA,MAAM,CAACa,EAAP,CAAU,MAAV,EAAkB,UAACzB,IAAD,EAAU;AAC1B;AACA,YAAM4B,WAAW,GAAG5B,IAAI,CAAC6B,MAAL,CAAY,UAACZ,OAAD;AAAA,iBAAaA,OAAO,CAACa,GAAR,KAAgBC,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAD,CAArC;AAAA,SAAZ,CAApB,CAF0B,CAI1B;AAEA;AACA;AACA;AACA;AACA;;AACA,YAAIL,WAAW,CAACM,MAAZ,GAAqB,CAAzB,EAA4B;AAC1B;AACAjC,UAAAA,OAAO,CAAC2B,WAAW,CAAC,CAAD,CAAX,CAAe5B,IAAhB,CAAP;AACAG,UAAAA,QAAQ,CAACyB,WAAW,CAAC,CAAD,CAAX,CAAeR,UAAhB,CAAR;AACArB,UAAAA,YAAY,CAACc,SAAS,CAACb,IAAD,CAAV,CAAZ;AACD,SALD,MAKO,IAAIgC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,MAArC,EAA6C;AAClD;AACAlC,UAAAA,YAAY,CAACc,SAAS,CAACb,IAAD,CAAV,CAAZ;AACD;AAEF,OArBD;AAuBAY,MAAAA,MAAM,CAACa,EAAP,CAAU,QAAV,EAAoB,UAACU,MAAD,EAAY;AAE9B,YAAMC,UAAU,GAAGD,MAAM,CAACN,MAAP,CAAc,UAACZ,OAAD;AAAA,iBAAaA,OAAO,CAACa,GAAR,KAAgBC,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAD,CAArC;AAAA,SAAd,CAAnB,CAF8B,CAI9B;;AACA,YAAIG,UAAJ,EAAgB;AAEd/B,UAAAA,WAAW,CAAC+B,UAAU,CAAC,CAAD,CAAX,CAAX;AACD;AAEF,OAVD;AAYAxB,MAAAA,MAAM,CAACa,EAAP,CAAU,WAAV,EAAuB,UAACY,SAAD,EAAe;AAEpC,YAAMC,aAAa,GAAGD,SAAS,CAACR,MAAV,CAAiB,UAACZ,OAAD;AAAA,iBAAaA,OAAO,CAACa,GAAR,KAAgBC,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAD,CAArC;AAAA,SAAjB,CAAtB;;AAEA,YAAIK,aAAJ,EAAmB;AACjB/B,UAAAA,cAAc,CAAC+B,aAAa,CAAC,CAAD,CAAd,CAAd;AACD;AAEF,OARD;AASD,KA9CD;AAkDD,GApDQ,EAoDN,CAACxC,SAAD,CApDM,CAAT;AAqDA,MAAMyC,OAAO,GAAG3C,SAAS,EAAzB;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIoC,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,OAAlC,gBAA4C,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAC5C,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAyB,IAAA,EAAE,EAAE,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAA4B,IAAA,KAAK,MAAjC;AAAkC,IAAA,IAAI,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAI,IAAA,SAAS,EAAEM,OAAO,CAACC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAI,IAAA,SAAS,EAAED,OAAO,CAACE,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGzC,IADH,CALF,CADF,eAUE,oBAAC,UAAD;AAAY,IAAA,KAAK,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEuC,OAAO,CAACG,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAG,IAAA,IAAI,EAAC,QAAR;AAAiB,IAAA,OAAO,EAAE,iBAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,cAAF,EAAJ;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,YAAY,CAACC,OAAb,CAAqB,WAArB,CADH,CAFF,CADF,CAVF,CADF,CAD4C,eAsB5C,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAyB,IAAA,EAAE,EAAE,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAA4B,IAAA,KAAK,MAAjC;AAAkC,IAAA,IAAI,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAG,IAAA,SAAS,EAAEM,OAAO,CAACC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAI,IAAA,SAAS,EAAED,OAAO,CAACE,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCvC,KAAnC,CALF,CADF,eAQE,oBAAC,UAAD;AAAY,IAAA,KAAK,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEqC,OAAO,CAACG,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGV,YAAY,CAACC,OAAb,CAAqB,YAArB,CAFH,CADF,CARF,CADF,CAtB4C,eAwC5C,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAyB,IAAA,EAAE,EAAE,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,MAAlB;AAAyB,IAAA,KAAK,MAA9B;AAA+B,IAAA,IAAI,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAG,IAAA,SAAS,EAAEM,OAAO,CAACC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,eAKE;AAAI,IAAA,SAAS,EAAED,OAAO,CAACE,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCrC,QAAQ,GAAGA,QAAQ,CAACyC,gBAAZ,GAA+B,EAA1E,CALF,CADF,eAQE,oBAAC,UAAD;AAAY,IAAA,KAAK,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEN,OAAO,CAACG,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGtC,QAAQ,GAAGA,QAAQ,CAAC+B,MAAZ,GAAqB,EAFhC,CADF,CARF,CADF,CAxC4C,eA0D5C,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAyB,IAAA,EAAE,EAAE,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,QAAlB;AAA2B,IAAA,KAAK,MAAhC;AAAiC,IAAA,IAAI,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAG,IAAA,SAAS,EAAEI,OAAO,CAACC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAI,IAAA,SAAS,EAAED,OAAO,CAACE,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCnC,WAAW,GAAGA,WAAW,CAACwC,mBAAf,GAAqC,EAAnF,CALF,CADF,eAQE,oBAAC,UAAD;AAAY,IAAA,KAAK,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACG,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGpC,WAAW,GAAGA,WAAW,CAAC+B,SAAf,GAA2B,EAFzC,CADF,CARF,CADF,CA1D4C,CAA5C,GA2EiB,EA5ErB,eA+EE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAEE,OAAO,CAACQ,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEE;AAAG,IAAA,SAAS,EAAER,OAAO,CAACS,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACoBxC,IADpB,EAFF,CADF,eAOE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,gBAAgB,EAAC,SADnB;AAEE,IAAA,SAAS,EAAE,CAAC,MAAD,EAAS,WAAT,EAAsB,OAAtB,EAA+B,OAA/B,CAFb;AAGE,IAAA,SAAS,EAAEV,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CADF,CAFF,CA/EF,CADF;AAsGD","sourcesContent":["import React from \"react\";\r\n// react plugin for creating charts\r\n\r\n// @material-ui/core\r\nimport { useEffect, useState, useContext } from 'react';\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/icons\r\nimport SportsHandballIcon from '@material-ui/icons/SportsHandball';\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\nimport Update from \"@material-ui/icons/Update\";\r\n\r\nimport Accessibility from \"@material-ui/icons/Accessibility\";\r\n\r\n\r\n// core components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Table from \"components/Table/Table.js\";\r\n\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardIcon from \"components/Card/CardIcon.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\n\r\nimport socketIOClient from \"socket.io-client\";\r\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\n\r\n const ENDPOINT = \"https://happy-home-ipl-2020.herokuapp.com/\";\r\n// const ENDPOINT = \"http://localhost:4000\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\n\r\nexport default function Dashboard() {\r\n\r\n  const [rankArray, setRankArray] = useState([]);\r\n  const [rank, setRank] = useState();\r\n  const [score, setScore] = useState(0);\r\n  const [mostRuns, setMostRuns] = useState({});\r\n  const [mostWickets, setMostwickets] = useState({});\r\n  // const [mvp, SetMvp] = useState();\r\n  // const { user } = useContext(UserContext);\r\n  const date = new Date().toDateString() + \" \" + new Date().toLocaleTimeString();\r\n  const socket = socketIOClient(ENDPOINT);\r\n\r\n\r\n\r\n  const tableData = (rankDetails) => {\r\n    const arr = rankDetails.map(element => {\r\n      // console.log(element)\r\n      const { displayName, userName, grandScore, rank } = element;\r\n      //const {rank,displayName,userName,grandScore}=element;\r\n      return { data: Object.values({ rank, displayName, userName, displayName, grandScore }), collapse: [] }\r\n    });\r\n\r\n    return arr;\r\n  }\r\n  useEffect(() => {\r\n\r\n    socket.on(\"connect\", () => {\r\n      console.log(\"dashboard connected\");\r\n      socket.on(\"rank\", (rank) => {\r\n        // console.log(rank)\r\n        const userDetails = rank.filter((element) => element.uid === parseInt(localStorage.getItem(\"uid\")))\r\n\r\n        // if (userDetails) {\r\n\r\n        //   setRank(userDetails[0].rank);\r\n        //   setScore(userDetails[0].grandScore)\r\n        //   setRankArray(tableData(rank));\r\n        // }\r\n        // console.log(`Admin: ${localStorage.getItem(\"admin\")}`)\r\n        if (userDetails.length > 0) {\r\n          // if details of current user found (current user is a member of group 1)\r\n          setRank(userDetails[0].rank);\r\n          setScore(userDetails[0].grandScore)\r\n          setRankArray(tableData(rank));\r\n        } else if (localStorage.getItem(\"admin\") == \"true\") {\r\n          // current user is not member of the group but is ADMIN. Thus show the rank details\r\n          setRankArray(tableData(rank));\r\n        }\r\n\r\n      });\r\n\r\n      socket.on(\"maxRun\", (maxRun) => {\r\n\r\n        const runDetails = maxRun.filter((element) => element.uid === parseInt(localStorage.getItem(\"uid\")));\r\n\r\n        // console.log(runDetails)\r\n        if (runDetails) {\r\n\r\n          setMostRuns(runDetails[0])\r\n        }\r\n\r\n      });\r\n\r\n      socket.on(\"maxWicket\", (maxWicket) => {\r\n\r\n        const wicketDetails = maxWicket.filter((element) => element.uid === parseInt(localStorage.getItem(\"uid\")));\r\n\r\n        if (wicketDetails) {\r\n          setMostwickets(wicketDetails[0]);\r\n        }\r\n\r\n      });\r\n    });\r\n\r\n\r\n\r\n  }, [rankArray]);\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      { localStorage.getItem(\"admin\") === \"false\" ? <GridContainer>\r\n        <GridItem xs={12} sm={6} md={3}>\r\n          <Card>\r\n            <CardHeader color=\"warning\" stats icon>\r\n              <CardIcon color=\"warning\">\r\n                <GroupIcon />\r\n              </CardIcon>\r\n              <h2 className={classes.cardCategory}>Rank</h2>\r\n              <h3 className={classes.cardTitle}>\r\n                {rank}\r\n              </h3>\r\n            </CardHeader>\r\n            <CardFooter stats>\r\n              <div className={classes.stats}>\r\n                <GroupIcon />\r\n                <a href=\"#pablo\" onClick={e => e.preventDefault()}>\r\n                  {localStorage.getItem(\"groupName\")}\r\n                </a>\r\n              </div>\r\n            </CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={6} md={3}>\r\n          <Card>\r\n            <CardHeader color=\"success\" stats icon>\r\n              <CardIcon color=\"success\">\r\n                <TimelineIcon />\r\n              </CardIcon>\r\n              <p className={classes.cardCategory}>Total Points</p>\r\n              <h3 className={classes.cardTitle}>{score}</h3>\r\n            </CardHeader>\r\n            <CardFooter stats>\r\n              <div className={classes.stats}>\r\n                <Update />\r\n                {localStorage.getItem(\"tournament\")}\r\n              </div>\r\n            </CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n\r\n        <GridItem xs={12} sm={6} md={3}>\r\n          <Card>\r\n            <CardHeader color=\"info\" stats icon>\r\n              <CardIcon color=\"info\">\r\n                <Accessibility />\r\n              </CardIcon>\r\n              <p className={classes.cardCategory}>Most Runs</p>\r\n              <h3 className={classes.cardTitle}>{mostRuns ? mostRuns.maxRunPlayerName : \"\"}</h3>\r\n            </CardHeader>\r\n            <CardFooter stats>\r\n              <div className={classes.stats}>\r\n                <Accessibility />\r\n                {mostRuns ? mostRuns.maxRun : \"\"}\r\n              </div>\r\n            </CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n\r\n        <GridItem xs={12} sm={6} md={3}>\r\n          <Card>\r\n            <CardHeader color=\"danger\" stats icon>\r\n              <CardIcon color=\"danger\">\r\n                <SportsHandballIcon />\r\n              </CardIcon>\r\n              <p className={classes.cardCategory}>Most Wickets</p>\r\n              <h3 className={classes.cardTitle}>{mostWickets ? mostWickets.maxWicketPlayerName : \"\"}</h3>\r\n            </CardHeader>\r\n            <CardFooter stats>\r\n              <div className={classes.stats}>\r\n                <SportsHandballIcon />\r\n                {mostWickets ? mostWickets.maxWicket : \"\"}\r\n              </div>\r\n            </CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer> : \"\"}\r\n\r\n\r\n      <GridContainer>\r\n\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"warning\">\r\n              <h4 className={classes.cardTitleWhite}>Franchise Score Board</h4>\r\n              <p className={classes.cardCategoryWhite}>\r\n                {`Updated as of ${date}`}\r\n              </p>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Table\r\n                tableHeaderColor=\"warning\"\r\n                tableHead={[\"Rank\", \"Franchise\", \"Owner\", \"Score\"]}\r\n                tableData={rankArray}\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}