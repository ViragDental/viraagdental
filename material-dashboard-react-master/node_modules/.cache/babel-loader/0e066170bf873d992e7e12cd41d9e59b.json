{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\src\\\\views\\\\Login\\\\SignUp.js\";\nimport React, { useState, useContext } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { UserContext } from \"../../UserContext\";\nimport axios from \"axios\";\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\n\nfunction Copyright() {\n  return /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, 'Copyright Â© ', /*#__PURE__*/React.createElement(Link, {\n    color: \"inherit\",\n    href: \"https://material-ui.com/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"CricDream\"), ' ', new Date().getFullYear(), '.');\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n      width: '100%',\n      // Fix IE 11 issue.\n      marginTop: theme.spacing(3)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    }\n  };\n});\n\nvar ChildComp = /*#__PURE__*/function (_React$Component) {\n  _inherits(ChildComp, _React$Component);\n\n  var _super = _createSuper(ChildComp);\n\n  function ChildComp() {\n    _classCallCheck(this, ChildComp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ChildComp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      // custom rule will have name 'isPasswordMatch'\n      ValidatorForm.addValidationRule('isPasswordMatch', function (value) {\n        console.log(_this.props.p1);\n        console.log(_this.props.p2);\n        return _this.props.p1 === _this.props.p2; // if (value !== this.state.user.password) {\n        //     return false;\n        // }\n        // return true;\n      });\n      ValidatorForm.addValidationRule('isEmailOK', function (value) {\n        console.log(\"Hello, in email\");\n        console.log(_this.props.em);\n        return false; // console.log(this.props.p2);\n        //  return (this.props.em.includes(\".\") && this.props.em.includes(\"@\"))\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('render() lifecycle');\n      return /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 12\n        }\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // remove rule when it is not needed\n      ValidatorForm.removeValidationRule('isPasswordMatch');\n    }\n  }]);\n\n  return ChildComp;\n}(React.Component); // const handleSubmit = e => {\n//   e.preventDefault();\n// };\n\n\nexport default function SignUp() {\n  var _this2 = this;\n\n  var classes = useStyles();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      repeatPassword = _useState8[0],\n      setRepeatPassword = _useState8[1]; // const [confirmPassword, setConfirmPassword] = useState(\"\");\n  // state = {\n  //   user: {\n  //       password: '',\n  //       repeatPassword: '',\n  //   },\n  // };\n\n\n  var _useContext = useContext(UserContext),\n      setUser = _useContext.setUser;\n\n  var handleClick = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"/user/signup/\".concat(userName, \"/\").concat(password));\n\n            case 2:\n              response = _context.sent;\n\n              if (response.status === 200) {\n                setUser(userName);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleClick() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleChange = function handleChange(event) {\n    var user = _this2.state.user;\n    user[event.target.name] = event.target.value;\n\n    _this2.setState({\n      user: user\n    });\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // const response = await axios.get(`/user/signup/${userName}/${password}`);\n              // if(response.status===200){\n              //   setUser(userName);\n              // }\n              console.log(\"Submit command provided\");\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  /*\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"userName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"userName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                onChange={(event) => setUserName(event.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={(event) => setPassword(event.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"confirmpassword\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                id=\"confirmpassword\"\r\n                autoComplete=\"confirm-password\"\r\n                onChange={(event) => setConfirmPassword(event.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleClick}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n  */\n\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, \"Regsiter\"), /*#__PURE__*/React.createElement(ValidatorForm, {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    label: \"User Name\",\n    onChange: function onChange(event) {\n      return setUserName(event.target.value);\n    },\n    name: \"username\" // type=\"\"\n    ,\n    validators: ['required'],\n    errorMessages: ['Provide User Name'],\n    value: userName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    label: \"Password\",\n    onChange: function onChange(event) {\n      return setPassword(event.target.value);\n    },\n    name: \"password\",\n    type: \"password\",\n    validators: ['required'],\n    errorMessages: ['Password to be provided'],\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    label: \"Email\",\n    onChange: function onChange(event) {\n      return setEmail(event.target.value);\n    },\n    name: \"email\",\n    type: \"email\",\n    validators: ['isEmailOK', 'required'],\n    errorMessages: ['Email to be provided'],\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    label: \"Repeat password\",\n    onChange: function onChange(event) {\n      return setRepeatPassword(event.target.value);\n    },\n    name: \"repeatPassword\",\n    type: \"password\",\n    validators: ['isPasswordMatch', 'required'],\n    errorMessages: ['password mismatch', 'this field is required'],\n    value: repeatPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit // onClick={handleSubmit}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }\n  }, \"Register\"))), /*#__PURE__*/React.createElement(ChildComp, {\n    p1: password,\n    p2: repeatPassword,\n    em: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 5\n    }\n  }));\n}","map":{"version":3,"sources":["D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/src/views/Login/SignUp.js"],"names":["React","useState","useContext","Avatar","Button","CssBaseline","TextField","Link","Grid","Box","LockOutlinedIcon","Typography","makeStyles","Container","UserContext","axios","ValidatorForm","TextValidator","Copyright","Date","getFullYear","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","ChildComp","addValidationRule","value","console","log","props","p1","p2","em","removeValidationRule","Component","SignUp","classes","userName","setUserName","password","setPassword","email","setEmail","repeatPassword","setRepeatPassword","setUser","handleClick","get","response","status","handleChange","event","user","state","target","name","setState","handleSubmit"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA4C,kCAA5C;;AAEA,SAASC,SAAT,GAAqB;AACnB,sBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAC,eAAlC;AAAkD,IAAA,KAAK,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,cADH,eAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,SAAZ;AAAsB,IAAA,IAAI,EAAC,0BAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAIU,GAJV,EAKG,IAAIC,IAAJ,GAAWC,WAAX,EALH,EAMG,GANH,CADF;AAUD;;AAED,IAAMC,SAAS,GAAGT,UAAU,CAAC,UAACU,KAAD;AAAA,SAAY;AACvCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADN;AAELC,MAAAA,OAAO,EAAE,MAFJ;AAGLC,MAAAA,aAAa,EAAE,QAHV;AAILC,MAAAA,UAAU,EAAE;AAJP,KADgC;AAOvCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd,CADF;AAENM,MAAAA,eAAe,EAAET,KAAK,CAACU,OAAN,CAAcC,SAAd,CAAwBC;AAFnC,KAP+B;AAWvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,MADH;AACW;AACfZ,MAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AAFP,KAXiC;AAevCY,IAAAA,MAAM,EAAE;AACNP,MAAAA,MAAM,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AADF;AAf+B,GAAZ;AAAA,CAAD,CAA5B;;IAoBMa,S;;;;;;;;;;;;;wCAEiB;AAAA;;AACnB;AACAtB,MAAAA,aAAa,CAACuB,iBAAd,CAAgC,iBAAhC,EAAmD,UAACC,KAAD,EAAW;AAC5DC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACC,KAAL,CAAWC,EAAvB;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACC,KAAL,CAAWE,EAAvB;AACA,eAAQ,KAAI,CAACF,KAAL,CAAWC,EAAX,KAAkB,KAAI,CAACD,KAAL,CAAWE,EAArC,CAH4D,CAI1D;AACA;AACA;AACA;AACH,OARD;AAUA7B,MAAAA,aAAa,CAACuB,iBAAd,CAAgC,WAAhC,EAA6C,UAACC,KAAD,EAAW;AACtDC,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACC,KAAL,CAAWG,EAAvB;AACA,eAAO,KAAP,CAHsD,CAItD;AACA;AACD,OAND;AAQD;;;6BACQ;AACPL,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;2CAEsB;AACrB;AACA1B,MAAAA,aAAa,CAAC+B,oBAAd,CAAmC,iBAAnC;AACD;;;;EA/BqB/C,KAAK,CAACgD,S,GAkC9B;AACA;AACA;;;AAIA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,MAAMC,OAAO,GAAG7B,SAAS,EAAzB;;AAD+B,kBAECpB,QAAQ,CAAC,EAAD,CAFT;AAAA;AAAA,MAExBkD,QAFwB;AAAA,MAEdC,WAFc;;AAAA,mBAGCnD,QAAQ,CAAC,EAAD,CAHT;AAAA;AAAA,MAGxBoD,QAHwB;AAAA,MAGdC,WAHc;;AAAA,mBAILrD,QAAQ,CAAC,EAAD,CAJH;AAAA;AAAA,MAIxBsD,KAJwB;AAAA,MAIjBC,QAJiB;;AAAA,mBAKavD,QAAQ,CAAC,EAAD,CALrB;AAAA;AAAA,MAKxBwD,cALwB;AAAA,MAKRC,iBALQ,kBAM/B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAZ+B,oBAeXxD,UAAU,CAACY,WAAD,CAfC;AAAA,MAevB6C,OAfuB,eAevBA,OAfuB;;AAiB/B,MAAMC,WAAW;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACK7C,KAAK,CAAC8C,GAAN,wBAA0BV,QAA1B,cAAsCE,QAAtC,EADL;;AAAA;AACZS,cAAAA,QADY;;AAElB,kBAAGA,QAAQ,CAACC,MAAT,KAAkB,GAArB,EAAyB;AACvBJ,gBAAAA,OAAO,CAACR,QAAD,CAAP;AACD;;AAJiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXS,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAQA,MAAMI,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA,QACtBC,IADsB,GACb,MAAI,CAACC,KADQ,CACtBD,IADsB;AAE9BA,IAAAA,IAAI,CAACD,KAAK,CAACG,MAAN,CAAaC,IAAd,CAAJ,GAA0BJ,KAAK,CAACG,MAAN,CAAa5B,KAAvC;;AACA,IAAA,MAAI,CAAC8B,QAAL,CAAc;AAAEJ,MAAAA,IAAI,EAAJA;AAAF,KAAd;AACD,GAJD;;AAMA,MAAMK,YAAY;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AACnB;AACA;AACA;AACA;AACA9B,cAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;;AALmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZ6B,YAAY;AAAA;AAAA;AAAA,KAAlB;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAA4B,IAAA,QAAQ,EAAC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAErB,OAAO,CAAC3B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAE2B,OAAO,CAACrB,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOF,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAEqB,OAAO,CAACf,IAAlC;AAAwC,IAAA,QAAQ,EAAEoC,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,QAAQ,MAFZ;AAGI,IAAA,SAAS,MAHb;AAII,IAAA,KAAK,EAAC,WAJV;AAKI,IAAA,QAAQ,EAAE,kBAACN,KAAD;AAAA,aAAWb,WAAW,CAACa,KAAK,CAACG,MAAN,CAAa5B,KAAd,CAAtB;AAAA,KALd;AAMI,IAAA,IAAI,EAAC,UANT,CAOI;AAPJ;AAQI,IAAA,UAAU,EAAE,CAAC,UAAD,CARhB;AASI,IAAA,aAAa,EAAE,CAAC,mBAAD,CATnB;AAUI,IAAA,KAAK,EAAEW,QAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAaE,oBAAC,aAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,QAAQ,MAFZ;AAGI,IAAA,SAAS,MAHb;AAII,IAAA,KAAK,EAAC,UAJV;AAKI,IAAA,QAAQ,EAAE,kBAACc,KAAD;AAAA,aAAWX,WAAW,CAACW,KAAK,CAACG,MAAN,CAAa5B,KAAd,CAAtB;AAAA,KALd;AAMI,IAAA,IAAI,EAAC,UANT;AAOI,IAAA,IAAI,EAAC,UAPT;AAQI,IAAA,UAAU,EAAE,CAAC,UAAD,CARhB;AASI,IAAA,aAAa,EAAE,CAAC,yBAAD,CATnB;AAUI,IAAA,KAAK,EAAEa,QAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,eAyBE,oBAAC,aAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,QAAQ,MAFZ;AAGI,IAAA,SAAS,MAHb;AAII,IAAA,KAAK,EAAC,OAJV;AAKI,IAAA,QAAQ,EAAE,kBAACY,KAAD;AAAA,aAAWT,QAAQ,CAACS,KAAK,CAACG,MAAN,CAAa5B,KAAd,CAAnB;AAAA,KALd;AAMI,IAAA,IAAI,EAAC,OANT;AAOI,IAAA,IAAI,EAAC,OAPT;AAQI,IAAA,UAAU,EAAE,CAAC,WAAD,EAAc,UAAd,CARhB;AASI,IAAA,aAAa,EAAE,CAAC,sBAAD,CATnB;AAUI,IAAA,KAAK,EAAEe,KAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,eAqCE,oBAAC,aAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,QAAQ,MAFZ;AAGI,IAAA,SAAS,MAHb;AAII,IAAA,KAAK,EAAC,iBAJV;AAKI,IAAA,QAAQ,EAAE,kBAACU,KAAD;AAAA,aAAWP,iBAAiB,CAACO,KAAK,CAACG,MAAN,CAAa5B,KAAd,CAA5B;AAAA,KALd;AAMI,IAAA,IAAI,EAAC,gBANT;AAOI,IAAA,IAAI,EAAC,UAPT;AAQI,IAAA,UAAU,EAAE,CAAC,iBAAD,EAAoB,UAApB,CARhB;AASI,IAAA,aAAa,EAAE,CAAC,mBAAD,EAAsB,wBAAtB,CATnB;AAUI,IAAA,KAAK,EAAEiB,cAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArCF,eAkDE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,OAAO,EAAC,WAHV;AAIE,IAAA,KAAK,EAAC,SAJR;AAKE,IAAA,SAAS,EAAEP,OAAO,CAACb,MALrB,CAME;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlDF,CAPE,CAFF,eAuEA,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAEgB,QAAf;AAAyB,IAAA,EAAE,EAAEI,cAA7B;AAA6C,IAAA,EAAE,EAAEF,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvEA,CADF;AA2ED","sourcesContent":["import React, { useState ,useContext} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { UserContext } from \"../../UserContext\";\r\nimport axios from \"axios\";\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        CricDream\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nclass ChildComp extends React.Component {\r\n\r\n  componentDidMount()  {\r\n    // custom rule will have name 'isPasswordMatch'\r\n    ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n      console.log(this.props.p1);\r\n      console.log(this.props.p2);\r\n      return (this.props.p1 === this.props.p2)\r\n        // if (value !== this.state.user.password) {\r\n        //     return false;\r\n        // }\r\n        // return true;\r\n    });\r\n\r\n    ValidatorForm.addValidationRule('isEmailOK', (value) => {\r\n      console.log(\"Hello, in email\");\r\n      console.log(this.props.em);\r\n      return false;\r\n      // console.log(this.props.p2);\r\n      //  return (this.props.em.includes(\".\") && this.props.em.includes(\"@\"))\r\n    });\r\n\r\n  }\r\n  render() {\r\n    console.log('render() lifecycle')\r\n    return <br/>;\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    // remove rule when it is not needed\r\n    ValidatorForm.removeValidationRule('isPasswordMatch');\r\n  }\r\n  \r\n}\r\n// const handleSubmit = e => {\r\n//   e.preventDefault();\r\n// };\r\n\r\n\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\r\n  // const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  // state = {\r\n  //   user: {\r\n  //       password: '',\r\n  //       repeatPassword: '',\r\n  //   },\r\n  // };\r\n\r\n\r\n  const { setUser } = useContext(UserContext);\r\n\r\n  const handleClick = async() => {\r\n    const response = await axios.get(`/user/signup/${userName}/${password}`);\r\n    if(response.status===200){\r\n      setUser(userName);\r\n    }\r\n \r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    const { user } = this.state;\r\n    user[event.target.name] = event.target.value;\r\n    this.setState({ user });\r\n  }\r\n\r\n  const handleSubmit = async() => {\r\n    // const response = await axios.get(`/user/signup/${userName}/${password}`);\r\n    // if(response.status===200){\r\n    //   setUser(userName);\r\n    // }\r\n    console.log(\"Submit command provided\");\r\n  }\r\n  \r\n  /*\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"userName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"userName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                onChange={(event) => setUserName(event.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={(event) => setPassword(event.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"confirmpassword\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                id=\"confirmpassword\"\r\n                autoComplete=\"confirm-password\"\r\n                onChange={(event) => setConfirmPassword(event.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleClick}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n  */\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Regsiter\r\n        </Typography>\r\n    <ValidatorForm className={classes.form} onSubmit={handleSubmit}>\r\n      <TextValidator\r\n          variant=\"outlined\"\r\n          required\r\n          fullWidth      \r\n          label=\"User Name\"\r\n          onChange={(event) => setUserName(event.target.value)}\r\n          name=\"username\"\r\n          // type=\"\"\r\n          validators={['required']}\r\n          errorMessages={['Provide User Name']}\r\n          value={userName}\r\n      />\r\n      <TextValidator\r\n          variant=\"outlined\"\r\n          required\r\n          fullWidth      \r\n          label=\"Password\"\r\n          onChange={(event) => setPassword(event.target.value)}\r\n          name=\"password\"\r\n          type=\"password\"\r\n          validators={['required']}\r\n          errorMessages={['Password to be provided']}\r\n          value={password}\r\n      />\r\n      <TextValidator\r\n          variant=\"outlined\"\r\n          required\r\n          fullWidth      \r\n          label=\"Email\"\r\n          onChange={(event) => setEmail(event.target.value)}\r\n          name=\"email\"\r\n          type=\"email\"\r\n          validators={['isEmailOK', 'required']}\r\n          errorMessages={['Email to be provided']}\r\n          value={email}\r\n      />\r\n      <TextValidator\r\n          variant=\"outlined\"\r\n          required\r\n          fullWidth      \r\n          label=\"Repeat password\"\r\n          onChange={(event) => setRepeatPassword(event.target.value)}\r\n          name=\"repeatPassword\"\r\n          type=\"password\"\r\n          validators={['isPasswordMatch', 'required']}\r\n          errorMessages={['password mismatch', 'this field is required']}\r\n          value={repeatPassword}\r\n      />\r\n      {/* <Button type=\"submit\">Submit</Button> */}\r\n      <Button\r\n        type=\"submit\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.submit}\r\n        // onClick={handleSubmit}\r\n      >\r\n        Register\r\n    </Button>\r\n    </ValidatorForm>\r\n    </div>\r\n    <ChildComp p1={password} p2={repeatPassword} em={email}/>    \r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}