{"ast":null,"code":"import _slicedToArray from \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\src\\\\views\\\\Statistics\\\\Statistics.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport axios from \"axios\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Table from \"components/Table/Table.js\";\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary'; //import AccordionDetails from '@material-ui/core/AccordionDetails';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport socketIOClient from \"socket.io-client\"; // const ENDPOINT = \"https://happy-home-ipl-2020.herokuapp.com/\";\n\nvar ENDPOINT = \"http://localhost:4000\";\nexport default function App() {\n  var _this = this;\n\n  var useStyles = makeStyles(styles);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      teamArray = _useState2[0],\n      setTeamArray = _useState2[1];\n\n  var socket = socketIOClient(ENDPOINT);\n  axios.get(\"/stat/sendmystat/\".concat(localStorage.getItem(\"gid\")));\n  useEffect(function () {\n    socket.on(\"connect\", function () {\n      console.log(\"stat connected\");\n      socket.on(\"brief\", function (stat) {\n        var gStat = stat.filter(function (x) {\n          return x.gid == localStorage.get;\n        });\n\n        if (gStat.length > 0) {\n          console.log(gstat);\n          setTeamArray(gstat);\n        }\n      });\n    });\n  }, [teamArray]);\n  return teamArray.map(function (team) {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"flex-start\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, team.displayName), /*#__PURE__*/React.createElement(Table, {\n      tableHeaderColor: \"warning\",\n      tableHead: [\"Player Name\", \"Score\"],\n      tableData: team.playerStat.map(function (player) {\n        var arr = [player.playerName, player.playerScore];\n        return {\n          data: arr,\n          collapse: []\n        };\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }));\n  }); // <Grid\n  //   container\n  //   direction=\"row\"\n  //   justify=\"center\"\n  //   alignItems=\"center\"\n  // >\n  //   <Card>\n  //     <CardHeader color=\"warning\">\n  //       <h4 className={classes.cardTitleWhite}>Franchise Score Board</h4>\n  //       <p className={classes.cardCategoryWhite}>\n  //       </p>\n  //     </CardHeader>\n  //     <CardBody>\n  //       <Table\n  //         tableHeaderColor=\"warning\"\n  //         tableHead={[\"\", \"Fanchise\", \"Owner\", \"Score\"]}\n  //         tableData={teamArray.map(team => {\n  //           const arr = [<Collapsible />, team.displayName, team.userName, team.userScore]\n  //           return {\n  //             data: arr, collapse: [<Collapse in={open} timeout=\"auto\" unmountOnExit>\n  //              hii\n  //             </Collapse>]\n  //           }\n  //         })}\n  // tableData={[{\n  //   data: [<IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n  //     {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n  //   </IconButton>], collapse: [<Collapse in={open} timeout=\"auto\" unmountOnExit><Typography variant=\"h6\" gutterBottom component=\"div\">\n  //     History\n  //   </Typography></Collapse>]\n  // }]}\n  //       />\n  //     </CardBody>\n  //   </Card>\n  // </Grid>\n}\n;","map":{"version":3,"sources":["D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/src/views/Statistics/Statistics.js"],"names":["React","useEffect","useState","useContext","axios","Grid","Table","Accordion","AccordionSummary","makeStyles","useTheme","Typography","styles","socketIOClient","ENDPOINT","App","useStyles","teamArray","setTeamArray","socket","get","localStorage","getItem","on","console","log","stat","gStat","filter","x","gid","length","gstat","map","team","displayName","playerStat","player","arr","playerName","playerScore","data","collapse"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B,C,CACA;;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,0BAArC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAGA,OAAOC,MAAP,MAAmB,6DAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CAEA;;AACA,IAAMC,QAAQ,GAAG,uBAAjB;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE5B,MAAMC,SAAS,GAAGP,UAAU,CAACG,MAAD,CAA5B;;AAF4B,kBAGMV,QAAQ,CAAC,EAAD,CAHd;AAAA;AAAA,MAGrBe,SAHqB;AAAA,MAGVC,YAHU;;AAI5B,MAAMC,MAAM,GAAGN,cAAc,CAACC,QAAD,CAA7B;AAEAV,EAAAA,KAAK,CAACgB,GAAN,4BAA8BC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAA9B;AACArB,EAAAA,SAAS,CAAC,YAAM;AAGdkB,IAAAA,MAAM,CAACI,EAAP,CAAU,SAAV,EAAqB,YAAM;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAN,MAAAA,MAAM,CAACI,EAAP,CAAU,OAAV,EAAmB,UAACG,IAAD,EAAU;AAC3B,YAAIC,KAAK,GAAGD,IAAI,CAACE,MAAL,CAAY,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,GAAF,IAAST,YAAY,CAACD,GAA1B;AAAA,SAAb,CAAZ;;AACA,YAAIO,KAAK,CAACI,MAAN,GAAe,CAAnB,EAAsB;AACpBP,UAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACAd,UAAAA,YAAY,CAACc,KAAD,CAAZ;AACD;AACF,OAND;AAOD,KATD;AAWD,GAdQ,EAcN,CAACf,SAAD,CAdM,CAAT;AAiBA,SAAQA,SAAS,CAACgB,GAAV,CAAc,UAAAC,IAAI;AAAA,wBACxB,oBAAC,IAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,SAAS,EAAC,KAFZ;AAGE,MAAA,OAAO,EAAC,QAHV;AAIE,MAAA,UAAU,EAAC,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAQE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaA,IAAI,CAACC,WAAlB,CADF,eAEE,oBAAC,KAAD;AACE,MAAA,gBAAgB,EAAC,SADnB;AAEE,MAAA,SAAS,EAAE,CAAC,aAAD,EAAgB,OAAhB,CAFb;AAGE,MAAA,SAAS,EAAED,IAAI,CAACE,UAAL,CAAgBH,GAAhB,CAAoB,UAAAI,MAAM,EAAI;AACvC,YAAMC,GAAG,GAAG,CAACD,MAAM,CAACE,UAAR,EAAoBF,MAAM,CAACG,WAA3B,CAAZ;AACA,eAAO;AAAEC,UAAAA,IAAI,EAAEH,GAAR;AAAaI,UAAAA,QAAQ,EAAE;AAAvB,SAAP;AACD,OAHU,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CARF,eAmBE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,CADwB;AAAA,GAAlB,CAAR,CAxB4B,CAiD5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED;AAAA","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Table from \"components/Table/Table.js\";\r\n\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\n//import AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\n// const ENDPOINT = \"https://happy-home-ipl-2020.herokuapp.com/\";\r\nconst ENDPOINT = \"http://localhost:4000\";\r\n\r\nexport default function App() {\r\n\r\n  const useStyles = makeStyles(styles);\r\n  const [teamArray, setTeamArray] = useState([]);\r\n  const socket = socketIOClient(ENDPOINT);\r\n\r\n  axios.get(`/stat/sendmystat/${localStorage.getItem(\"gid\")}`);\r\n  useEffect(() => {\r\n\r\n  \r\n    socket.on(\"connect\", () => {\r\n      console.log(\"stat connected\")\r\n      socket.on(\"brief\", (stat) => {\r\n        var gStat = stat.filter(x => x.gid == localStorage.get);\r\n        if (gStat.length > 0) {\r\n          console.log(gstat)\r\n          setTeamArray(gstat)\r\n        }\r\n      })\r\n    });\r\n\r\n  }, [teamArray])\r\n\r\n\r\n  return (teamArray.map(team =>\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justify=\"center\"\r\n      alignItems=\"flex-start\"\r\n    >\r\n      <Grid item xs={2}>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Typography>{team.displayName}</Typography>\r\n        <Table\r\n          tableHeaderColor=\"warning\"\r\n          tableHead={[\"Player Name\", \"Score\"]}\r\n          tableData={team.playerStat.map(player => {\r\n            const arr = [player.playerName, player.playerScore]\r\n            return { data: arr, collapse: [] }\r\n          })}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n      </Grid>\r\n    </Grid>\r\n\r\n  ));\r\n  // <Grid\r\n  //   container\r\n  //   direction=\"row\"\r\n  //   justify=\"center\"\r\n  //   alignItems=\"center\"\r\n  // >\r\n  //   <Card>\r\n  //     <CardHeader color=\"warning\">\r\n  //       <h4 className={classes.cardTitleWhite}>Franchise Score Board</h4>\r\n  //       <p className={classes.cardCategoryWhite}>\r\n\r\n  //       </p>\r\n  //     </CardHeader>\r\n  //     <CardBody>\r\n  //       <Table\r\n  //         tableHeaderColor=\"warning\"\r\n  //         tableHead={[\"\", \"Fanchise\", \"Owner\", \"Score\"]}\r\n  //         tableData={teamArray.map(team => {\r\n  //           const arr = [<Collapsible />, team.displayName, team.userName, team.userScore]\r\n\r\n  //           return {\r\n  //             data: arr, collapse: [<Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n  //              hii\r\n  //             </Collapse>]\r\n  //           }\r\n  //         })}\r\n  // tableData={[{\r\n  //   data: [<IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n  //     {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n  //   </IconButton>], collapse: [<Collapse in={open} timeout=\"auto\" unmountOnExit><Typography variant=\"h6\" gutterBottom component=\"div\">\r\n  //     History\r\n  //   </Typography></Collapse>]\r\n  // }]}\r\n  //       />\r\n  //     </CardBody>\r\n  //   </Card>\r\n  // </Grid>\r\n\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}