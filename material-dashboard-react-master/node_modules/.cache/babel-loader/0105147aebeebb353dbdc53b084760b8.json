{"ast":null,"code":"import _regeneratorRuntime from \"D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\src\\\\views\\\\Group\\\\Group.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../../UserContext\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from \"axios\";\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport { cdCurrent, cdDefault, hasGroup, getUserBalance } from \"views/functions.js\";\nimport { BlankArea, NothingToDisplay, DisplayBalance } from \"CustomComponents/CustomComponents.js\";\nimport green from '@material-ui/core/colors/green';\nimport { setTab } from \"CustomComponents/CricDreamTabs.js\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      '& > *': {\n        borderBottom: 'unset'\n      }\n    },\n    symbolText: {\n      color: '#4CC417' // backgroundColor: green[700],\n\n    },\n    headerText: {\n      color: '#FF7043',\n      fontWeight: 700 // backgroundColor: green[700],\n\n    },\n    button: {\n      margin: theme.spacing(0, 1, 0)\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      flexBasis: '33.33%',\n      flexShrink: 0\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary\n    }\n  };\n});\n\nfunction createData(name, calories, fat, carbs, protein, price) {\n  return {\n    name: name,\n    calories: calories,\n    fat: fat,\n    carbs: carbs,\n    protein: protein,\n    price: price,\n    history: [{\n      date: '2020-01-05',\n      customerId: '11091700',\n      amount: 3\n    }, {\n      date: '2020-01-02',\n      customerId: 'Anonymous',\n      amount: 1\n    }]\n  };\n} // const rows = [\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99),\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\n//   createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\n//   createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\n//   createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5),\n// ];\n\n\nexport default function Group() {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      myGroupTableData = _useState2[0],\n      setMyGroupTableData = _useState2[1];\n\n  var history = useHistory();\n\n  var _useState3 = useState(localStorage.getItem(\"groupName\")),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newCurrentGroup = _useState4[0],\n      setNewCurrentGroup = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      balance = _useState6[0],\n      setBalance = _useState6[1];\n\n  var _useState7 = useState(\"Eclair\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      openGroup = _useState8[0],\n      setOpenGroup = _useState8[1];\n\n  useEffect(function () {\n    var a = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var myBalance, myUrl, teamResponse, setnew, tmp, myGroup;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getUserBalance();\n\n              case 2:\n                myBalance = _context.sent;\n                setBalance(myBalance); // console.log(myBalance); \n\n                window.localStorage.setItem(\"groupMember\", \"\");\n                myUrl = \"\".concat(process.env.REACT_APP_AXIOS_BASEPATH, \"/group/memberof/\").concat(localStorage.getItem(\"uid\"));\n                _context.next = 8;\n                return axios.get(myUrl);\n\n              case 8:\n                teamResponse = _context.sent;\n                // console.log(teamResponse.data[0].groups);\n                setnew = true;\n\n                if (hasGroup()) {\n                  // just check if current group is part of group list \n                  tmp = teamResponse.data[0].groups.find(function (x) {\n                    return x.gid == localStorage.getItem(\"gid\");\n                  });\n                  if (tmp) setnew = false;\n                } // console.log(`Set new is ${setnew}`);\n\n\n                if (setnew) {\n                  if (teamResponse.data[0].groups.length > 0) {\n                    myGroup = teamResponse.data[0].groups[0]; // console.log(myGroup);\n\n                    localStorage.setItem(\"gid\", myGroup.gid.toString());\n                    localStorage.setItem(\"groupName\", myGroup.groupName);\n                    localStorage.setItem(\"tournament\", myGroup.tournament);\n                    localStorage.setItem(\"admin\", false);\n                    setNewCurrentGroup(myGroup.name);\n                  } else {\n                    localStorage.setItem(\"gid\", \"\");\n                    localStorage.setItem(\"groupName\", \"\");\n                    localStorage.setItem(\"tournament\", \"\");\n                    localStorage.setItem(\"admin\", false);\n                    setNewCurrentGroup(\"\");\n                  }\n                }\n\n                setMyGroupTableData(teamResponse.data[0].groups); // console.log(teamResponse.data[0].groups);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function a() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    a();\n  }, []);\n  var rows = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99), createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99), createData('Eclair', 262, 16.0, 24, 6.0, 3.79), createData('Cupcake', 305, 3.7, 67, 4.3, 2.5), createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5)];\n\n  function TblHdr(props) {\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: props.cols,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.headerText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    }, props.text));\n  }\n\n  function handleNewGroup() {\n    //history.push(\"/newgroup\");        \n    setTab(parseInt(process.env.REACT_APP_BASEPOS) + parseInt(process.env.REACT_APP_NEWGROUP));\n  }\n\n  ;\n\n  function handleJoinGroup() {\n    // history.push(\"/admin/newgroup\"); \n    localStorage.setItem(\"joinGroupCode\", \"\");\n    setTab(parseInt(process.env.REACT_APP_BASEPOS) + parseInt(process.env.REACT_APP_JOINGROUP));\n  }\n\n  ;\n\n  function ShowGroupHeader() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      color: \"secondary\",\n      align: \"center\",\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(TblHdr, {\n      cols: 1,\n      text: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(TblHdr, {\n      cols: 7,\n      text: \"Group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(TblHdr, {\n      cols: 2,\n      text: \"Curr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(TblHdr, {\n      cols: 2,\n      text: \"Def\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 3\n      }\n    }));\n  }\n\n  function handleGroupSelect(xxx) {\n    console.log(xxx);\n    setOpenGroup(xxx);\n  }\n\n  function GroupRow(props) {\n    var row = props.row; // const [open, setOpen] = React.useState(false);\n    // console.log(props);\n\n    var isOpen = openGroup === row.name ? true : false;\n    console.log(\"Key is \".concat(row.name, \" \").concat(isOpen, \" \")); //onClick={handleGroupSelect(row.name)}\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      color: \"secondary\",\n      align: \"center\",\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"expand row\",\n      size: \"small\",\n      onClick: handleGroupSelect(row.name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }, isOpen ? /*#__PURE__*/React.createElement(KeyboardArrowUpIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 23\n      }\n    }) : /*#__PURE__*/React.createElement(KeyboardArrowDownIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }\n    }, row.name), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }\n    }, row.calories), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }\n    }, row.fat)));\n  }\n  /***\r\n  GroupRow.propTypes = {\r\n    row: PropTypes.shape({\r\n      calories: PropTypes.number.isRequired,\r\n      carbs: PropTypes.number.isRequired,\r\n      fat: PropTypes.number.isRequired,\r\n      history: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          amount: PropTypes.number.isRequired,\r\n          customerId: PropTypes.string.isRequired,\r\n          date: PropTypes.string.isRequired,\r\n        }),\r\n      ).isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      price: PropTypes.number.isRequired,\r\n      protein: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n  };\r\n  ***/\n\n  /**\r\n  function OrgGroupRow(props) {\r\n    const { row } = props;\r\n    // const [open, setOpen] = React.useState(false);\r\n    const classes = useStyles();\r\n    let isOpen = (openGroup === row.name);\r\n    return (\r\n      <React.Fragment>\r\n        <Grid container color=\"secondary\" align=\"center\" spacing={0}>\r\n          <Grid item xs={1}>\r\n            <IconButton aria-label=\"expand row\" size=\"small\" onClick={handleGroupSelect(row.name)}>\r\n              {isOpen ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n            </IconButton>\r\n          </Grid>\r\n          <Grid item xs={7}>\r\n            {row.name}\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n          {row.calories}\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n          {row.fat}\r\n          </Grid>\r\n          </Grid>\r\n        <TableRow>\r\n          <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n            <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\r\n              <Box margin={1}>\r\n                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                  History\r\n                </Typography>\r\n                <Table size=\"small\" aria-label=\"purchases\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Date</TableCell>\r\n                      <TableCell>Customer</TableCell>\r\n                      <TableCell align=\"right\">Amount</TableCell>\r\n                      <TableCell align=\"right\">Total price ($)</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {row.history.map((historyRow) => (\r\n                      <TableRow key={historyRow.date}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {historyRow.date}\r\n                        </TableCell>\r\n                        <TableCell>{historyRow.customerId}</TableCell>\r\n                        <TableCell align=\"right\">{historyRow.amount}</TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {Math.round(historyRow.amount * row.price * 100) / 100}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </Box>\r\n            </Collapse>\r\n          </TableCell>\r\n        </TableRow>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n   */\n  // function ShowGroupBody() {\n  //   return (\n  //   );\n  // };\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    align: \"center\",\n    key: \"groupinfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DisplayBalance, {\n    balance: balance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 5\n    }\n  }, \"My Groups\"), /*#__PURE__*/React.createElement(ShowGroupHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 5\n    }\n  }), rows.map(function (row) {\n    return /*#__PURE__*/React.createElement(GroupRow, {\n      key: row.name,\n      row: row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 7\n      }\n    });\n  }), /*#__PURE__*/React.createElement(BlankArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    key: \"create\",\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"small\",\n    className: classes.button,\n    onClick: handleNewGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 5\n    }\n  }, \"New Group\"), /*#__PURE__*/React.createElement(Button, {\n    key: \"progile\",\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"small\",\n    className: classes.button,\n    onClick: handleJoinGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 5\n    }\n  }, \"Join Group\"));\n}\n\n_s(Group, \"h1xzP++w73cF/SSO4fsKUidtGCA=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Group;\n\nvar _c;\n\n$RefreshReg$(_c, \"Group\");","map":{"version":3,"sources":["D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/src/views/Group/Group.js"],"names":["React","useEffect","useState","useContext","PropTypes","useHistory","UserContext","makeStyles","axios","Button","Paper","Grid","Box","Collapse","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","KeyboardArrowDownIcon","KeyboardArrowUpIcon","cdCurrent","cdDefault","hasGroup","getUserBalance","BlankArea","NothingToDisplay","DisplayBalance","green","setTab","useStyles","theme","root","borderBottom","symbolText","color","headerText","fontWeight","button","margin","spacing","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","text","secondary","createData","name","calories","fat","carbs","protein","price","history","date","customerId","amount","Group","classes","myGroupTableData","setMyGroupTableData","localStorage","getItem","newCurrentGroup","setNewCurrentGroup","balance","setBalance","openGroup","setOpenGroup","a","myBalance","window","setItem","myUrl","process","env","REACT_APP_AXIOS_BASEPATH","get","teamResponse","setnew","tmp","data","groups","find","x","gid","length","myGroup","toString","groupName","tournament","rows","TblHdr","props","cols","handleNewGroup","parseInt","REACT_APP_BASEPOS","REACT_APP_NEWGROUP","handleJoinGroup","REACT_APP_JOINGROUP","ShowGroupHeader","handleGroupSelect","xxx","console","log","GroupRow","row","isOpen","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"../../UserContext\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from \"axios\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport { cdCurrent, cdDefault, hasGroup, getUserBalance} from \"views/functions.js\"\r\nimport {BlankArea, NothingToDisplay, DisplayBalance} from \"CustomComponents/CustomComponents.js\"\r\nimport green from '@material-ui/core/colors/green';\r\nimport {setTab} from \"CustomComponents/CricDreamTabs.js\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n  },\r\n  symbolText: {\r\n      color: '#4CC417',\r\n      // backgroundColor: green[700],\r\n  },\r\n  headerText: {\r\n    color: '#FF7043',\r\n    fontWeight: 700,\r\n    // backgroundColor: green[700],\r\n  },\r\n  button: {\r\n      margin: theme.spacing(0, 1, 0),\r\n    },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}\r\n));\r\n\r\n\r\n\r\nfunction createData(name, calories, fat, carbs, protein, price) {\r\n  return {\r\n    name,\r\n    calories,\r\n    fat,\r\n    carbs,\r\n    protein,\r\n    price,\r\n    history: [\r\n      { date: '2020-01-05', customerId: '11091700', amount: 3 },\r\n      { date: '2020-01-02', customerId: 'Anonymous', amount: 1 },\r\n    ],\r\n  };\r\n}\r\n\r\n\r\n\r\n// const rows = [\r\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99),\r\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\r\n//   createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\r\n//   createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\r\n//   createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5),\r\n// ];\r\n\r\nexport default function Group() {\r\n  const classes = useStyles();\r\n  const [myGroupTableData, setMyGroupTableData] = useState([]);\r\n  const history = useHistory();\r\n  const [newCurrentGroup, setNewCurrentGroup] = useState(localStorage.getItem(\"groupName\"));\r\n  const [balance, setBalance] = useState(0);\r\n  const [openGroup, setOpenGroup] = useState(\"Eclair\")\r\n  useEffect(() => {\r\n    const a = async () => {\r\n        let myBalance = await getUserBalance();\r\n        setBalance(myBalance);\r\n        // console.log(myBalance); \r\n\r\n        window.localStorage.setItem(\"groupMember\", \"\");\r\n        var myUrl = `${process.env.REACT_APP_AXIOS_BASEPATH}/group/memberof/${localStorage.getItem(\"uid\")}`;\r\n        const teamResponse = await axios.get(myUrl);\r\n        // console.log(teamResponse.data[0].groups);\r\n        let setnew = true;\r\n        if (hasGroup()) {\r\n            // just check if current group is part of group list \r\n            let tmp = teamResponse.data[0].groups.find(x => x.gid == localStorage.getItem(\"gid\"));\r\n            if (tmp) setnew = false;\r\n        }\r\n        // console.log(`Set new is ${setnew}`);\r\n        if (setnew) {\r\n            if (teamResponse.data[0].groups.length > 0) {\r\n                var myGroup = teamResponse.data[0].groups[0];\r\n                // console.log(myGroup);\r\n                localStorage.setItem(\"gid\", myGroup.gid.toString());\r\n                localStorage.setItem(\"groupName\", myGroup.groupName);\r\n                localStorage.setItem(\"tournament\", myGroup.tournament);\r\n                localStorage.setItem(\"admin\", false)\r\n                setNewCurrentGroup(myGroup.name);\r\n            } else {\r\n                localStorage.setItem(\"gid\", \"\");\r\n                localStorage.setItem(\"groupName\", \"\");\r\n                localStorage.setItem(\"tournament\", \"\");\r\n                localStorage.setItem(\"admin\", false)\r\n                setNewCurrentGroup(\"\");\r\n            }\r\n        }\r\n        setMyGroupTableData(teamResponse.data[0].groups);\r\n        // console.log(teamResponse.data[0].groups);\r\n        }\r\n    a();\r\n}, [])\r\n\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\r\n  createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5),\r\n];\r\n  \r\nfunction TblHdr(props) {\r\n  return (\r\n    <Grid item xs={props.cols}>\r\n      <Typography className={classes.headerText}>{props.text}</Typography>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction handleNewGroup() {\r\n  //history.push(\"/newgroup\");        \r\n  setTab(parseInt(process.env.REACT_APP_BASEPOS) + parseInt(process.env.REACT_APP_NEWGROUP));\r\n};\r\n\r\nfunction handleJoinGroup() {\r\n  // history.push(\"/admin/newgroup\"); \r\n  localStorage.setItem(\"joinGroupCode\", \"\");       \r\n  setTab(parseInt(process.env.REACT_APP_BASEPOS) + parseInt(process.env.REACT_APP_JOINGROUP));\r\n};\r\n\r\nfunction ShowGroupHeader() {\r\n  return (\r\n  <Grid container color=\"secondary\" align=\"center\" spacing={0}>\r\n  <TblHdr cols={1} text=\"\" />\r\n  <TblHdr cols={7} text=\"Group\" />\r\n  <TblHdr cols={2} text=\"Curr\" />\r\n  <TblHdr cols={2} text=\"Def\" />\r\n  </Grid>\r\n  );\r\n}\r\n\r\nfunction handleGroupSelect(xxx) {\r\n  console.log(xxx);\r\n  setOpenGroup(xxx);\r\n}\r\n\r\nfunction GroupRow(props) {\r\n  const { row } = props;\r\n  // const [open, setOpen] = React.useState(false);\r\n  // console.log(props);\r\n  let isOpen = (openGroup === row.name) ? true : false;\r\n  console.log(`Key is ${row.name} ${isOpen} `);\r\n //onClick={handleGroupSelect(row.name)}\r\n  return (\r\n      <div>\r\n      <Grid container color=\"secondary\" align=\"center\" spacing={0}>\r\n        <Grid item xs={1}>\r\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={handleGroupSelect(row.name)}>\r\n            {isOpen ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          {row.name}\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n        {row.calories}\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n        {row.fat}\r\n        </Grid>\r\n        </Grid>\r\n      </div>\r\n  );\r\n}\r\n\r\n/***\r\nGroupRow.propTypes = {\r\n  row: PropTypes.shape({\r\n    calories: PropTypes.number.isRequired,\r\n    carbs: PropTypes.number.isRequired,\r\n    fat: PropTypes.number.isRequired,\r\n    history: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        amount: PropTypes.number.isRequired,\r\n        customerId: PropTypes.string.isRequired,\r\n        date: PropTypes.string.isRequired,\r\n      }),\r\n    ).isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    protein: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n***/\r\n\r\n/**\r\nfunction OrgGroupRow(props) {\r\n  const { row } = props;\r\n  // const [open, setOpen] = React.useState(false);\r\n  const classes = useStyles();\r\n  let isOpen = (openGroup === row.name);\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container color=\"secondary\" align=\"center\" spacing={0}>\r\n        <Grid item xs={1}>\r\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={handleGroupSelect(row.name)}>\r\n            {isOpen ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          {row.name}\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n        {row.calories}\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n        {row.fat}\r\n        </Grid>\r\n        </Grid>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                History\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Customer</TableCell>\r\n                    <TableCell align=\"right\">Amount</TableCell>\r\n                    <TableCell align=\"right\">Total price ($)</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {row.history.map((historyRow) => (\r\n                    <TableRow key={historyRow.date}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {historyRow.date}\r\n                      </TableCell>\r\n                      <TableCell>{historyRow.customerId}</TableCell>\r\n                      <TableCell align=\"right\">{historyRow.amount}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {Math.round(historyRow.amount * row.price * 100) / 100}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n */\r\n\r\n// function ShowGroupBody() {\r\n//   return (\r\n//   );\r\n// };\r\n\r\n  return (\r\n    <div className={classes.root} align=\"center\" key=\"groupinfo\">\r\n    <DisplayBalance balance={balance} />\r\n    <h3 align=\"center\">My Groups</h3>\r\n    <ShowGroupHeader />\r\n    {rows.map((row) => (\r\n      <GroupRow key={row.name} row={row} />\r\n    ))}\r\n    <BlankArea />\r\n    <Button key={\"create\"} variant=\"contained\" color=\"primary\" size=\"small\"\r\n      className={classes.button} onClick={handleNewGroup}>New Group\r\n    </Button>\r\n    <Button key={\"progile\"} variant=\"contained\" color=\"primary\" size=\"small\"\r\n        className={classes.button} onClick={handleJoinGroup}>Join Group\r\n    </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}