{"ast":null,"code":"import React from\"react\";// @material-ui/core components\nimport{makeStyles}from\"@material-ui/core/styles\";import Table from\"@material-ui/core/Table\";import TableHead from\"@material-ui/core/TableHead\";import TableRow from\"@material-ui/core/TableRow\";import TableBody from\"@material-ui/core/TableBody\";import TableCell from\"@material-ui/core/TableCell\";import Collapse from'@material-ui/core/Collapse';// core components\nimport styles from\"assets/jss/material-dashboard-react/components/tableStyle.js\";var useStyles=makeStyles(styles);export default function CustomTable(props){var classes=useStyles();var tableKey=props.tableKey,tableHead=props.tableHead,tableData=props.tableData,tableHeaderColor=props.tableHeaderColor;return/*#__PURE__*/React.createElement(\"div\",{className:classes.tableResponsive,key:tableKey},/*#__PURE__*/React.createElement(Table,{className:classes.table,key:tableKey},tableHead!==undefined?/*#__PURE__*/React.createElement(TableHead,{className:classes[tableHeaderColor+\"TableHeader\"]},/*#__PURE__*/React.createElement(TableRow,{className:classes.tableHeadRow},tableHead.map(function(prop,key){return/*#__PURE__*/React.createElement(TableCell,{className:classes.tableCell+\" \"+classes.tableHeadCell,key:key},prop);}))):null,/*#__PURE__*/React.createElement(TableBody,null,tableData.map(function(prop,key){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TableRow,{key:key,className:classes.TableBodyRow},prop.data.map(function(prop,key){return/*#__PURE__*/React.createElement(TableCell,{className:classes.tableCell,key:key},prop);})),/*#__PURE__*/React.createElement(TableRow,{key:key,selected:true},prop.collapse.map(function(prop,key){return/*#__PURE__*/React.createElement(TableCell,{key:key,style:{paddingBottom:0,paddingTop:0}},/*#__PURE__*/React.createElement(Collapse,{in:true,timeout:\"auto\",unmountOnExit:true},prop));})));}))));}CustomTable.defaultProps={tableHeaderColor:\"gray\"};","map":{"version":3,"sources":["D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/src/components/Table/Table.js"],"names":["React","makeStyles","Table","TableHead","TableRow","TableBody","TableCell","Collapse","styles","useStyles","CustomTable","props","classes","tableKey","tableHead","tableData","tableHeaderColor","tableResponsive","table","undefined","tableHeadRow","map","prop","key","tableCell","tableHeadCell","TableBodyRow","data","collapse","paddingBottom","paddingTop","defaultProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA;AACA,MAAOC,CAAAA,MAAP,KAAmB,8DAAnB,CAEA,GAAMC,CAAAA,SAAS,CAAGR,UAAU,CAACO,MAAD,CAA5B,CAEA,cAAe,SAASE,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,CACzC,GAAMC,CAAAA,OAAO,CAAGH,SAAS,EAAzB,CADyC,GAEjCI,CAAAA,QAFiC,CAEoBF,KAFpB,CAEjCE,QAFiC,CAEvBC,SAFuB,CAEoBH,KAFpB,CAEvBG,SAFuB,CAEZC,SAFY,CAEoBJ,KAFpB,CAEZI,SAFY,CAEDC,gBAFC,CAEoBL,KAFpB,CAEDK,gBAFC,CAGzC,mBACE,2BAAK,SAAS,CAAEJ,OAAO,CAACK,eAAxB,CAAyC,GAAG,CAAEJ,QAA9C,eACE,oBAAC,KAAD,EAAO,SAAS,CAAED,OAAO,CAACM,KAA1B,CAAiC,GAAG,CAAEL,QAAtC,EACGC,SAAS,GAAKK,SAAd,cACC,oBAAC,SAAD,EAAW,SAAS,CAAEP,OAAO,CAACI,gBAAgB,CAAG,aAApB,CAA7B,eACE,oBAAC,QAAD,EAAU,SAAS,CAAEJ,OAAO,CAACQ,YAA7B,EACGN,SAAS,CAACO,GAAV,CAAc,SAACC,IAAD,CAAOC,GAAP,CAAe,CAC5B,mBACE,oBAAC,SAAD,EACE,SAAS,CAAEX,OAAO,CAACY,SAAR,CAAoB,GAApB,CAA0BZ,OAAO,CAACa,aAD/C,CAEE,GAAG,CAAEF,GAFP,EAIGD,IAJH,CADF,CAQD,CATA,CADH,CADF,CADD,CAeG,IAhBN,cAiBE,oBAAC,SAAD,MACGP,SAAS,CAACM,GAAV,CAAc,SAACC,IAAD,CAAOC,GAAP,CAAe,CAC5B,mBACE,oBAAC,KAAD,CAAO,QAAP,mBACA,oBAAC,QAAD,EAAU,GAAG,CAAEA,GAAf,CAAoB,SAAS,CAAEX,OAAO,CAACc,YAAvC,EACGJ,IAAI,CAACK,IAAL,CAAUN,GAAV,CAAc,SAACC,IAAD,CAAOC,GAAP,CAAe,CAC5B,mBACE,oBAAC,SAAD,EAAW,SAAS,CAAEX,OAAO,CAACY,SAA9B,CAAyC,GAAG,CAAED,GAA9C,EACGD,IADH,CADF,CAKD,CANA,CADH,CADA,cAUA,oBAAC,QAAD,EAAU,GAAG,CAAEC,GAAf,CAAqB,QAAQ,CAAE,IAA/B,EACGD,IAAI,CAACM,QAAL,CAAcP,GAAd,CAAkB,SAACC,IAAD,CAAOC,GAAP,CAAe,CAChC,mBACE,oBAAC,SAAD,EAAW,GAAG,CAAEA,GAAhB,CAAqB,KAAK,CAAE,CAAEM,aAAa,CAAE,CAAjB,CAAoBC,UAAU,CAAE,CAAhC,CAA5B,eACD,oBAAC,QAAD,EAAU,EAAE,CAAE,IAAd,CAAoB,OAAO,CAAC,MAA5B,CAAmC,aAAa,KAAhD,EACGR,IADH,CADC,CADF,CAOD,CARA,CADH,CAVA,CADF,CAwBD,CAzBA,CADH,CAjBF,CADF,CADF,CAkDD,CAEDZ,WAAW,CAACqB,YAAZ,CAA2B,CACzBf,gBAAgB,CAAE,MADO,CAA3B","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Collapse from '@material-ui/core/Collapse';\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CustomTable(props) {\r\n  const classes = useStyles();\r\n  const { tableKey, tableHead, tableData, tableHeaderColor } = props;\r\n  return (\r\n    <div className={classes.tableResponsive} key={tableKey}>\r\n      <Table className={classes.table} key={tableKey}>\r\n        {tableHead !== undefined ? (\r\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\r\n            <TableRow className={classes.tableHeadRow}>\r\n              {tableHead.map((prop, key) => {\r\n                return (\r\n                  <TableCell\r\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\r\n                    key={key}\r\n                  >\r\n                    {prop}\r\n                  </TableCell>\r\n                );\r\n              })}\r\n            </TableRow>\r\n          </TableHead>\r\n        ) : null}\r\n        <TableBody>\r\n          {tableData.map((prop, key) => {\r\n            return (\r\n              <React.Fragment>\r\n              <TableRow key={key} className={classes.TableBodyRow}>\r\n                {prop.data.map((prop, key) => {\r\n                  return (\r\n                    <TableCell className={classes.tableCell} key={key}>\r\n                      {prop}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n              <TableRow key={key}  selected={true}>\r\n                {prop.collapse.map((prop, key) => {\r\n                  return (\r\n                    <TableCell key={key} style={{ paddingBottom: 0, paddingTop: 0 }}>\r\n                   <Collapse in={true} timeout=\"auto\" unmountOnExit>\r\n                     {prop}\r\n                   </Collapse>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nCustomTable.defaultProps = {\r\n  tableHeaderColor: \"gray\"\r\n};\r\n\r\nCustomTable.propTypes = {\r\n  tableHeaderColor: PropTypes.oneOf([\r\n    \"warning\",\r\n    \"primary\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"info\",\r\n    \"rose\",\r\n    \"gray\"\r\n  ]),\r\n  tableHead: PropTypes.arrayOf(PropTypes.string),\r\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\r\n};\r\n"]},"metadata":{},"sourceType":"module"}