{"ast":null,"code":"import _slicedToArray from \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\projects\\\\Cricket\\\\akshu close\\\\IPL\\\\material-dashboard-react-master\\\\src\\\\views\\\\Dashboard\\\\Dashboard.js\";\nimport React from \"react\"; // import { Beforeunload } from 'react-beforeunload';\n\nimport axios from \"axios\"; // react plugin for creating charts\n// @material-ui/core\n\nimport { useEffect, useState } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\"; // @material-ui/icons\n\nimport SportsHandballIcon from '@material-ui/icons/SportsHandball';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Update from \"@material-ui/icons/Update\";\nimport Accessibility from \"@material-ui/icons/Accessibility\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Table from \"components/Table/Table.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardIcon from \"components/Card/CardIcon.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport socketIOClient from \"socket.io-client\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\"; // import {Redirect} from 'react-router-dom';\n//  const ENDPOINT = \"https://happy-home-ipl-2020.herokuapp.com/\";\n\nvar ENDPOINT = \"http://localhost:4000\";\nvar sockConn = socketIOClient(ENDPOINT);\nvar useStyles = makeStyles(styles);\n\nfunction leavingDashboard() {\n  console.log(\"Leaving Dashboard\");\n  console.log(\"Leaving Dashboard wah wah \");\n  sockConn.disconnect();\n} // window.onbeforeunload = function(){\n//   leavingDashboard();\n//   return;\n// };\n\n\nexport default function Dashboard() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      rankArray = _useState2[0],\n      setRankArray = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rank = _useState4[0],\n      setRank = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      score = _useState6[0],\n      setScore = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      mostRuns = _useState8[0],\n      setMostRuns = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      mostWickets = _useState10[0],\n      setMostwickets = _useState10[1]; // const [mvp, SetMvp] = useState();\n  // const { user } = useContext(UserContext);\n\n\n  var date = new Date().toDateString() + \" \" + new Date().toLocaleTimeString();\n\n  var tableData = function tableData(rankDetails) {\n    var arr = rankDetails.map(function (element) {\n      // console.log(element)\n      var displayName = element.displayName,\n          userName = element.userName,\n          grandScore = element.grandScore,\n          rank = element.rank; //const {rank,displayName,userName,grandScore}=element;\n      // return { data: Object.values({ rank, displayName, userName, displayName, grandScore }), collapse: [] }\n\n      return {\n        data: Object.values({\n          rank: rank,\n          displayName: displayName,\n          userName: userName,\n          grandScore: grandScore\n        }),\n        collapse: []\n      };\n    });\n    return arr;\n  };\n\n  var socketID; // axios.get(`/stat/sendmydashboard/${localStorage.getItem(\"gid\")}`);\n\n  useEffect(function () {\n    sockConn.connect(); // window.onbeforeunload = () => leavingDashboard();\n\n    console.log(\"Socket is \".concat(socketID)); // if (!localStorage.getItem(\"uid\"))\n    //   return  <Redirect  to=\"/signIn\" />\n    // console.log(windows.MYDATA);\n\n    sockConn.on(\"connect\", function () {\n      //socketID = socket.id;\n      // console.log(\"Socket id is \");\n      console.log(sockConn);\n      var sendMessage = {\n        page: \"DASH\",\n        gid: localStorage.getItem(\"gid\")\n      };\n      sockConn.emit(\"page\", sendMessage);\n      console.log(\"dashboard connected\");\n      sockConn.on(\"rank\", function (rank) {\n        console.log(new Date());\n        console.log(localStorage.getItem(\"uid\"));\n        var allRank = rank.filter(function (x) {\n          return x.gid === parseInt(localStorage.getItem(\"gid\"));\n        });\n        var userDetails = allRank.filter(function (x) {\n          return x.uid === parseInt(localStorage.getItem(\"uid\"));\n        });\n\n        if (userDetails.length > 0) {\n          // if details of current user found (current user is a member of group 1)\n          // console.log(\"Data available\");\n          setRank(userDetails[0].rank);\n          setScore(userDetails[0].grandScore);\n          setRankArray(tableData(allRank));\n        } else if (localStorage.getItem(\"admin\") === \"true\") {// current user is not member of the group but is ADMIN. Thus show the rank details\n          // setRankArray(tableData(allRank));\n        }\n      });\n      sockConn.on(\"maxRun\", function (maxRun) {\n        var allMaxRun = maxRun.filter(function (x) {\n          return x.gid === parseInt(localStorage.getItem(\"gid\"));\n        });\n        var runDetails = allMaxRun.filter(function (x) {\n          return x.uid === parseInt(localStorage.getItem(\"uid\"));\n        }); // console.log(runDetails)\n\n        if (runDetails.length > 0) {\n          setMostRuns(runDetails[0]);\n        }\n      });\n      sockConn.on(\"maxWicket\", function (maxWicket) {\n        var allMaxWicket = maxWicket.filter(function (x) {\n          return x.gid === parseInt(localStorage.getItem(\"gid\"));\n        });\n        var wicketDetails = allMaxWicket.filter(function (x) {\n          return x.uid === parseInt(localStorage.getItem(\"uid\"));\n        }); // console.log(wicketDetails);\n\n        if (wicketDetails.length > 0) {\n          setMostwickets(wicketDetails[0]);\n        }\n      });\n    });\n    return function () {\n      // componentwillunmount in functional component.\n      // Anything in here is fired on component unmount.\n      leavingDashboard();\n    };\n  }, []); // }, [rankArray]);\n\n  function ShowUserBoard() {\n    if (localStorage.getItem(\"ismember\") === \"true\") return /*#__PURE__*/React.createElement(GridContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 6,\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      color: \"warning\",\n      stats: true,\n      icon: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardIcon, {\n      color: \"warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(GroupIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"h2\", {\n      className: classes.cardCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }, \"Rank\"), /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.cardTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }, rank)), /*#__PURE__*/React.createElement(CardFooter, {\n      stats: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.stats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(GroupIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#pablo\",\n      onClick: function onClick(e) {\n        return e.preventDefault();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, localStorage.getItem(\"groupName\")))))), /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 6,\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      color: \"success\",\n      stats: true,\n      icon: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardIcon, {\n      color: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TimelineIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.cardCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }, \"Total Points\"), /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.cardTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 15\n      }\n    }, score)), /*#__PURE__*/React.createElement(CardFooter, {\n      stats: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.stats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Update, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }), localStorage.getItem(\"tournament\"))))), /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 6,\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      color: \"info\",\n      stats: true,\n      icon: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardIcon, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Accessibility, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.cardCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 15\n      }\n    }, \"Most Runs\"), /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.cardTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 15\n      }\n    }, mostRuns ? mostRuns.maxRunPlayerName : \"\")), /*#__PURE__*/React.createElement(CardFooter, {\n      stats: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.stats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Accessibility, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }), mostRuns ? mostRuns.maxRun : \"\")))), /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 6,\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      color: \"danger\",\n      stats: true,\n      icon: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardIcon, {\n      color: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(SportsHandballIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.cardCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 15\n      }\n    }, \"Most Wickets\"), /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.cardTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 15\n      }\n    }, mostWickets ? mostWickets.maxWicketPlayerName : \"\")), /*#__PURE__*/React.createElement(CardFooter, {\n      stats: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.stats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(SportsHandballIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }), mostWickets ? mostWickets.maxWicket : \"\")))));else return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 16\n      }\n    }); // no display if not a member\n  }\n\n  function ShowUserRank() {\n    if (localStorage.getItem(\"ismember\") === \"true\" || localStorage.getItem(\"admin\") === \"true\") return /*#__PURE__*/React.createElement(GridContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      color: \"warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: classes.cardTitleWhite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    }, \"Franchise Score Board\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.cardCategoryWhite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 13\n      }\n    }, \"Updated as of \".concat(date))), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      tableHeaderColor: \"warning\",\n      tableHead: [\"Rank\", \"Franchise\", \"Owner\", \"Score\"],\n      tableData: rankArray,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }\n    })))));else return /*#__PURE__*/React.createElement(GridContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      color: \"warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: classes.cardTitleWhite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 13\n      }\n    }, \"Not a member of this group\")))));\n  }\n\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ShowUserBoard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ShowUserRank, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["D:/projects/Cricket/akshu close/IPL/material-dashboard-react-master/src/views/Dashboard/Dashboard.js"],"names":["React","axios","useEffect","useState","makeStyles","SportsHandballIcon","TimelineIcon","GroupIcon","Update","Accessibility","GridItem","GridContainer","Table","Card","CardHeader","CardIcon","CardBody","CardFooter","socketIOClient","styles","ENDPOINT","sockConn","useStyles","leavingDashboard","console","log","disconnect","Dashboard","rankArray","setRankArray","rank","setRank","score","setScore","mostRuns","setMostRuns","mostWickets","setMostwickets","date","Date","toDateString","toLocaleTimeString","tableData","rankDetails","arr","map","element","displayName","userName","grandScore","data","Object","values","collapse","socketID","connect","on","sendMessage","page","gid","localStorage","getItem","emit","allRank","filter","x","parseInt","userDetails","uid","length","maxRun","allMaxRun","runDetails","maxWicket","allMaxWicket","wicketDetails","ShowUserBoard","classes","cardCategory","cardTitle","stats","e","preventDefault","maxRunPlayerName","maxWicketPlayerName","ShowUserRank","cardTitleWhite","cardCategoryWhite"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n// import { Beforeunload } from 'react-beforeunload';\r\nimport axios from \"axios\";\r\n// react plugin for creating charts\r\n\r\n// @material-ui/core\r\nimport { useEffect, useState } from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/icons\r\nimport SportsHandballIcon from '@material-ui/icons/SportsHandball';\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\nimport Update from \"@material-ui/icons/Update\";\r\n\r\nimport Accessibility from \"@material-ui/icons/Accessibility\";\r\n\r\n\r\n// core components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Table from \"components/Table/Table.js\";\r\n\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardIcon from \"components/Card/CardIcon.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\n\r\nimport socketIOClient from \"socket.io-client\";\r\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\n// import {Redirect} from 'react-router-dom';\r\n\r\n//  const ENDPOINT = \"https://happy-home-ipl-2020.herokuapp.com/\";\r\nconst ENDPOINT = \"http://localhost:4000\";\r\n\r\nconst sockConn = socketIOClient(ENDPOINT);\r\n\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\n\r\nfunction leavingDashboard() {\r\n  console.log(\"Leaving Dashboard\");\r\n  console.log(\"Leaving Dashboard wah wah \");\r\n  sockConn.disconnect();\r\n\r\n}\r\n\r\n\r\n// window.onbeforeunload = function(){\r\n//   leavingDashboard();\r\n//   return;\r\n// };\r\n\r\n\r\n\r\nexport default function Dashboard() {\r\n\r\n  const [rankArray, setRankArray] = useState([]);\r\n  const [rank, setRank] = useState();\r\n  const [score, setScore] = useState(0);\r\n  const [mostRuns, setMostRuns] = useState({});\r\n  const [mostWickets, setMostwickets] = useState({});\r\n  // const [mvp, SetMvp] = useState();\r\n  // const { user } = useContext(UserContext);\r\n  const date = new Date().toDateString() + \" \" + new Date().toLocaleTimeString();\r\n  \r\n\r\n\r\n  const tableData = (rankDetails) => {\r\n    const arr = rankDetails.map(element => {\r\n      // console.log(element)\r\n      const { displayName, userName, grandScore, rank } = element;\r\n      //const {rank,displayName,userName,grandScore}=element;\r\n      // return { data: Object.values({ rank, displayName, userName, displayName, grandScore }), collapse: [] }\r\n      return { data: Object.values({ rank, displayName, userName, grandScore }), collapse: [] }\r\n    });\r\n\r\n    return arr;\r\n  }\r\n\r\n  var socketID;\r\n\r\n  // axios.get(`/stat/sendmydashboard/${localStorage.getItem(\"gid\")}`);\r\n  useEffect(() => {\r\n    sockConn.connect();\r\n    // window.onbeforeunload = () => leavingDashboard();\r\n    console.log(`Socket is ${socketID}`);\r\n    // if (!localStorage.getItem(\"uid\"))\r\n    //   return  <Redirect  to=\"/signIn\" />\r\n    // console.log(windows.MYDATA);\r\n\r\n    sockConn.on(\"connect\", function() {\r\n      //socketID = socket.id;\r\n      // console.log(\"Socket id is \");\r\n      console.log(sockConn);\r\n      var sendMessage = {page: \"DASH\", gid: localStorage.getItem(\"gid\")};\r\n      sockConn.emit(\"page\", sendMessage);\r\n      console.log(\"dashboard connected\");\r\n      sockConn.on(\"rank\", (rank) => {\r\n        console.log(new Date());\r\n        console.log(localStorage.getItem(\"uid\"))\r\n        const allRank = rank.filter(x => x.gid === parseInt(localStorage.getItem(\"gid\")));\r\n        const userDetails = allRank.filter(x => x.uid === parseInt(localStorage.getItem(\"uid\")));\r\n\r\n        if (userDetails.length > 0) {\r\n          // if details of current user found (current user is a member of group 1)\r\n          // console.log(\"Data available\");\r\n          setRank(userDetails[0].rank);\r\n          setScore(userDetails[0].grandScore)\r\n          setRankArray(tableData(allRank));\r\n        } else if (localStorage.getItem(\"admin\") === \"true\") {\r\n          // current user is not member of the group but is ADMIN. Thus show the rank details\r\n          // setRankArray(tableData(allRank));\r\n        }\r\n\r\n      });\r\n\r\n      sockConn.on(\"maxRun\", (maxRun) => {\r\n\r\n        const allMaxRun = maxRun.filter(x => x.gid === parseInt(localStorage.getItem(\"gid\")));\r\n        const runDetails = allMaxRun.filter(x => x.uid === parseInt(localStorage.getItem(\"uid\")));\r\n        // console.log(runDetails)\r\n        if (runDetails.length > 0) {\r\n          setMostRuns(runDetails[0])\r\n        }\r\n\r\n      });\r\n\r\n      sockConn.on(\"maxWicket\", (maxWicket) => {\r\n        const allMaxWicket = maxWicket.filter(x => x.gid === parseInt(localStorage.getItem(\"gid\")));\r\n        const wicketDetails = allMaxWicket.filter(x => x.uid === parseInt(localStorage.getItem(\"uid\")));\r\n        // console.log(wicketDetails);\r\n        if (wicketDetails.length > 0) {\r\n          setMostwickets(wicketDetails[0]);\r\n        }\r\n\r\n      });\r\n    });\r\n    \r\n    return () => {\r\n      // componentwillunmount in functional component.\r\n      // Anything in here is fired on component unmount.\r\n      leavingDashboard();\r\n  }\r\n   \r\n\r\n  }, []);\r\n// }, [rankArray]);\r\n\r\n  function ShowUserBoard() {\r\n    if (localStorage.getItem(\"ismember\") === \"true\")\r\n      return(\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={6} md={3}>\r\n          <Card>\r\n            <CardHeader color=\"warning\" stats icon>\r\n              <CardIcon color=\"warning\">\r\n                <GroupIcon />\r\n              </CardIcon>\r\n              <h2 className={classes.cardCategory}>Rank</h2>\r\n              <h3 className={classes.cardTitle}>\r\n                {rank}\r\n              </h3>\r\n            </CardHeader>\r\n            <CardFooter stats>\r\n              <div className={classes.stats}>\r\n                <GroupIcon />\r\n                <a href=\"#pablo\" onClick={e => e.preventDefault()}>\r\n                  {localStorage.getItem(\"groupName\")}\r\n                </a>\r\n              </div>\r\n            </CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={6} md={3}>\r\n          <Card>\r\n            <CardHeader color=\"success\" stats icon>\r\n              <CardIcon color=\"success\">\r\n                <TimelineIcon />\r\n              </CardIcon>\r\n              <p className={classes.cardCategory}>Total Points</p>\r\n              <h3 className={classes.cardTitle}>{score}</h3>\r\n            </CardHeader>\r\n            <CardFooter stats>\r\n              <div className={classes.stats}>\r\n                <Update />\r\n                {localStorage.getItem(\"tournament\")}\r\n              </div>\r\n            </CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={6} md={3}>\r\n          <Card>\r\n            <CardHeader color=\"info\" stats icon>\r\n              <CardIcon color=\"info\">\r\n                <Accessibility />\r\n              </CardIcon>\r\n              <p className={classes.cardCategory}>Most Runs</p>\r\n              <h3 className={classes.cardTitle}>{mostRuns ? mostRuns.maxRunPlayerName : \"\"}</h3>\r\n            </CardHeader>\r\n            <CardFooter stats>\r\n              <div className={classes.stats}>\r\n                <Accessibility />\r\n                {mostRuns ? mostRuns.maxRun : \"\"}\r\n              </div>\r\n            </CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={6} md={3}>\r\n          <Card>\r\n            <CardHeader color=\"danger\" stats icon>\r\n              <CardIcon color=\"danger\">\r\n                <SportsHandballIcon />\r\n              </CardIcon>\r\n              <p className={classes.cardCategory}>Most Wickets</p>\r\n              <h3 className={classes.cardTitle}>{mostWickets ? mostWickets.maxWicketPlayerName : \"\"}</h3>\r\n            </CardHeader>\r\n            <CardFooter stats>\r\n              <div className={classes.stats}>\r\n                <SportsHandballIcon />\r\n                {mostWickets ? mostWickets.maxWicket : \"\"}\r\n              </div>\r\n            </CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n      )\r\n    else\r\n        return(<div></div>);        // no display if not a member\r\n  } \r\n\r\n  function ShowUserRank() {\r\n    if ((localStorage.getItem(\"ismember\") === \"true\") || (localStorage.getItem(\"admin\") === \"true\"))\r\n    return(\r\n    <GridContainer>\r\n      <GridItem xs={12} sm={12} md={12}>\r\n        <Card>\r\n          <CardHeader color=\"warning\">\r\n\r\n            <h4 className={classes.cardTitleWhite}>Franchise Score Board</h4>\r\n            <p className={classes.cardCategoryWhite}>\r\n              {`Updated as of ${date}`}\r\n            </p>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <Table\r\n              tableHeaderColor=\"warning\"\r\n              tableHead={[\"Rank\", \"Franchise\", \"Owner\", \"Score\"]}\r\n              tableData={rankArray}\r\n            />\r\n          </CardBody>\r\n        </Card>\r\n      </GridItem>\r\n    </GridContainer>\r\n    )\r\n    else \r\n    return (\r\n      <GridContainer>\r\n      <GridItem xs={12} sm={12} md={12}>\r\n        <Card>\r\n          <CardHeader color=\"warning\">\r\n            <h4 className={classes.cardTitleWhite}>Not a member of this group</h4>\r\n          </CardHeader>\r\n        </Card>\r\n      </GridItem>\r\n    </GridContainer>\r\n    )\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <ShowUserBoard />\r\n      <ShowUserRank />\r\n      {/* <Beforeunload onBeforeunload={(event) => event.preventDefault()} /> */}\r\n      {/* <Beforeunload onBeforeunload={leavingDashboard} /> */}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}