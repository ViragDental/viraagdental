import React, { useEffect, useState } from 'react';
import axios from "axios";

import Grid from "@material-ui/core/Grid";
import Table from "components/Table/Table.js";
import GridItem from "components/Grid/GridItem.js";
import Card from "components/Card/Card.js";
// import CardAvatar from "components/Card/CardAvatar.js";
import CardBody from "components/Card/CardBody.js";

import Accordion from '@material-ui/core/Accordion';
import AccordionSummary from '@material-ui/core/AccordionSummary';
//import AccordionDetails from '@material-ui/core/AccordionDetails';
// import { makeStyles } from '@material-ui/core/styles';
import Typography from '@material-ui/core/Typography';

import { makeStyles, useTheme } from '@material-ui/core/styles';
// import styles from "assets/jss/material-dashboard-react/views/dashboardStyle.js";
import socketIOClient from "socket.io-client";

// const ENDPOINT = "https://happy-home-ipl-2020.herokuapp.com/";
const ENDPOINT = "http://localhost:4000";

const drawerWidth = 100;
const useStyles = makeStyles((theme) => ({
    margin: {
        margin: theme.spacing(1),
    },
    image: {
        height: "200px"
    },
    container: {
        backgroundImage: "url(\"../RCB/5334.jpg\")",
        backgroundSize: 'cover'
    }, drawer: {
        width: drawerWidth,
        flexShrink: 0,
    },
    drawerPaper: {
        width: drawerWidth,
    },
    drawerHeader: {
        display: 'flex',
        alignItems: 'center',
        padding: theme.spacing(0, 1),
        // necessary for content to be below app bar
        ...theme.mixins.toolbar,
        justifyContent: 'flex-start',
    },
    sold: {
        color: "green"
    }, cardCategoryWhite: {
        color: "rgba(255,255,255,.62)",
        margin: "0",
        fontSize: "14px",
        marginTop: "0",
        marginBottom: "0"
    },
    cardTitleWhite: {
        color: "#FFFFFF",
        marginTop: "0px",
        minHeight: "auto",
        fontWeight: "300",
        fontFamily: "'Roboto', 'Helvetica', 'Arial', sans-serif",
        marginBottom: "3px",
        textDecoration: "none"
    }, large: {
        width: theme.spacing(12),
        height: theme.spacing(12),
    },
}));


export default function App() { 
  const classes = useStyles();
  // const useStyles = makeStyles(styles);
  const [teamArray, setTeamArray] = useState([]);
  const socket = socketIOClient(ENDPOINT);
  axios.get(`/stat/sendmystat/${localStorage.getItem("gid")}`);

  useEffect(() => {  
    socket.on("connect", () => {
      console.log("stat connected")
      socket.on("brief", (stat) => {
        var gStat = stat.filter(x => x.gid === parseInt(localStorage.getItem("gid")));
        if (gStat.length > 0) {
          // console.log(gStat)
          setTeamArray(gStat)
        }
      })
    });

  }, [teamArray])


  return (teamArray.map(team =>
    <Grid container justify="center" alignItems="center">
    <Grid item xs={12}>
        <div>
            <Grid container justify="center" alignItems="center" >
                <GridItem xs={12} sm={12} md={12} lg={12} >
                    <Card profile>
                        <CardBody profile>
                        <h3 className={classes.cardTitle}>{team.displayName} ({team.userScore})</h3>
                            <Table
                                tableHeaderColor="warning"
                                tableHead={["Player Name", "Score"]}
                                tableData={team.playerStat.map(player => {
                                  const arr = [player.playerName, player.playerScore]
                                    return { data: arr, collapse: [] }
                                })}
                            />
                        </CardBody>
                    </Card>
                </GridItem>
            </Grid>
        </div>
    </Grid>
    </Grid>
  ));

};


